'
'Example for Accel8 Click
'
'    Date          : okt 2018.
'    Author        : Katarina Perendic
'
'Test configuration AVR :
'    
'    MCU              : ATMEGA32
'    Dev. Board       : EasyAVR v7 
'    AVR Compiler ver : v7.0.1.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes I2C module and sets INT pin as INPUT
'- Application Initialization - Initialization driver init, reset chip and start configuration chip for measurement
'- Application Task - (code snippet) - Reads Accel X/Y/Z axis, Gyro X/Y/Z axis and device Temperature. 
'                                      All data logs on the USBUART every 2 sec.
'
'
program Click_Accel8_AVR

include Click_Accel8_types
include Click_Accel8_config
dim
    Temperature as float 
    X_gyroAxis as int16_t 
    Y_gyroAxis as int16_t 
    Z_gyroAxis as int16_t 
    X_accelAxis as int16_t 
    Y_accelAxis as int16_t 
    Z_accelAxis as int16_t 
    gyroRange as uint16_t 
    accelRange as uint8_t 
    demoText as char[50] 
    
sub procedure systemInit() 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT) 
    mikrobus_i2cInit(_MIKROBUS1, @_ACCEL8_I2C_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART, 115200) 
    mikrobus_logWrite(" --- System Init ---", _LOG_LINE) 
    Delay_ms(100) 
end sub

sub procedure applicationInit() 
    accel8_i2cDriverInit(T_ACCEL8_P(@_MIKROBUS1_GPIO), T_ACCEL8_P(@_MIKROBUS1_I2C), _ACCEL8_DEVICE_SLAVE_ADDRESS_ADD) 
    mikrobus_logWrite(" --- Device Reset --- ", _LOG_LINE) 
    accel8_writeByte(_ACCEL8_REG_PWR_MGMT_1, _ACCEL8_PM1_DEVICE_RESET) 
    accel8_writeByte(_ACCEL8_REG_SIGNAL_PATH_RESET, (_ACCEL8_GYRO_RESET or _ACCEL8_ACCEL_RESET) or _ACCEL8_TEMP_RESET) 
    mikrobus_logWrite(" --- Device Configuration --- ", _LOG_LINE) 
    accel8_writeByte(_ACCEL8_REG_PWR_MGMT_1, _ACCEL8_PM1_CLKSEL_INTERNAL_8MHZ_OSCILLATOR) 
    accel8_writeByte(_ACCEL8_REG_INT_ENABLE, _ACCEL8_INTE_DATA_RDY_ENABLE) 
    gyroRange = accel8_gyroConfig(_ACCEL8_GYRO_CFG_FULL_SCALE_RANGE_250dbs) 
    accelRange = accel8_accelConfig(_ACCEL8_ACCEL_CFG_FULL_SCALE_RANGE_2g) 
    accel8_writeByte(_ACCEL8_REG_FIFO_EN, (((_ACCEL8_FIFO_ENABLE_TEMP or _ACCEL8_FIFO_ENABLE_X_AXIS_GYRO) or _ACCEL8_FIFO_ENABLE_Y_AXIS_GYRO) or _ACCEL8_FIFO_ENABLE_Z_AXIS_GYRO) or _ACCEL8_FIFO_ENABLE_ACCEL) 
    Delay_ms(1000) 
    mikrobus_logWrite(" --- Start Measurement --- ", _LOG_LINE) 
end sub

sub procedure applicationTask() 
    accel8_getAccelAxis(@X_accelAxis, @Y_accelAxis, @Z_accelAxis) 
    accel8_getGyroAxis(@X_gyroAxis, @Y_gyroAxis, @Z_gyroAxis) 
    Temperature = accel8_getTemperature() 
    mikrobus_logWrite("________________ Accel 8 click _________________", _LOG_LINE) 
    mikrobus_logWrite("|  Data   | X axis | Y axis | Z axis |  Range  |", _LOG_LINE) 
    mikrobus_logWrite("|_________|________|________|________|_________|", _LOG_LINE) 
    mikrobus_logWrite("|  Accel  |", _LOG_TEXT) 
    IntToStr(X_accelAxis, demoText) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite("  |", _LOG_TEXT) 
    IntToStr(Y_accelAxis, demoText) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite("  |", _LOG_TEXT) 
    IntToStr(Z_accelAxis, demoText) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite("  |", _LOG_TEXT) 
    IntToStr(accelRange, demoText) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite(" g |", _LOG_LINE) 
    mikrobus_logWrite("|_________|________|________|________|_________|", _LOG_LINE) 
    mikrobus_logWrite("|  Gyro   |", _LOG_TEXT) 
    IntToStr(X_gyroAxis, demoText) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite("  |", _LOG_TEXT) 
    IntToStr(Y_gyroAxis, demoText) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite("  |", _LOG_TEXT) 
    IntToStr(Z_gyroAxis, demoText) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite("  |", _LOG_TEXT) 
    IntToStr(gyroRange, demoText) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite("dps|", _LOG_LINE) 
    mikrobus_logWrite("|_________|________|________|________|_________|", _LOG_LINE) 
    FloatToStr(Temperature, demoText) 
    demoText[5] = 0 
    mikrobus_logWrite("|  Temp   |", _LOG_TEXT) 
    mikrobus_logWrite(demoText, _LOG_TEXT) 
    mikrobus_logWrite("  C         |", _LOG_LINE) 
    mikrobus_logWrite("|_________|_________________|", _LOG_LINE) 
    mikrobus_logWrite("  ", _LOG_LINE) 
    Delay_ms(2000) 
end sub

main :

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend
end.