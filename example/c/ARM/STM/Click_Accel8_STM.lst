;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1.10.2018. 15:54:23
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x2A3D0000  	10813
0x0008	0x28F10000  	10481
0x000C	0x28F10000  	10481
0x0010	0x28F10000  	10481
0x0014	0x28F10000  	10481
0x0018	0x28F10000  	10481
0x001C	0x28F10000  	10481
0x0020	0x28F10000  	10481
0x0024	0x28F10000  	10481
0x0028	0x28F10000  	10481
0x002C	0x28F10000  	10481
0x0030	0x28F10000  	10481
0x0034	0x28F10000  	10481
0x0038	0x28F10000  	10481
0x003C	0x28F10000  	10481
0x0040	0x28F10000  	10481
0x0044	0x28F10000  	10481
0x0048	0x28F10000  	10481
0x004C	0x28F10000  	10481
0x0050	0x28F10000  	10481
0x0054	0x28F10000  	10481
0x0058	0x28F10000  	10481
0x005C	0x28F10000  	10481
0x0060	0x28F10000  	10481
0x0064	0x28F10000  	10481
0x0068	0x28F10000  	10481
0x006C	0x28F10000  	10481
0x0070	0x28F10000  	10481
0x0074	0x28F10000  	10481
0x0078	0x28F10000  	10481
0x007C	0x28F10000  	10481
0x0080	0x28F10000  	10481
0x0084	0x28F10000  	10481
0x0088	0x28F10000  	10481
0x008C	0x28F10000  	10481
0x0090	0x28F10000  	10481
0x0094	0x28F10000  	10481
0x0098	0x28F10000  	10481
0x009C	0x28F10000  	10481
0x00A0	0x28F10000  	10481
0x00A4	0x28F10000  	10481
0x00A8	0x28F10000  	10481
0x00AC	0x28F10000  	10481
0x00B0	0x28F10000  	10481
0x00B4	0x28F10000  	10481
0x00B8	0x28F10000  	10481
0x00BC	0x28F10000  	10481
0x00C0	0x28F10000  	10481
0x00C4	0x28F10000  	10481
0x00C8	0x28F10000  	10481
0x00CC	0x28F10000  	10481
0x00D0	0x28F10000  	10481
0x00D4	0x28F10000  	10481
0x00D8	0x28F10000  	10481
0x00DC	0x28F10000  	10481
0x00E0	0x28F10000  	10481
0x00E4	0x28F10000  	10481
0x00E8	0x28F10000  	10481
0x00EC	0x28F10000  	10481
0x00F0	0x28F10000  	10481
0x00F4	0x28F10000  	10481
0x00F8	0x28F10000  	10481
0x00FC	0x28F10000  	10481
0x0100	0x28F10000  	10481
0x0104	0x28F10000  	10481
0x0108	0x28F10000  	10481
0x010C	0x28F10000  	10481
0x0110	0x28F10000  	10481
0x0114	0x28F10000  	10481
0x0118	0x28F10000  	10481
0x011C	0x28F10000  	10481
0x0120	0x28F10000  	10481
0x0124	0x28F10000  	10481
0x0128	0x28F10000  	10481
0x012C	0x28F10000  	10481
0x0130	0x28F10000  	10481
0x0134	0x28F10000  	10481
0x0138	0x28F10000  	10481
0x013C	0x28F10000  	10481
0x0140	0x28F10000  	10481
0x0144	0x28F10000  	10481
0x0148	0x28F10000  	10481
0x014C	0x28F10000  	10481
; end of ____SysVT
_main:
;Click_Accel8_STM.c, 126 :: 		void main()
0x2A3C	0xF7FFFF5C  BL	10488
0x2A40	0xF000FA64  BL	12044
0x2A44	0xF7FFFF4A  BL	10460
0x2A48	0xF000FA12  BL	11888
;Click_Accel8_STM.c, 128 :: 		systemInit();
0x2A4C	0xF7FFFDF0  BL	_systemInit+0
;Click_Accel8_STM.c, 129 :: 		applicationInit();
0x2A50	0xF7FFFD8A  BL	_applicationInit+0
;Click_Accel8_STM.c, 131 :: 		while (1)
L_main6:
;Click_Accel8_STM.c, 133 :: 		applicationTask();
0x2A54	0xF7FFFE18  BL	_applicationTask+0
;Click_Accel8_STM.c, 134 :: 		}
0x2A58	0xE7FC    B	L_main6
;Click_Accel8_STM.c, 135 :: 		}
L_end_main:
L__main_end_loop:
0x2A5A	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x288C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x288E	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x2892	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x2896	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x289A	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x289C	0xB001    ADD	SP, SP, #4
0x289E	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x28A0	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x28A2	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x28A6	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x28AA	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x28AE	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x28B0	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x28B4	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x28B6	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x28B8	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x28BA	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x28BE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x28C2	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x28C4	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x28C8	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x28CA	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x28CC	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x28D0	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x28D4	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x28D6	0xB001    ADD	SP, SP, #4
0x28D8	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_Accel8_STM.c, 44 :: 		void systemInit()
0x2630	0xB081    SUB	SP, SP, #4
0x2632	0xF8CDE000  STR	LR, [SP, #0]
;Click_Accel8_STM.c, 46 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x2636	0x2201    MOVS	R2, #1
0x2638	0x2107    MOVS	R1, #7
0x263A	0x2000    MOVS	R0, #0
0x263C	0xF7FFFCC0  BL	_mikrobus_gpioInit+0
;Click_Accel8_STM.c, 47 :: 		mikrobus_i2cInit( _MIKROBUS1, &_ACCEL8_I2C_CFG[0] );
0x2640	0x480E    LDR	R0, [PC, #56]
0x2642	0x4601    MOV	R1, R0
0x2644	0x2000    MOVS	R0, #0
0x2646	0xF7FFFE85  BL	_mikrobus_i2cInit+0
;Click_Accel8_STM.c, 48 :: 		mikrobus_logInit( _LOG_USBUART_A, 115200 );
0x264A	0xF44F31E1  MOV	R1, #115200
0x264E	0x2020    MOVS	R0, #32
0x2650	0xF7FFFE98  BL	_mikrobus_logInit+0
;Click_Accel8_STM.c, 49 :: 		mikrobus_logWrite(" --- System Init ---", _LOG_LINE);
0x2654	0x480A    LDR	R0, [PC, #40]
0x2656	0x2102    MOVS	R1, #2
0x2658	0xF7FFFEEA  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 50 :: 		Delay_ms( 100 );
0x265C	0xF644777F  MOVW	R7, #20351
0x2660	0xF2C00712  MOVT	R7, #18
0x2664	0xBF00    NOP
0x2666	0xBF00    NOP
L_systemInit0:
0x2668	0x1E7F    SUBS	R7, R7, #1
0x266A	0xD1FD    BNE	L_systemInit0
0x266C	0xBF00    NOP
0x266E	0xBF00    NOP
0x2670	0xBF00    NOP
;Click_Accel8_STM.c, 51 :: 		}
L_end_systemInit:
0x2672	0xF8DDE000  LDR	LR, [SP, #0]
0x2676	0xB001    ADD	SP, SP, #4
0x2678	0x4770    BX	LR
0x267A	0xBF00    NOP
0x267C	0x262C0000  	__ACCEL8_I2C_CFG+0
0x2680	0x00002000  	?lstr1_Click_Accel8_STM+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1FC0	0xB081    SUB	SP, SP, #4
0x1FC2	0xF8CDE000  STR	LR, [SP, #0]
0x1FC6	0xFA5FF981  UXTB	R9, R1
0x1FCA	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x1FCE	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x1FD0	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1FD4	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1FD8	0xF7FFFF02  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x1FDC	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x1FDE	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1FE2	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1FE6	0xF7FFFD71  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x1FEA	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x1FEC	0x2001    MOVS	R0, #1
0x1FEE	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x1FF0	0x2800    CMP	R0, #0
0x1FF2	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x1FF4	0x2801    CMP	R0, #1
0x1FF6	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x1FF8	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x1FFA	0xF8DDE000  LDR	LR, [SP, #0]
0x1FFE	0xB001    ADD	SP, SP, #4
0x2000	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1DE0	0xB081    SUB	SP, SP, #4
0x1DE2	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x1DE6	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x1DE8	0x2901    CMP	R1, #1
0x1DEA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x1DEC	0xF2400110  MOVW	R1, #16
0x1DF0	0x4865    LDR	R0, [PC, #404]
0x1DF2	0xF7FFFC5B  BL	_GPIO_Digital_Input+0
0x1DF6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x1DF8	0xF2400110  MOVW	R1, #16
0x1DFC	0x4862    LDR	R0, [PC, #392]
0x1DFE	0xF7FFFC13  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x1E02	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x1E04	0x2901    CMP	R1, #1
0x1E06	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x1E08	0xF2400104  MOVW	R1, #4
0x1E0C	0x485F    LDR	R0, [PC, #380]
0x1E0E	0xF7FFFC4D  BL	_GPIO_Digital_Input+0
0x1E12	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x1E14	0xF2400104  MOVW	R1, #4
0x1E18	0x485C    LDR	R0, [PC, #368]
0x1E1A	0xF7FFFC05  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x1E1E	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x1E20	0x2901    CMP	R1, #1
0x1E22	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x1E24	0xF2420100  MOVW	R1, #8192
0x1E28	0x4859    LDR	R0, [PC, #356]
0x1E2A	0xF7FFFC3F  BL	_GPIO_Digital_Input+0
0x1E2E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x1E30	0xF2420100  MOVW	R1, #8192
0x1E34	0x4856    LDR	R0, [PC, #344]
0x1E36	0xF7FFFBF7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x1E3A	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x1E3C	0x2901    CMP	R1, #1
0x1E3E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x1E40	0xF2404100  MOVW	R1, #1024
0x1E44	0x4851    LDR	R0, [PC, #324]
0x1E46	0xF7FFFC31  BL	_GPIO_Digital_Input+0
0x1E4A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x1E4C	0xF2404100  MOVW	R1, #1024
0x1E50	0x484E    LDR	R0, [PC, #312]
0x1E52	0xF7FFFBE9  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x1E56	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x1E58	0x2901    CMP	R1, #1
0x1E5A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x1E5C	0xF6400100  MOVW	R1, #2048
0x1E60	0x484A    LDR	R0, [PC, #296]
0x1E62	0xF7FFFC23  BL	_GPIO_Digital_Input+0
0x1E66	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x1E68	0xF6400100  MOVW	R1, #2048
0x1E6C	0x4847    LDR	R0, [PC, #284]
0x1E6E	0xF7FFFBDB  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x1E72	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x1E74	0x2901    CMP	R1, #1
0x1E76	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x1E78	0xF2410100  MOVW	R1, #4096
0x1E7C	0x4843    LDR	R0, [PC, #268]
0x1E7E	0xF7FFFC15  BL	_GPIO_Digital_Input+0
0x1E82	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x1E84	0xF2410100  MOVW	R1, #4096
0x1E88	0x4840    LDR	R0, [PC, #256]
0x1E8A	0xF7FFFBCD  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x1E8E	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x1E90	0x2901    CMP	R1, #1
0x1E92	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x1E94	0xF2400101  MOVW	R1, #1
0x1E98	0x483B    LDR	R0, [PC, #236]
0x1E9A	0xF7FFFC07  BL	_GPIO_Digital_Input+0
0x1E9E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x1EA0	0xF2400101  MOVW	R1, #1
0x1EA4	0x4838    LDR	R0, [PC, #224]
0x1EA6	0xF7FFFBBF  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x1EAA	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x1EAC	0x2901    CMP	R1, #1
0x1EAE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x1EB0	0xF2404100  MOVW	R1, #1024
0x1EB4	0x4836    LDR	R0, [PC, #216]
0x1EB6	0xF7FFFBF9  BL	_GPIO_Digital_Input+0
0x1EBA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x1EBC	0xF2404100  MOVW	R1, #1024
0x1EC0	0x4833    LDR	R0, [PC, #204]
0x1EC2	0xF7FFFBB1  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x1EC6	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x1EC8	0x2901    CMP	R1, #1
0x1ECA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x1ECC	0xF2402100  MOVW	R1, #512
0x1ED0	0x482F    LDR	R0, [PC, #188]
0x1ED2	0xF7FFFBEB  BL	_GPIO_Digital_Input+0
0x1ED6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x1ED8	0xF2402100  MOVW	R1, #512
0x1EDC	0x482C    LDR	R0, [PC, #176]
0x1EDE	0xF7FFFBA3  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x1EE2	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x1EE4	0x2901    CMP	R1, #1
0x1EE6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x1EE8	0xF2401100  MOVW	R1, #256
0x1EEC	0x4828    LDR	R0, [PC, #160]
0x1EEE	0xF7FFFBDD  BL	_GPIO_Digital_Input+0
0x1EF2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x1EF4	0xF2401100  MOVW	R1, #256
0x1EF8	0x4825    LDR	R0, [PC, #148]
0x1EFA	0xF7FFFB95  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x1EFE	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x1F00	0x2901    CMP	R1, #1
0x1F02	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x1F04	0xF2400140  MOVW	R1, #64
0x1F08	0x4822    LDR	R0, [PC, #136]
0x1F0A	0xF7FFFBCF  BL	_GPIO_Digital_Input+0
0x1F0E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x1F10	0xF2400140  MOVW	R1, #64
0x1F14	0x481F    LDR	R0, [PC, #124]
0x1F16	0xF7FFFB87  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x1F1A	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x1F1C	0x2901    CMP	R1, #1
0x1F1E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x1F20	0xF2400180  MOVW	R1, #128
0x1F24	0x481B    LDR	R0, [PC, #108]
0x1F26	0xF7FFFBC1  BL	_GPIO_Digital_Input+0
0x1F2A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x1F2C	0xF2400180  MOVW	R1, #128
0x1F30	0x4818    LDR	R0, [PC, #96]
0x1F32	0xF7FFFB79  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x1F36	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x1F38	0x2001    MOVS	R0, #1
0x1F3A	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1F3C	0x2800    CMP	R0, #0
0x1F3E	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x1F42	0x2801    CMP	R0, #1
0x1F44	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x1F48	0x2802    CMP	R0, #2
0x1F4A	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x1F4E	0x2803    CMP	R0, #3
0x1F50	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x1F54	0x2804    CMP	R0, #4
0x1F56	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x1F5A	0x2805    CMP	R0, #5
0x1F5C	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x1F60	0x2806    CMP	R0, #6
0x1F62	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x1F66	0x2807    CMP	R0, #7
0x1F68	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x1F6A	0x2808    CMP	R0, #8
0x1F6C	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x1F6E	0x2809    CMP	R0, #9
0x1F70	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x1F72	0x280A    CMP	R0, #10
0x1F74	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x1F76	0x280B    CMP	R0, #11
0x1F78	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x1F7A	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x1F7C	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x1F7E	0xF8DDE000  LDR	LR, [SP, #0]
0x1F82	0xB001    ADD	SP, SP, #4
0x1F84	0x4770    BX	LR
0x1F86	0xBF00    NOP
0x1F88	0x08004001  	GPIOA_BASE+0
0x1F8C	0x10004001  	GPIOC_BASE+0
0x1F90	0x14004001  	GPIOD_BASE+0
0x1F94	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x16AC	0xB081    SUB	SP, SP, #4
0x16AE	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x16B2	0xF04F0242  MOV	R2, #66
0x16B6	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x16B8	0xF7FFFC46  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x16BC	0xF8DDE000  LDR	LR, [SP, #0]
0x16C0	0xB001    ADD	SP, SP, #4
0x16C2	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0F48	0xB081    SUB	SP, SP, #4
0x0F4A	0xF8CDE000  STR	LR, [SP, #0]
0x0F4E	0xB28C    UXTH	R4, R1
0x0F50	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x0F52	0x4B77    LDR	R3, [PC, #476]
0x0F54	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0F58	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0F5A	0x4618    MOV	R0, R3
0x0F5C	0xF7FFFCD0  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0F60	0xF1B40FFF  CMP	R4, #255
0x0F64	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x0F66	0x4B73    LDR	R3, [PC, #460]
0x0F68	0x429D    CMP	R5, R3
0x0F6A	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0F6C	0xF04F3333  MOV	R3, #858993459
0x0F70	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0F72	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0F74	0x2D42    CMP	R5, #66
0x0F76	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0F78	0xF04F3344  MOV	R3, #1145324612
0x0F7C	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0F7E	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0F80	0xF64F73FF  MOVW	R3, #65535
0x0F84	0x429C    CMP	R4, R3
0x0F86	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0F88	0x4B6A    LDR	R3, [PC, #424]
0x0F8A	0x429D    CMP	R5, R3
0x0F8C	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0F8E	0xF04F3333  MOV	R3, #858993459
0x0F92	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0F94	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0F96	0xF04F3333  MOV	R3, #858993459
0x0F9A	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0F9C	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0F9E	0x2D42    CMP	R5, #66
0x0FA0	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0FA2	0xF04F3344  MOV	R3, #1145324612
0x0FA6	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x0FA8	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0FAA	0xF04F3344  MOV	R3, #1145324612
0x0FAE	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0FB0	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0FB2	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0FB4	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x0FB6	0xF0050301  AND	R3, R5, #1
0x0FBA	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0FBC	0x2100    MOVS	R1, #0
0x0FBE	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0FC0	0xF0050302  AND	R3, R5, #2
0x0FC4	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x0FC6	0xF40573C0  AND	R3, R5, #384
0x0FCA	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0FCC	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0FCE	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0FD0	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0FD2	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0FD4	0xF0050304  AND	R3, R5, #4
0x0FD8	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x0FDA	0xF0050320  AND	R3, R5, #32
0x0FDE	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0FE0	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0FE2	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0FE4	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x0FE6	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x0FE8	0xF0050308  AND	R3, R5, #8
0x0FEC	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x0FEE	0xF0050320  AND	R3, R5, #32
0x0FF2	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0FF4	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x0FF6	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x0FF8	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x0FFA	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x0FFC	0x4B4E    LDR	R3, [PC, #312]
0x0FFE	0xEA050303  AND	R3, R5, R3, LSL #0
0x1002	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x1004	0x2003    MOVS	R0, #3
0x1006	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x1008	0xF4057300  AND	R3, R5, #512
0x100C	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x100E	0x2002    MOVS	R0, #2
0x1010	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x1012	0xF4056380  AND	R3, R5, #1024
0x1016	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x1018	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x101A	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x101C	0xF005030C  AND	R3, R5, #12
0x1020	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x1022	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x1024	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x1026	0xF00403FF  AND	R3, R4, #255
0x102A	0xB29B    UXTH	R3, R3
0x102C	0x2B00    CMP	R3, #0
0x102E	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x1030	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x1032	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x1034	0xFA1FF884  UXTH	R8, R4
0x1038	0x4632    MOV	R2, R6
0x103A	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x103C	0x2808    CMP	R0, #8
0x103E	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x1040	0xF04F0301  MOV	R3, #1
0x1044	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x1048	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x104C	0x42A3    CMP	R3, R4
0x104E	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x1050	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x1052	0xF04F030F  MOV	R3, #15
0x1056	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x1058	0x43DB    MVN	R3, R3
0x105A	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x105E	0xFA01F305  LSL	R3, R1, R5
0x1062	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x1066	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x1068	0xF4067381  AND	R3, R6, #258
0x106C	0xF5B37F81  CMP	R3, #258
0x1070	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x1072	0xF2020414  ADDW	R4, R2, #20
0x1076	0xF04F0301  MOV	R3, #1
0x107A	0x4083    LSLS	R3, R0
0x107C	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x107E	0xF0060382  AND	R3, R6, #130
0x1082	0x2B82    CMP	R3, #130
0x1084	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x1086	0xF2020410  ADDW	R4, R2, #16
0x108A	0xF04F0301  MOV	R3, #1
0x108E	0x4083    LSLS	R3, R0
0x1090	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x1092	0x462F    MOV	R7, R5
0x1094	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x1096	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x1098	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x109A	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x109C	0xFA1FF088  UXTH	R0, R8
0x10A0	0x460F    MOV	R7, R1
0x10A2	0x4631    MOV	R1, R6
0x10A4	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x10A6	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x10A8	0x460F    MOV	R7, R1
0x10AA	0x4629    MOV	R1, R5
0x10AC	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x10AE	0xF1B00FFF  CMP	R0, #255
0x10B2	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x10B4	0x1D33    ADDS	R3, R6, #4
0x10B6	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x10BA	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x10BC	0x2A08    CMP	R2, #8
0x10BE	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x10C0	0xF2020408  ADDW	R4, R2, #8
0x10C4	0xF04F0301  MOV	R3, #1
0x10C8	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x10CC	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x10D0	0x42A3    CMP	R3, R4
0x10D2	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x10D4	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x10D6	0xF04F030F  MOV	R3, #15
0x10DA	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x10DC	0x43DB    MVN	R3, R3
0x10DE	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x10E2	0xFA07F305  LSL	R3, R7, R5
0x10E6	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x10EA	0xF4017381  AND	R3, R1, #258
0x10EE	0xF5B37F81  CMP	R3, #258
0x10F2	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x10F4	0xF2060514  ADDW	R5, R6, #20
0x10F8	0xF2020408  ADDW	R4, R2, #8
0x10FC	0xF04F0301  MOV	R3, #1
0x1100	0x40A3    LSLS	R3, R4
0x1102	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x1104	0xF0010382  AND	R3, R1, #130
0x1108	0x2B82    CMP	R3, #130
0x110A	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x110C	0xF2060510  ADDW	R5, R6, #16
0x1110	0xF2020408  ADDW	R4, R2, #8
0x1114	0xF04F0301  MOV	R3, #1
0x1118	0x40A3    LSLS	R3, R4
0x111A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x111C	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x111E	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x1120	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x1122	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x1124	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x1128	0xF8DDE000  LDR	LR, [SP, #0]
0x112C	0xB001    ADD	SP, SP, #4
0x112E	0x4770    BX	LR
0x1130	0xFC00FFFF  	#-1024
0x1134	0x00140008  	#524308
0x1138	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0900	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0902	0x4919    LDR	R1, [PC, #100]
0x0904	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0908	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x090A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x090C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x090E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0910	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0912	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0914	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0916	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0918	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x091A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x091C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x091E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0920	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0922	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0924	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0926	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x092A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x092C	0x490F    LDR	R1, [PC, #60]
0x092E	0x4288    CMP	R0, R1
0x0930	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0932	0x490F    LDR	R1, [PC, #60]
0x0934	0x4288    CMP	R0, R1
0x0936	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0938	0x490E    LDR	R1, [PC, #56]
0x093A	0x4288    CMP	R0, R1
0x093C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x093E	0x490E    LDR	R1, [PC, #56]
0x0940	0x4288    CMP	R0, R1
0x0942	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0944	0x490D    LDR	R1, [PC, #52]
0x0946	0x4288    CMP	R0, R1
0x0948	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x094A	0x490D    LDR	R1, [PC, #52]
0x094C	0x4288    CMP	R0, R1
0x094E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0950	0x490C    LDR	R1, [PC, #48]
0x0952	0x4288    CMP	R0, R1
0x0954	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0956	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0958	0x490B    LDR	R1, [PC, #44]
0x095A	0x6809    LDR	R1, [R1, #0]
0x095C	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0960	0x4909    LDR	R1, [PC, #36]
0x0962	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0964	0xB001    ADD	SP, SP, #4
0x0966	0x4770    BX	LR
0x0968	0xFC00FFFF  	#-1024
0x096C	0x08004001  	#1073809408
0x0970	0x0C004001  	#1073810432
0x0974	0x10004001  	#1073811456
0x0978	0x14004001  	#1073812480
0x097C	0x18004001  	#1073813504
0x0980	0x1C004001  	#1073814528
0x0984	0x20004001  	#1073815552
0x0988	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1628	0xB081    SUB	SP, SP, #4
0x162A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x162E	0x4A04    LDR	R2, [PC, #16]
0x1630	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1632	0xF7FFFC89  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x1636	0xF8DDE000  LDR	LR, [SP, #0]
0x163A	0xB001    ADD	SP, SP, #4
0x163C	0x4770    BX	LR
0x163E	0xBF00    NOP
0x1640	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1ACC	0xB081    SUB	SP, SP, #4
0x1ACE	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x1AD2	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x1AD4	0x2901    CMP	R1, #1
0x1AD6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x1AD8	0xF2400120  MOVW	R1, #32
0x1ADC	0x4865    LDR	R0, [PC, #404]
0x1ADE	0xF7FFFDE5  BL	_GPIO_Digital_Input+0
0x1AE2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x1AE4	0xF2400120  MOVW	R1, #32
0x1AE8	0x4862    LDR	R0, [PC, #392]
0x1AEA	0xF7FFFD9D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x1AEE	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x1AF0	0x2901    CMP	R1, #1
0x1AF2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x1AF4	0xF2400108  MOVW	R1, #8
0x1AF8	0x485F    LDR	R0, [PC, #380]
0x1AFA	0xF7FFFDD7  BL	_GPIO_Digital_Input+0
0x1AFE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x1B00	0xF2400108  MOVW	R1, #8
0x1B04	0x485C    LDR	R0, [PC, #368]
0x1B06	0xF7FFFD8F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x1B0A	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x1B0C	0x2901    CMP	R1, #1
0x1B0E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x1B10	0xF2440100  MOVW	R1, #16384
0x1B14	0x4859    LDR	R0, [PC, #356]
0x1B16	0xF7FFFDC9  BL	_GPIO_Digital_Input+0
0x1B1A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x1B1C	0xF2440100  MOVW	R1, #16384
0x1B20	0x4856    LDR	R0, [PC, #344]
0x1B22	0xF7FFFD81  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x1B26	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x1B28	0x2901    CMP	R1, #1
0x1B2A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x1B2C	0xF2404100  MOVW	R1, #1024
0x1B30	0x4851    LDR	R0, [PC, #324]
0x1B32	0xF7FFFDBB  BL	_GPIO_Digital_Input+0
0x1B36	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x1B38	0xF2404100  MOVW	R1, #1024
0x1B3C	0x484E    LDR	R0, [PC, #312]
0x1B3E	0xF7FFFD73  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x1B42	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x1B44	0x2901    CMP	R1, #1
0x1B46	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x1B48	0xF6400100  MOVW	R1, #2048
0x1B4C	0x484A    LDR	R0, [PC, #296]
0x1B4E	0xF7FFFDAD  BL	_GPIO_Digital_Input+0
0x1B52	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x1B54	0xF6400100  MOVW	R1, #2048
0x1B58	0x4847    LDR	R0, [PC, #284]
0x1B5A	0xF7FFFD65  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x1B5E	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x1B60	0x2901    CMP	R1, #1
0x1B62	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x1B64	0xF2410100  MOVW	R1, #4096
0x1B68	0x4843    LDR	R0, [PC, #268]
0x1B6A	0xF7FFFD9F  BL	_GPIO_Digital_Input+0
0x1B6E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x1B70	0xF2410100  MOVW	R1, #4096
0x1B74	0x4840    LDR	R0, [PC, #256]
0x1B76	0xF7FFFD57  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x1B7A	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x1B7C	0x2901    CMP	R1, #1
0x1B7E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x1B80	0xF2410100  MOVW	R1, #4096
0x1B84	0x483D    LDR	R0, [PC, #244]
0x1B86	0xF7FFFD91  BL	_GPIO_Digital_Input+0
0x1B8A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x1B8C	0xF2410100  MOVW	R1, #4096
0x1B90	0x483A    LDR	R0, [PC, #232]
0x1B92	0xF7FFFD49  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x1B96	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x1B98	0x2901    CMP	R1, #1
0x1B9A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x1B9C	0xF6400100  MOVW	R1, #2048
0x1BA0	0x4836    LDR	R0, [PC, #216]
0x1BA2	0xF7FFFD83  BL	_GPIO_Digital_Input+0
0x1BA6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x1BA8	0xF6400100  MOVW	R1, #2048
0x1BAC	0x4833    LDR	R0, [PC, #204]
0x1BAE	0xF7FFFD3B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x1BB2	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x1BB4	0x2901    CMP	R1, #1
0x1BB6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x1BB8	0xF2400140  MOVW	R1, #64
0x1BBC	0x482F    LDR	R0, [PC, #188]
0x1BBE	0xF7FFFD75  BL	_GPIO_Digital_Input+0
0x1BC2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x1BC4	0xF2400140  MOVW	R1, #64
0x1BC8	0x482C    LDR	R0, [PC, #176]
0x1BCA	0xF7FFFD2D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x1BCE	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x1BD0	0x2901    CMP	R1, #1
0x1BD2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x1BD4	0xF2400120  MOVW	R1, #32
0x1BD8	0x4828    LDR	R0, [PC, #160]
0x1BDA	0xF7FFFD67  BL	_GPIO_Digital_Input+0
0x1BDE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x1BE0	0xF2400120  MOVW	R1, #32
0x1BE4	0x4825    LDR	R0, [PC, #148]
0x1BE6	0xF7FFFD1F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x1BEA	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x1BEC	0x2901    CMP	R1, #1
0x1BEE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x1BF0	0xF2400140  MOVW	R1, #64
0x1BF4	0x4822    LDR	R0, [PC, #136]
0x1BF6	0xF7FFFD59  BL	_GPIO_Digital_Input+0
0x1BFA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x1BFC	0xF2400140  MOVW	R1, #64
0x1C00	0x481F    LDR	R0, [PC, #124]
0x1C02	0xF7FFFD11  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x1C06	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x1C08	0x2901    CMP	R1, #1
0x1C0A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x1C0C	0xF2400180  MOVW	R1, #128
0x1C10	0x481B    LDR	R0, [PC, #108]
0x1C12	0xF7FFFD4B  BL	_GPIO_Digital_Input+0
0x1C16	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x1C18	0xF2400180  MOVW	R1, #128
0x1C1C	0x4818    LDR	R0, [PC, #96]
0x1C1E	0xF7FFFD03  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x1C22	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x1C24	0x2001    MOVS	R0, #1
0x1C26	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1C28	0x2800    CMP	R0, #0
0x1C2A	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x1C2E	0x2801    CMP	R0, #1
0x1C30	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x1C34	0x2802    CMP	R0, #2
0x1C36	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x1C3A	0x2803    CMP	R0, #3
0x1C3C	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x1C40	0x2804    CMP	R0, #4
0x1C42	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x1C46	0x2805    CMP	R0, #5
0x1C48	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x1C4C	0x2806    CMP	R0, #6
0x1C4E	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x1C52	0x2807    CMP	R0, #7
0x1C54	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x1C56	0x2808    CMP	R0, #8
0x1C58	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x1C5A	0x2809    CMP	R0, #9
0x1C5C	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x1C5E	0x280A    CMP	R0, #10
0x1C60	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x1C62	0x280B    CMP	R0, #11
0x1C64	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x1C66	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x1C68	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x1C6A	0xF8DDE000  LDR	LR, [SP, #0]
0x1C6E	0xB001    ADD	SP, SP, #4
0x1C70	0x4770    BX	LR
0x1C72	0xBF00    NOP
0x1C74	0x08004001  	GPIOA_BASE+0
0x1C78	0x10004001  	GPIOC_BASE+0
0x1C7C	0x14004001  	GPIOD_BASE+0
0x1C80	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_i2cInit:
;easymx_v7_STM32F107VC.c, 222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x2354	0xB081    SUB	SP, SP, #4
0x2356	0xF8CDE000  STR	LR, [SP, #0]
0x235A	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 224 :: 		switch( bus )
0x235C	0xE009    B	L_mikrobus_i2cInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit85:
0x235E	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x2360	0xF7FFFBA4  BL	easymx_v7_STM32F107VC__i2cInit_1+0
0x2364	0xE00A    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit86:
; cfg start address is: 44 (R11)
0x2366	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x2368	0xF7FFFD16  BL	easymx_v7_STM32F107VC__i2cInit_2+0
0x236C	0xE006    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit87:
0x236E	0x2001    MOVS	R0, #1
0x2370	0xE004    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 245 :: 		}
L_mikrobus_i2cInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x2372	0x2800    CMP	R0, #0
0x2374	0xD0F3    BEQ	L_mikrobus_i2cInit85
0x2376	0x2801    CMP	R0, #1
0x2378	0xD0F5    BEQ	L_mikrobus_i2cInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x237A	0xE7F8    B	L_mikrobus_i2cInit87
;easymx_v7_STM32F107VC.c, 248 :: 		}
L_end_mikrobus_i2cInit:
0x237C	0xF8DDE000  LDR	LR, [SP, #0]
0x2380	0xB001    ADD	SP, SP, #4
0x2382	0x4770    BX	LR
; end of _mikrobus_i2cInit
easymx_v7_STM32F107VC__i2cInit_1:
;__em_f107vc_i2c.c, 29 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x1AAC	0xB081    SUB	SP, SP, #4
0x1AAE	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 31 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x1AB2	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x1AB4	0x4608    MOV	R0, R1
0x1AB6	0x4904    LDR	R1, [PC, #16]
0x1AB8	0xF7FFFDA8  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 32 :: 		return _MIKROBUS_OK;
0x1ABC	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 33 :: 		}
L_end__i2cInit_1:
0x1ABE	0xF8DDE000  LDR	LR, [SP, #0]
0x1AC2	0xB001    ADD	SP, SP, #4
0x1AC4	0x4770    BX	LR
0x1AC6	0xBF00    NOP
0x1AC8	0x2D7C0000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_1
_I2C1_Init_Advanced:
;__Lib_I2C_12.c, 544 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x160C	0xB081    SUB	SP, SP, #4
0x160E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_12.c, 545 :: 		
0x1612	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x1614	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x1616	0x4803    LDR	R0, [PC, #12]
0x1618	0xF7FFFAA6  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_12.c, 546 :: 		
L_end_I2C1_Init_Advanced:
0x161C	0xF8DDE000  LDR	LR, [SP, #0]
0x1620	0xB001    ADD	SP, SP, #4
0x1622	0x4770    BX	LR
0x1624	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_12.c, 591 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0B68	0xB088    SUB	SP, SP, #32
0x0B6A	0xF8CDE000  STR	LR, [SP, #0]
0x0B6E	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_12.c, 593 :: 		
;__Lib_I2C_12.c, 600 :: 		
0x0B70	0x4B55    LDR	R3, [PC, #340]
0x0B72	0x4298    CMP	R0, R3
0x0B74	0xD10D    BNE	L_I2Cx_Init_Advanced112
;__Lib_I2C_12.c, 601 :: 		
0x0B76	0x2401    MOVS	R4, #1
0x0B78	0xB264    SXTB	R4, R4
0x0B7A	0x4B54    LDR	R3, [PC, #336]
0x0B7C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 602 :: 		
0x0B7E	0x4C54    LDR	R4, [PC, #336]
0x0B80	0x4B54    LDR	R3, [PC, #336]
0x0B82	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 603 :: 		
0x0B84	0x4C54    LDR	R4, [PC, #336]
0x0B86	0x4B55    LDR	R3, [PC, #340]
0x0B88	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 604 :: 		
0x0B8A	0x4C55    LDR	R4, [PC, #340]
0x0B8C	0x4B55    LDR	R3, [PC, #340]
0x0B8E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 605 :: 		
0x0B90	0xE00F    B	L_I2Cx_Init_Advanced113
L_I2Cx_Init_Advanced112:
;__Lib_I2C_12.c, 606 :: 		
0x0B92	0x4B55    LDR	R3, [PC, #340]
0x0B94	0x4298    CMP	R0, R3
0x0B96	0xD10C    BNE	L_I2Cx_Init_Advanced114
;__Lib_I2C_12.c, 607 :: 		
0x0B98	0x2401    MOVS	R4, #1
0x0B9A	0xB264    SXTB	R4, R4
0x0B9C	0x4B53    LDR	R3, [PC, #332]
0x0B9E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 608 :: 		
0x0BA0	0x4C53    LDR	R4, [PC, #332]
0x0BA2	0x4B4C    LDR	R3, [PC, #304]
0x0BA4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 609 :: 		
0x0BA6	0x4C53    LDR	R4, [PC, #332]
0x0BA8	0x4B4C    LDR	R3, [PC, #304]
0x0BAA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 610 :: 		
0x0BAC	0x4C52    LDR	R4, [PC, #328]
0x0BAE	0x4B4D    LDR	R3, [PC, #308]
0x0BB0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 611 :: 		
L_I2Cx_Init_Advanced114:
L_I2Cx_Init_Advanced113:
;__Lib_I2C_12.c, 612 :: 		
0x0BB2	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x0BB4	0x9002    STR	R0, [SP, #8]
0x0BB6	0x4610    MOV	R0, R2
0x0BB8	0xF7FFFEE8  BL	_GPIO_Alternate_Function_Enable+0
0x0BBC	0x9802    LDR	R0, [SP, #8]
0x0BBE	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_12.c, 617 :: 		
0x0BC0	0x1D03    ADDS	R3, R0, #4
0x0BC2	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_12.c, 619 :: 		
0x0BC4	0xB29C    UXTH	R4, R3
0x0BC6	0xF06F033F  MVN	R3, #63
0x0BCA	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0BCE	0xB29D    UXTH	R5, R3
;__Lib_I2C_12.c, 621 :: 		
0x0BD0	0xAB03    ADD	R3, SP, #12
0x0BD2	0x9001    STR	R0, [SP, #4]
0x0BD4	0x4618    MOV	R0, R3
0x0BD6	0xF7FFFE3F  BL	_RCC_GetClocksFrequency+0
0x0BDA	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_12.c, 622 :: 		
; pclk1 start address is: 28 (R7)
0x0BDC	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_12.c, 624 :: 		
0x0BDE	0x9C05    LDR	R4, [SP, #20]
0x0BE0	0x4B46    LDR	R3, [PC, #280]
0x0BE2	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x0BE6	0xB299    UXTH	R1, R3
;__Lib_I2C_12.c, 625 :: 		
0x0BE8	0xB29B    UXTH	R3, R3
0x0BEA	0xEA450403  ORR	R4, R5, R3, LSL #0
0x0BEE	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_12.c, 627 :: 		
0x0BF0	0x1D03    ADDS	R3, R0, #4
0x0BF2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 631 :: 		
0x0BF4	0x2400    MOVS	R4, #0
0x0BF6	0x6803    LDR	R3, [R0, #0]
0x0BF8	0xF3640300  BFI	R3, R4, #0, #1
0x0BFC	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 634 :: 		
; tmpreg start address is: 8 (R2)
0x0BFE	0x2200    MOVS	R2, #0
;__Lib_I2C_12.c, 637 :: 		
0x0C00	0x4B3F    LDR	R3, [PC, #252]
0x0C02	0x429E    CMP	R6, R3
0x0C04	0xD812    BHI	L_I2Cx_Init_Advanced115
;__Lib_I2C_12.c, 640 :: 		
0x0C06	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x0C08	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0C0C	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 642 :: 		
0x0C0E	0x2C04    CMP	R4, #4
0x0C10	0xD202    BCS	L__I2Cx_Init_Advanced144
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 645 :: 		
; result start address is: 12 (R3)
0x0C12	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x0C14	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 646 :: 		
0x0C16	0xE7FF    B	L_I2Cx_Init_Advanced116
L__I2Cx_Init_Advanced144:
;__Lib_I2C_12.c, 642 :: 		
;__Lib_I2C_12.c, 646 :: 		
L_I2Cx_Init_Advanced116:
;__Lib_I2C_12.c, 648 :: 		
; result start address is: 16 (R4)
0x0C18	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x0C1C	0xB29A    UXTH	R2, R3
;__Lib_I2C_12.c, 650 :: 		
0x0C1E	0xF2000420  ADDW	R4, R0, #32
0x0C22	0x1C4B    ADDS	R3, R1, #1
0x0C24	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x0C26	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_12.c, 651 :: 		
0x0C28	0xB291    UXTH	R1, R2
0x0C2A	0xE03F    B	L_I2Cx_Init_Advanced117
L_I2Cx_Init_Advanced115:
;__Lib_I2C_12.c, 656 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0C2C	0x2303    MOVS	R3, #3
0x0C2E	0xFB06F403  MUL	R4, R6, R3
0x0C32	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x0C36	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_12.c, 659 :: 		
0x0C3A	0x2319    MOVS	R3, #25
0x0C3C	0xFB06F503  MUL	R5, R6, R3
0x0C40	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x0C44	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_12.c, 661 :: 		
0x0C48	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_12.c, 663 :: 		
0x0C4C	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_12.c, 665 :: 		
0x0C50	0x1B3C    SUB	R4, R7, R4
0x0C52	0x1AFB    SUB	R3, R7, R3
0x0C54	0x429C    CMP	R4, R3
0x0C56	0xD205    BCS	L_I2Cx_Init_Advanced118
;__Lib_I2C_12.c, 666 :: 		
0x0C58	0x2303    MOVS	R3, #3
0x0C5A	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0C5C	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0C60	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 667 :: 		
; result end address is: 16 (R4)
0x0C62	0xE006    B	L_I2Cx_Init_Advanced119
L_I2Cx_Init_Advanced118:
;__Lib_I2C_12.c, 669 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0C64	0x2319    MOVS	R3, #25
0x0C66	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0C68	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0C6C	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 670 :: 		
0x0C6E	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 671 :: 		
L_I2Cx_Init_Advanced119:
;__Lib_I2C_12.c, 674 :: 		
; result start address is: 16 (R4)
0x0C72	0xF64073FF  MOVW	R3, #4095
0x0C76	0xEA040303  AND	R3, R4, R3, LSL #0
0x0C7A	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced145
;__Lib_I2C_12.c, 677 :: 		
0x0C7C	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 678 :: 		
0x0C80	0xE7FF    B	L_I2Cx_Init_Advanced120
L__I2Cx_Init_Advanced145:
;__Lib_I2C_12.c, 674 :: 		
;__Lib_I2C_12.c, 678 :: 		
L_I2Cx_Init_Advanced120:
;__Lib_I2C_12.c, 680 :: 		
; result start address is: 16 (R4)
0x0C82	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x0C86	0xB29B    UXTH	R3, R3
0x0C88	0x431A    ORRS	R2, R3
0x0C8A	0xB292    UXTH	R2, R2
;__Lib_I2C_12.c, 682 :: 		
0x0C8C	0xF2000520  ADDW	R5, R0, #32
0x0C90	0xF240132C  MOVW	R3, #300
0x0C94	0xFB01F403  MUL	R4, R1, R3
0x0C98	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x0C9A	0xF24033E8  MOVW	R3, #1000
0x0C9E	0xFBB4F3F3  UDIV	R3, R4, R3
0x0CA2	0xB29B    UXTH	R3, R3
0x0CA4	0x1C5B    ADDS	R3, R3, #1
0x0CA6	0xB29B    UXTH	R3, R3
0x0CA8	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x0CAA	0xB291    UXTH	R1, R2
;__Lib_I2C_12.c, 683 :: 		
L_I2Cx_Init_Advanced117:
;__Lib_I2C_12.c, 685 :: 		
; tmpreg start address is: 4 (R1)
0x0CAC	0xF200031C  ADDW	R3, R0, #28
0x0CB0	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_12.c, 687 :: 		
0x0CB2	0x2300    MOVS	R3, #0
0x0CB4	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 688 :: 		
0x0CB6	0x2401    MOVS	R4, #1
0x0CB8	0x6803    LDR	R3, [R0, #0]
0x0CBA	0xF3640300  BFI	R3, R4, #0, #1
0x0CBE	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 689 :: 		
L_end_I2Cx_Init_Advanced:
0x0CC0	0xF8DDE000  LDR	LR, [SP, #0]
0x0CC4	0xB008    ADD	SP, SP, #32
0x0CC6	0x4770    BX	LR
0x0CC8	0x54004000  	I2C1_CR1+0
0x0CCC	0x03D44242  	RCC_APB1ENR+0
0x0CD0	0x16450000  	_I2C1_Start+0
0x0CD4	0x025C2000  	_I2C_Start_Ptr+0
0x0CD8	0x12D50000  	_I2C1_Read+0
0x0CDC	0x02602000  	_I2C_Read_Ptr+0
0x0CE0	0x14B50000  	_I2C1_Write+0
0x0CE4	0x02642000  	_I2C_Write_Ptr+0
0x0CE8	0x58004000  	I2C2_CR1+0
0x0CEC	0x03D84242  	RCC_APB1ENR+0
0x0CF0	0x14350000  	_I2C2_Start+0
0x0CF4	0x12F90000  	_I2C2_Read+0
0x0CF8	0x15310000  	_I2C2_Write+0
0x0CFC	0x4240000F  	#1000000
0x0D00	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0858	0xB082    SUB	SP, SP, #8
0x085A	0xF8CDE000  STR	LR, [SP, #0]
0x085E	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x0860	0x4619    MOV	R1, R3
0x0862	0x9101    STR	R1, [SP, #4]
0x0864	0xF7FFFCCC  BL	_Get_Fosc_kHz+0
0x0868	0xF24031E8  MOVW	R1, #1000
0x086C	0xFB00F201  MUL	R2, R0, R1
0x0870	0x9901    LDR	R1, [SP, #4]
0x0872	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x0874	0x491F    LDR	R1, [PC, #124]
0x0876	0x7809    LDRB	R1, [R1, #0]
0x0878	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x087C	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x087E	0x491E    LDR	R1, [PC, #120]
0x0880	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0882	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0884	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x0886	0x1D1A    ADDS	R2, R3, #4
0x0888	0x6819    LDR	R1, [R3, #0]
0x088A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x088C	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x088E	0x4919    LDR	R1, [PC, #100]
0x0890	0x8809    LDRH	R1, [R1, #0]
0x0892	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x0896	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x0898	0x4917    LDR	R1, [PC, #92]
0x089A	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x089C	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x089E	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x08A0	0xF2030208  ADDW	R2, R3, #8
0x08A4	0x1D19    ADDS	R1, R3, #4
0x08A6	0x6809    LDR	R1, [R1, #0]
0x08A8	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08AA	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x08AC	0x4911    LDR	R1, [PC, #68]
0x08AE	0x8809    LDRH	R1, [R1, #0]
0x08B0	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x08B4	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x08B6	0x4910    LDR	R1, [PC, #64]
0x08B8	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08BA	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x08BC	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x08BE	0xF203020C  ADDW	R2, R3, #12
0x08C2	0x1D19    ADDS	R1, R3, #4
0x08C4	0x6809    LDR	R1, [R1, #0]
0x08C6	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08C8	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x08CA	0x490A    LDR	R1, [PC, #40]
0x08CC	0x8809    LDRH	R1, [R1, #0]
0x08CE	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x08D2	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x08D4	0x4909    LDR	R1, [PC, #36]
0x08D6	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08D8	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x08DA	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x08DC	0xF2030210  ADDW	R2, R3, #16
0x08E0	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x08E4	0x6809    LDR	R1, [R1, #0]
0x08E6	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x08EA	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x08EC	0xF8DDE000  LDR	LR, [SP, #0]
0x08F0	0xB002    ADD	SP, SP, #8
0x08F2	0x4770    BX	LR
0x08F4	0x10044002  	RCC_CFGRbits+0
0x08F8	0x2E480000  	__Lib_System_105_107_APBAHBPrescTable+0
0x08FC	0x26840000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0200	0x4801    LDR	R0, [PC, #4]
0x0202	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0204	0x4770    BX	LR
0x0206	0xBF00    NOP
0x0208	0x024C2000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x098C	0xB081    SUB	SP, SP, #4
0x098E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0992	0x2201    MOVS	R2, #1
0x0994	0xB252    SXTB	R2, R2
0x0996	0x493E    LDR	R1, [PC, #248]
0x0998	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x099A	0xF2000168  ADDW	R1, R0, #104
0x099E	0x680B    LDR	R3, [R1, #0]
0x09A0	0xF06F6100  MVN	R1, #134217728
0x09A4	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x09A8	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x09AA	0xF0036100  AND	R1, R3, #134217728
0x09AE	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x09B0	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x09B2	0xF0024100  AND	R1, R2, #-2147483648
0x09B6	0xF1B14F00  CMP	R1, #-2147483648
0x09BA	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x09BC	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x09BE	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x09C0	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x09C2	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x09C4	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x09C6	0xF4042170  AND	R1, R4, #983040
0x09CA	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x09CC	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x09CE	0xF64F71FF  MOVW	R1, #65535
0x09D2	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x09D6	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x09D8	0xF4041140  AND	R1, R4, #3145728
0x09DC	0xF5B11F40  CMP	R1, #3145728
0x09E0	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x09E2	0xF06F6170  MVN	R1, #251658240
0x09E6	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x09EA	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x09EC	0x492A    LDR	R1, [PC, #168]
0x09EE	0x680A    LDR	R2, [R1, #0]
0x09F0	0xF06F6170  MVN	R1, #251658240
0x09F4	0x400A    ANDS	R2, R1
0x09F6	0x4928    LDR	R1, [PC, #160]
0x09F8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x09FA	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x09FC	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x09FE	0xF4041180  AND	R1, R4, #1048576
0x0A02	0xF5B11F80  CMP	R1, #1048576
0x0A06	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0A08	0xF04F0103  MOV	R1, #3
0x0A0C	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0A0E	0x43C9    MVN	R1, R1
0x0A10	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0A14	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0A18	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0A1A	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0A1C	0x0D61    LSRS	R1, R4, #21
0x0A1E	0x0109    LSLS	R1, R1, #4
0x0A20	0xFA05F101  LSL	R1, R5, R1
0x0A24	0x43C9    MVN	R1, R1
0x0A26	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0A28	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0A2C	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x0A2E	0x0D61    LSRS	R1, R4, #21
0x0A30	0x0109    LSLS	R1, R1, #4
0x0A32	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0A36	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0A38	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0A3A	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x0A3E	0xF1B14F00  CMP	R1, #-2147483648
0x0A42	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0A44	0x4913    LDR	R1, [PC, #76]
0x0A46	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0A48	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x0A4A	0x4913    LDR	R1, [PC, #76]
0x0A4C	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x0A4E	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0A52	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0A54	0xEA4F018A  LSL	R1, R10, #2
0x0A58	0xEB090101  ADD	R1, R9, R1, LSL #0
0x0A5C	0x6809    LDR	R1, [R1, #0]
0x0A5E	0xF1B13FFF  CMP	R1, #-1
0x0A62	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0A64	0xF1090134  ADD	R1, R9, #52
0x0A68	0xEA4F038A  LSL	R3, R10, #2
0x0A6C	0x18C9    ADDS	R1, R1, R3
0x0A6E	0x6809    LDR	R1, [R1, #0]
0x0A70	0x460A    MOV	R2, R1
0x0A72	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0A76	0x6809    LDR	R1, [R1, #0]
0x0A78	0x4608    MOV	R0, R1
0x0A7A	0x4611    MOV	R1, R2
0x0A7C	0xF7FFFB74  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0A80	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0A84	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0A86	0xF8DDE000  LDR	LR, [SP, #0]
0x0A8A	0xB001    ADD	SP, SP, #4
0x0A8C	0x4770    BX	LR
0x0A8E	0xBF00    NOP
0x0A90	0x03004242  	RCC_APB2ENRbits+0
0x0A94	0x001C4001  	AFIO_MAPR2+0
0x0A98	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0168	0xB083    SUB	SP, SP, #12
0x016A	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x016E	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0172	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0174	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x0176	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x017A	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x017C	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x017E	0x4A19    LDR	R2, [PC, #100]
0x0180	0x9202    STR	R2, [SP, #8]
0x0182	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0184	0x4A18    LDR	R2, [PC, #96]
0x0186	0x9202    STR	R2, [SP, #8]
0x0188	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x018A	0x4A18    LDR	R2, [PC, #96]
0x018C	0x9202    STR	R2, [SP, #8]
0x018E	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0190	0x4A17    LDR	R2, [PC, #92]
0x0192	0x9202    STR	R2, [SP, #8]
0x0194	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x0196	0x4A17    LDR	R2, [PC, #92]
0x0198	0x9202    STR	R2, [SP, #8]
0x019A	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x019C	0x4A16    LDR	R2, [PC, #88]
0x019E	0x9202    STR	R2, [SP, #8]
0x01A0	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x01A2	0x4A16    LDR	R2, [PC, #88]
0x01A4	0x9202    STR	R2, [SP, #8]
0x01A6	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x01A8	0x2800    CMP	R0, #0
0x01AA	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x01AC	0x2801    CMP	R0, #1
0x01AE	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x01B0	0x2802    CMP	R0, #2
0x01B2	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x01B4	0x2803    CMP	R0, #3
0x01B6	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x01B8	0x2804    CMP	R0, #4
0x01BA	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x01BC	0x2805    CMP	R0, #5
0x01BE	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x01C0	0x2806    CMP	R0, #6
0x01C2	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x01C4	0x2201    MOVS	R2, #1
0x01C6	0xB212    SXTH	R2, R2
0x01C8	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x01CA	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x01CE	0x9802    LDR	R0, [SP, #8]
0x01D0	0x460A    MOV	R2, R1
0x01D2	0xF8BD1004  LDRH	R1, [SP, #4]
0x01D6	0xF000FEB7  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x01DA	0xF8DDE000  LDR	LR, [SP, #0]
0x01DE	0xB003    ADD	SP, SP, #12
0x01E0	0x4770    BX	LR
0x01E2	0xBF00    NOP
0x01E4	0x08004001  	#1073809408
0x01E8	0x0C004001  	#1073810432
0x01EC	0x10004001  	#1073811456
0x01F0	0x14004001  	#1073812480
0x01F4	0x18004001  	#1073813504
0x01F8	0x1C004001  	#1073814528
0x01FC	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
easymx_v7_STM32F107VC__i2cInit_2:
;__em_f107vc_i2c.c, 35 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x1D98	0xB081    SUB	SP, SP, #4
0x1D9A	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 37 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x1D9E	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x1DA0	0x4608    MOV	R0, R1
0x1DA2	0x4904    LDR	R1, [PC, #16]
0x1DA4	0xF7FFFC32  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 38 :: 		return _MIKROBUS_OK;
0x1DA8	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 39 :: 		}
L_end__i2cInit_2:
0x1DAA	0xF8DDE000  LDR	LR, [SP, #0]
0x1DAE	0xB001    ADD	SP, SP, #4
0x1DB0	0x4770    BX	LR
0x1DB2	0xBF00    NOP
0x1DB4	0x2D7C0000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_2
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x2384	0xB081    SUB	SP, SP, #4
0x2386	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x238A	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x238C	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x238E	0xF7FFFA77  BL	easymx_v7_STM32F107VC__log_init1+0
0x2392	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x2394	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x2396	0xF7FFF995  BL	easymx_v7_STM32F107VC__log_init2+0
0x239A	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x239C	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x239E	0xF7FFFB2D  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x23A2	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x23A4	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x23A6	0xF7FFFA87  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x23AA	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x23AC	0x2001    MOVS	R0, #1
0x23AE	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x23B0	0x2800    CMP	R0, #0
0x23B2	0xD0EB    BEQ	L_mikrobus_logInit90
0x23B4	0x2801    CMP	R0, #1
0x23B6	0xD0ED    BEQ	L_mikrobus_logInit91
0x23B8	0x2820    CMP	R0, #32
0x23BA	0xD0EF    BEQ	L_mikrobus_logInit92
0x23BC	0x2830    CMP	R0, #48
0x23BE	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x23C0	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x23C2	0xF8DDE000  LDR	LR, [SP, #0]
0x23C6	0xB001    ADD	SP, SP, #4
0x23C8	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x1880	0xB081    SUB	SP, SP, #4
0x1882	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x1886	0x4909    LDR	R1, [PC, #36]
0x1888	0xB402    PUSH	(R1)
0x188A	0xF2400300  MOVW	R3, #0
0x188E	0xF2400200  MOVW	R2, #0
0x1892	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1896	0xF7FFFEA5  BL	_UART3_Init_Advanced+0
0x189A	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x189C	0x4A04    LDR	R2, [PC, #16]
0x189E	0x4905    LDR	R1, [PC, #20]
0x18A0	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x18A2	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x18A4	0xF8DDE000  LDR	LR, [SP, #0]
0x18A8	0xB001    ADD	SP, SP, #4
0x18AA	0x4770    BX	LR
0x18AC	0x2C380000  	__GPIO_MODULE_USART3_PD89+0
0x18B0	0x139D0000  	_UART3_Write+0
0x18B4	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x15E4	0xB081    SUB	SP, SP, #4
0x15E6	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x15EA	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x15EC	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x15EE	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x15F0	0xB408    PUSH	(R3)
0x15F2	0xB293    UXTH	R3, R2
0x15F4	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x15F6	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x15F8	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x15FA	0xF7FFFB83  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x15FE	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x1600	0xF8DDE000  LDR	LR, [SP, #0]
0x1604	0xB001    ADD	SP, SP, #4
0x1606	0x4770    BX	LR
0x1608	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0D04	0xB089    SUB	SP, SP, #36
0x0D06	0xF8CDE000  STR	LR, [SP, #0]
0x0D0A	0x4683    MOV	R11, R0
0x0D0C	0xB298    UXTH	R0, R3
0x0D0E	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x0D10	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x0D14	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x0D16	0xAC04    ADD	R4, SP, #16
0x0D18	0xF8AD1004  STRH	R1, [SP, #4]
0x0D1C	0xF8AD0008  STRH	R0, [SP, #8]
0x0D20	0x4620    MOV	R0, R4
0x0D22	0xF7FFFD99  BL	_RCC_GetClocksFrequency+0
0x0D26	0xF8BD0008  LDRH	R0, [SP, #8]
0x0D2A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x0D2E	0x4C64    LDR	R4, [PC, #400]
0x0D30	0x45A3    CMP	R11, R4
0x0D32	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x0D34	0x2501    MOVS	R5, #1
0x0D36	0xB26D    SXTB	R5, R5
0x0D38	0x4C62    LDR	R4, [PC, #392]
0x0D3A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0D3C	0x4D62    LDR	R5, [PC, #392]
0x0D3E	0x4C63    LDR	R4, [PC, #396]
0x0D40	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x0D42	0x4D63    LDR	R5, [PC, #396]
0x0D44	0x4C63    LDR	R4, [PC, #396]
0x0D46	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0D48	0x4D63    LDR	R5, [PC, #396]
0x0D4A	0x4C64    LDR	R4, [PC, #400]
0x0D4C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x0D4E	0x4D64    LDR	R5, [PC, #400]
0x0D50	0x4C64    LDR	R4, [PC, #400]
0x0D52	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x0D54	0x9C07    LDR	R4, [SP, #28]
0x0D56	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0D58	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x0D5A	0x4C63    LDR	R4, [PC, #396]
0x0D5C	0x45A3    CMP	R11, R4
0x0D5E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x0D60	0x2501    MOVS	R5, #1
0x0D62	0xB26D    SXTB	R5, R5
0x0D64	0x4C61    LDR	R4, [PC, #388]
0x0D66	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0D68	0x4D61    LDR	R5, [PC, #388]
0x0D6A	0x4C58    LDR	R4, [PC, #352]
0x0D6C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x0D6E	0x4D61    LDR	R5, [PC, #388]
0x0D70	0x4C58    LDR	R4, [PC, #352]
0x0D72	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x0D74	0x4D60    LDR	R5, [PC, #384]
0x0D76	0x4C59    LDR	R4, [PC, #356]
0x0D78	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x0D7A	0x4D60    LDR	R5, [PC, #384]
0x0D7C	0x4C59    LDR	R4, [PC, #356]
0x0D7E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x0D80	0x9C06    LDR	R4, [SP, #24]
0x0D82	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x0D84	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x0D86	0x4C5E    LDR	R4, [PC, #376]
0x0D88	0x45A3    CMP	R11, R4
0x0D8A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x0D8C	0x2501    MOVS	R5, #1
0x0D8E	0xB26D    SXTB	R5, R5
0x0D90	0x4C5C    LDR	R4, [PC, #368]
0x0D92	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x0D94	0x4D5C    LDR	R5, [PC, #368]
0x0D96	0x4C4D    LDR	R4, [PC, #308]
0x0D98	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x0D9A	0x4D5C    LDR	R5, [PC, #368]
0x0D9C	0x4C4D    LDR	R4, [PC, #308]
0x0D9E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x0DA0	0x4D5B    LDR	R5, [PC, #364]
0x0DA2	0x4C4E    LDR	R4, [PC, #312]
0x0DA4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x0DA6	0x4D5B    LDR	R5, [PC, #364]
0x0DA8	0x4C4E    LDR	R4, [PC, #312]
0x0DAA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x0DAC	0x9C06    LDR	R4, [SP, #24]
0x0DAE	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x0DB0	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x0DB2	0x4C59    LDR	R4, [PC, #356]
0x0DB4	0x45A3    CMP	R11, R4
0x0DB6	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x0DB8	0x2501    MOVS	R5, #1
0x0DBA	0xB26D    SXTB	R5, R5
0x0DBC	0x4C57    LDR	R4, [PC, #348]
0x0DBE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x0DC0	0x4D57    LDR	R5, [PC, #348]
0x0DC2	0x4C42    LDR	R4, [PC, #264]
0x0DC4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x0DC6	0x4D57    LDR	R5, [PC, #348]
0x0DC8	0x4C42    LDR	R4, [PC, #264]
0x0DCA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x0DCC	0x4D56    LDR	R5, [PC, #344]
0x0DCE	0x4C43    LDR	R4, [PC, #268]
0x0DD0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x0DD2	0x4D56    LDR	R5, [PC, #344]
0x0DD4	0x4C43    LDR	R4, [PC, #268]
0x0DD6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x0DD8	0x9C06    LDR	R4, [SP, #24]
0x0DDA	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x0DDC	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x0DDE	0x4C54    LDR	R4, [PC, #336]
0x0DE0	0x45A3    CMP	R11, R4
0x0DE2	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x0DE4	0x2501    MOVS	R5, #1
0x0DE6	0xB26D    SXTB	R5, R5
0x0DE8	0x4C52    LDR	R4, [PC, #328]
0x0DEA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x0DEC	0x4D52    LDR	R5, [PC, #328]
0x0DEE	0x4C37    LDR	R4, [PC, #220]
0x0DF0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x0DF2	0x4D52    LDR	R5, [PC, #328]
0x0DF4	0x4C37    LDR	R4, [PC, #220]
0x0DF6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x0DF8	0x4D51    LDR	R5, [PC, #324]
0x0DFA	0x4C38    LDR	R4, [PC, #224]
0x0DFC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x0DFE	0x4D51    LDR	R5, [PC, #324]
0x0E00	0x4C38    LDR	R4, [PC, #224]
0x0E02	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x0E04	0x9C06    LDR	R4, [SP, #24]
0x0E06	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0E08	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x0E0C	0xF8AD0008  STRH	R0, [SP, #8]
0x0E10	0x4630    MOV	R0, R6
0x0E12	0xF7FFFDBB  BL	_GPIO_Alternate_Function_Enable+0
0x0E16	0xF8BD0008  LDRH	R0, [SP, #8]
0x0E1A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x0E1E	0xF10B0510  ADD	R5, R11, #16
0x0E22	0x2400    MOVS	R4, #0
0x0E24	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x0E26	0xF10B0510  ADD	R5, R11, #16
0x0E2A	0x682C    LDR	R4, [R5, #0]
0x0E2C	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x0E2E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x0E30	0xF10B050C  ADD	R5, R11, #12
0x0E34	0x2400    MOVS	R4, #0
0x0E36	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0E38	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0E3A	0xF4406080  ORR	R0, R0, #1024
0x0E3E	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x0E40	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x0E42	0xF10B050C  ADD	R5, R11, #12
0x0E46	0x682C    LDR	R4, [R5, #0]
0x0E48	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x0E4A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x0E4C	0xF10B060C  ADD	R6, R11, #12
0x0E50	0x2501    MOVS	R5, #1
0x0E52	0x6834    LDR	R4, [R6, #0]
0x0E54	0xF365344D  BFI	R4, R5, #13, #1
0x0E58	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x0E5A	0xF10B060C  ADD	R6, R11, #12
0x0E5E	0x2501    MOVS	R5, #1
0x0E60	0x6834    LDR	R4, [R6, #0]
0x0E62	0xF36504C3  BFI	R4, R5, #3, #1
0x0E66	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0E68	0xF10B060C  ADD	R6, R11, #12
0x0E6C	0x2501    MOVS	R5, #1
0x0E6E	0x6834    LDR	R4, [R6, #0]
0x0E70	0xF3650482  BFI	R4, R5, #2, #1
0x0E74	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x0E76	0xF10B0514  ADD	R5, R11, #20
0x0E7A	0x2400    MOVS	R4, #0
0x0E7C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x0E7E	0x9D03    LDR	R5, [SP, #12]
0x0E80	0x2419    MOVS	R4, #25
0x0E82	0x4365    MULS	R5, R4, R5
0x0E84	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0E88	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x0E8C	0x2464    MOVS	R4, #100
0x0E8E	0xFBB7F4F4  UDIV	R4, R7, R4
0x0E92	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x0E94	0x0935    LSRS	R5, R6, #4
0x0E96	0x2464    MOVS	R4, #100
0x0E98	0x436C    MULS	R4, R5, R4
0x0E9A	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x0E9C	0x0124    LSLS	R4, R4, #4
0x0E9E	0xF2040532  ADDW	R5, R4, #50
0x0EA2	0x2464    MOVS	R4, #100
0x0EA4	0xFBB5F4F4  UDIV	R4, R5, R4
0x0EA8	0xF004040F  AND	R4, R4, #15
0x0EAC	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x0EB0	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x0EB4	0xB2A4    UXTH	R4, R4
0x0EB6	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x0EB8	0xF8DDE000  LDR	LR, [SP, #0]
0x0EBC	0xB009    ADD	SP, SP, #36
0x0EBE	0x4770    BX	LR
0x0EC0	0x38004001  	USART1_SR+0
0x0EC4	0x03384242  	RCC_APB2ENR+0
0x0EC8	0x14F10000  	_UART1_Write+0
0x0ECC	0x02682000  	_UART_Wr_Ptr+0
0x0ED0	0x141D0000  	_UART1_Read+0
0x0ED4	0x026C2000  	_UART_Rd_Ptr+0
0x0ED8	0x14810000  	_UART1_Data_Ready+0
0x0EDC	0x02702000  	_UART_Rdy_Ptr+0
0x0EE0	0x144D0000  	_UART1_Tx_Idle+0
0x0EE4	0x02742000  	_UART_Tx_Idle_Ptr+0
0x0EE8	0x44004000  	USART2_SR+0
0x0EEC	0x03C44242  	RCC_APB1ENR+0
0x0EF0	0x14990000  	_UART2_Write+0
0x0EF4	0x13850000  	_UART2_Read+0
0x0EF8	0x136D0000  	_UART2_Data_Ready+0
0x0EFC	0x13E90000  	_UART2_Tx_Idle+0
0x0F00	0x48004000  	USART3_SR+0
0x0F04	0x03C84242  	RCC_APB1ENR+0
0x0F08	0x139D0000  	_UART3_Write+0
0x0F0C	0x13D10000  	_UART3_Read+0
0x0F10	0x13B90000  	_UART3_Data_Ready+0
0x0F14	0x15850000  	_UART3_Tx_Idle+0
0x0F18	0x4C004000  	UART4_SR+0
0x0F1C	0x03CC4242  	RCC_APB1ENR+0
0x0F20	0x14650000  	_UART4_Write+0
0x0F24	0x156D0000  	_UART4_Read+0
0x0F28	0x15550000  	_UART4_Data_Ready+0
0x0F2C	0x15CD0000  	_UART4_Tx_Idle+0
0x0F30	0x50004000  	UART5_SR+0
0x0F34	0x03D04242  	RCC_APB1ENR+0
0x0F38	0x14010000  	_UART5_Write+0
0x0F3C	0x15B50000  	_UART5_Read+0
0x0F40	0x159D0000  	_UART5_Data_Ready+0
0x0F44	0x14D90000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x16C4	0xB081    SUB	SP, SP, #4
0x16C6	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x16CA	0x4909    LDR	R1, [PC, #36]
0x16CC	0xB402    PUSH	(R1)
0x16CE	0xF2400300  MOVW	R3, #0
0x16D2	0xF2400200  MOVW	R2, #0
0x16D6	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x16DA	0xF7FFFFD3  BL	_UART2_Init_Advanced+0
0x16DE	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x16E0	0x4A04    LDR	R2, [PC, #16]
0x16E2	0x4905    LDR	R1, [PC, #20]
0x16E4	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x16E6	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x16E8	0xF8DDE000  LDR	LR, [SP, #0]
0x16EC	0xB001    ADD	SP, SP, #4
0x16EE	0x4770    BX	LR
0x16F0	0x2D100000  	__GPIO_MODULE_USART2_PD56+0
0x16F4	0x14990000  	_UART2_Write+0
0x16F8	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1684	0xB081    SUB	SP, SP, #4
0x1686	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x168A	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x168C	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x168E	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1690	0xB408    PUSH	(R3)
0x1692	0xB293    UXTH	R3, R2
0x1694	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1696	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1698	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x169A	0xF7FFFB33  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x169E	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x16A0	0xF8DDE000  LDR	LR, [SP, #0]
0x16A4	0xB001    ADD	SP, SP, #4
0x16A6	0x4770    BX	LR
0x16A8	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x19FC	0xB081    SUB	SP, SP, #4
0x19FE	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x1A02	0x4909    LDR	R1, [PC, #36]
0x1A04	0xB402    PUSH	(R1)
0x1A06	0xF2400300  MOVW	R3, #0
0x1A0A	0xF2400200  MOVW	R2, #0
0x1A0E	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1A12	0xF7FFFE23  BL	_UART1_Init_Advanced+0
0x1A16	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x1A18	0x4A04    LDR	R2, [PC, #16]
0x1A1A	0x4905    LDR	R1, [PC, #20]
0x1A1C	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x1A1E	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x1A20	0xF8DDE000  LDR	LR, [SP, #0]
0x1A24	0xB001    ADD	SP, SP, #4
0x1A26	0x4770    BX	LR
0x1A28	0x2CA40000  	__GPIO_MODULE_USART1_PA9_10+0
0x1A2C	0x14F10000  	_UART1_Write+0
0x1A30	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x165C	0xB081    SUB	SP, SP, #4
0x165E	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1662	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x1664	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1666	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1668	0xB408    PUSH	(R3)
0x166A	0xB293    UXTH	R3, R2
0x166C	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x166E	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1670	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1672	0xF7FFFB47  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x1676	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x1678	0xF8DDE000  LDR	LR, [SP, #0]
0x167C	0xB001    ADD	SP, SP, #4
0x167E	0x4770    BX	LR
0x1680	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x18B8	0xB081    SUB	SP, SP, #4
0x18BA	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x18BE	0x4909    LDR	R1, [PC, #36]
0x18C0	0xB402    PUSH	(R1)
0x18C2	0xF2400300  MOVW	R3, #0
0x18C6	0xF2400200  MOVW	R2, #0
0x18CA	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x18CE	0xF7FFFED9  BL	_UART2_Init_Advanced+0
0x18D2	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x18D4	0x4A04    LDR	R2, [PC, #16]
0x18D6	0x4905    LDR	R1, [PC, #20]
0x18D8	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x18DA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x18DC	0xF8DDE000  LDR	LR, [SP, #0]
0x18E0	0xB001    ADD	SP, SP, #4
0x18E2	0x4770    BX	LR
0x18E4	0x2D100000  	__GPIO_MODULE_USART2_PD56+0
0x18E8	0x14990000  	_UART2_Write+0
0x18EC	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x2430	0xB083    SUB	SP, SP, #12
0x2432	0xF8CDE000  STR	LR, [SP, #0]
0x2436	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x2438	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x243A	0x220D    MOVS	R2, #13
0x243C	0xF88D2008  STRB	R2, [SP, #8]
0x2440	0x220A    MOVS	R2, #10
0x2442	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x2446	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x2448	0xF7FFFC96  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x244C	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x244E	0x7802    LDRB	R2, [R0, #0]
0x2450	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x2452	0x9001    STR	R0, [SP, #4]
0x2454	0xF7FFFC90  BL	easymx_v7_STM32F107VC__log_write+0
0x2458	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x245A	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x245C	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x245E	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x2460	0x7802    LDRB	R2, [R0, #0]
0x2462	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x2464	0x9001    STR	R0, [SP, #4]
0x2466	0xF7FFFC87  BL	easymx_v7_STM32F107VC__log_write+0
0x246A	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x246C	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x246E	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x2470	0xAA02    ADD	R2, SP, #8
0x2472	0x4610    MOV	R0, R2
0x2474	0xF7FFFC80  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x2478	0xF10D0209  ADD	R2, SP, #9
0x247C	0x4610    MOV	R0, R2
0x247E	0xF7FFFC7B  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x2482	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x2484	0x2006    MOVS	R0, #6
0x2486	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x2488	0x2900    CMP	R1, #0
0x248A	0xD0DD    BEQ	L_mikrobus_logWrite97
0x248C	0x2901    CMP	R1, #1
0x248E	0xD0DE    BEQ	L_mikrobus_logWrite98
0x2490	0x2902    CMP	R1, #2
0x2492	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x2494	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x2496	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x2498	0xF8DDE000  LDR	LR, [SP, #0]
0x249C	0xB003    ADD	SP, SP, #12
0x249E	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x1D78	0xB081    SUB	SP, SP, #4
0x1D7A	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x1D7E	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x1D80	0xB2CC    UXTB	R4, R1
0x1D82	0xB2A0    UXTH	R0, R4
0x1D84	0x4C03    LDR	R4, [PC, #12]
0x1D86	0x6824    LDR	R4, [R4, #0]
0x1D88	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x1D8A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x1D8C	0xF8DDE000  LDR	LR, [SP, #0]
0x1D90	0xB001    ADD	SP, SP, #4
0x1D92	0x4770    BX	LR
0x1D94	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x14F0	0xB081    SUB	SP, SP, #4
0x14F2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x14F6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x14F8	0x4803    LDR	R0, [PC, #12]
0x14FA	0xF7FFFF27  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x14FE	0xF8DDE000  LDR	LR, [SP, #0]
0x1502	0xB001    ADD	SP, SP, #4
0x1504	0x4770    BX	LR
0x1506	0xBF00    NOP
0x1508	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x134C	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x134E	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x1352	0x4601    MOV	R1, R0
0x1354	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x1358	0x680B    LDR	R3, [R1, #0]
0x135A	0xF3C312C0  UBFX	R2, R3, #7, #1
0x135E	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x1360	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x1362	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x1364	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x1366	0xB001    ADD	SP, SP, #4
0x1368	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x1498	0xB081    SUB	SP, SP, #4
0x149A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x149E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x14A0	0x4803    LDR	R0, [PC, #12]
0x14A2	0xF7FFFF53  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x14A6	0xF8DDE000  LDR	LR, [SP, #0]
0x14AA	0xB001    ADD	SP, SP, #4
0x14AC	0x4770    BX	LR
0x14AE	0xBF00    NOP
0x14B0	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x139C	0xB081    SUB	SP, SP, #4
0x139E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x13A2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x13A4	0x4803    LDR	R0, [PC, #12]
0x13A6	0xF7FFFFD1  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x13AA	0xF8DDE000  LDR	LR, [SP, #0]
0x13AE	0xB001    ADD	SP, SP, #4
0x13B0	0x4770    BX	LR
0x13B2	0xBF00    NOP
0x13B4	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x1464	0xB081    SUB	SP, SP, #4
0x1466	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x146A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x146C	0x4803    LDR	R0, [PC, #12]
0x146E	0xF7FFFF6D  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x1472	0xF8DDE000  LDR	LR, [SP, #0]
0x1476	0xB001    ADD	SP, SP, #4
0x1478	0x4770    BX	LR
0x147A	0xBF00    NOP
0x147C	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x1400	0xB081    SUB	SP, SP, #4
0x1402	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x1406	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1408	0x4803    LDR	R0, [PC, #12]
0x140A	0xF7FFFF9F  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x140E	0xF8DDE000  LDR	LR, [SP, #0]
0x1412	0xB001    ADD	SP, SP, #4
0x1414	0x4770    BX	LR
0x1416	0xBF00    NOP
0x1418	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationInit:
;Click_Accel8_STM.c, 53 :: 		void applicationInit()
0x2568	0xB081    SUB	SP, SP, #4
0x256A	0xF8CDE000  STR	LR, [SP, #0]
;Click_Accel8_STM.c, 55 :: 		accel8_i2cDriverInit( (T_ACCEL8_P)&_MIKROBUS1_GPIO, (T_ACCEL8_P)&_MIKROBUS1_I2C, _ACCEL8_DEVICE_SLAVE_ADDRESS_ADD );
0x256E	0x2269    MOVS	R2, __ACCEL8_DEVICE_SLAVE_ADDRESS_ADD
0x2570	0x4927    LDR	R1, [PC, #156]
0x2572	0x4828    LDR	R0, [PC, #160]
0x2574	0xF7FFFEAA  BL	_accel8_i2cDriverInit+0
;Click_Accel8_STM.c, 57 :: 		mikrobus_logWrite(" --- Device Reset --- ", _LOG_LINE );
0x2578	0x4827    LDR	R0, [PC, #156]
0x257A	0x2102    MOVS	R1, #2
0x257C	0xF7FFFF58  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 58 :: 		accel8_writeByte(_ACCEL8_REG_PWR_MGMT_1, _ACCEL8_PM1_DEVICE_RESET);
0x2580	0x2180    MOVS	R1, __ACCEL8_PM1_DEVICE_RESET
0x2582	0x206B    MOVS	R0, __ACCEL8_REG_PWR_MGMT_1
0x2584	0xF7FFFF22  BL	_accel8_writeByte+0
;Click_Accel8_STM.c, 59 :: 		accel8_writeByte(_ACCEL8_REG_SIGNAL_PATH_RESET, _ACCEL8_GYRO_RESET | _ACCEL8_ACCEL_RESET | _ACCEL8_TEMP_RESET );
0x2588	0x2004    MOVS	R0, __ACCEL8_GYRO_RESET
0x258A	0xF0400002  ORR	R0, R0, __ACCEL8_ACCEL_RESET
0x258E	0xB2C0    UXTB	R0, R0
0x2590	0xF0400001  ORR	R0, R0, __ACCEL8_TEMP_RESET
0x2594	0xB2C1    UXTB	R1, R0
0x2596	0x2068    MOVS	R0, __ACCEL8_REG_SIGNAL_PATH_RESET
0x2598	0xF7FFFF18  BL	_accel8_writeByte+0
;Click_Accel8_STM.c, 61 :: 		mikrobus_logWrite(" --- Device Configuration --- ", _LOG_LINE );
0x259C	0x481F    LDR	R0, [PC, #124]
0x259E	0x2102    MOVS	R1, #2
0x25A0	0xF7FFFF46  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 62 :: 		accel8_writeByte(_ACCEL8_REG_PWR_MGMT_1, _ACCEL8_PM1_CLKSEL_INTERNAL_8MHZ_OSCILLATOR);
0x25A4	0x2100    MOVS	R1, __ACCEL8_PM1_CLKSEL_INTERNAL_8MHZ_OSCILLATOR
0x25A6	0x206B    MOVS	R0, __ACCEL8_REG_PWR_MGMT_1
0x25A8	0xF7FFFF10  BL	_accel8_writeByte+0
;Click_Accel8_STM.c, 63 :: 		accel8_writeByte(_ACCEL8_REG_INT_ENABLE, _ACCEL8_INTE_DATA_RDY_ENABLE );
0x25AC	0x2101    MOVS	R1, __ACCEL8_INTE_DATA_RDY_ENABLE
0x25AE	0x2038    MOVS	R0, __ACCEL8_REG_INT_ENABLE
0x25B0	0xF7FFFF0C  BL	_accel8_writeByte+0
;Click_Accel8_STM.c, 65 :: 		gyroRange = accel8_gyroConfig(_ACCEL8_GYRO_CFG_FULL_SCALE_RANGE_250dbs);
0x25B4	0x2000    MOVS	R0, __ACCEL8_GYRO_CFG_FULL_SCALE_RANGE_250dbs
0x25B6	0xF7FFFE9B  BL	_accel8_gyroConfig+0
0x25BA	0x4919    LDR	R1, [PC, #100]
0x25BC	0x8008    STRH	R0, [R1, #0]
;Click_Accel8_STM.c, 66 :: 		accelRange = accel8_accelConfig(_ACCEL8_ACCEL_CFG_FULL_SCALE_RANGE_2g);
0x25BE	0x2000    MOVS	R0, __ACCEL8_ACCEL_CFG_FULL_SCALE_RANGE_2g
0x25C0	0xF7FFFF6E  BL	_accel8_accelConfig+0
0x25C4	0x4917    LDR	R1, [PC, #92]
0x25C6	0x7008    STRB	R0, [R1, #0]
;Click_Accel8_STM.c, 69 :: 		_ACCEL8_FIFO_ENABLE_X_AXIS_GYRO |
0x25C8	0x2080    MOVS	R0, __ACCEL8_FIFO_ENABLE_TEMP
0x25CA	0xF0400040  ORR	R0, R0, __ACCEL8_FIFO_ENABLE_X_AXIS_GYRO
0x25CE	0xB2C0    UXTB	R0, R0
;Click_Accel8_STM.c, 70 :: 		_ACCEL8_FIFO_ENABLE_Y_AXIS_GYRO |
0x25D0	0xF0400020  ORR	R0, R0, __ACCEL8_FIFO_ENABLE_Y_AXIS_GYRO
0x25D4	0xB2C0    UXTB	R0, R0
;Click_Accel8_STM.c, 71 :: 		_ACCEL8_FIFO_ENABLE_Z_AXIS_GYRO |
0x25D6	0xF0400010  ORR	R0, R0, __ACCEL8_FIFO_ENABLE_Z_AXIS_GYRO
0x25DA	0xB2C0    UXTB	R0, R0
;Click_Accel8_STM.c, 72 :: 		_ACCEL8_FIFO_ENABLE_ACCEL );
0x25DC	0xF0400008  ORR	R0, R0, __ACCEL8_FIFO_ENABLE_ACCEL
0x25E0	0xB2C1    UXTB	R1, R0
;Click_Accel8_STM.c, 68 :: 		accel8_writeByte(_ACCEL8_REG_FIFO_EN, _ACCEL8_FIFO_ENABLE_TEMP |
0x25E2	0x2023    MOVS	R0, __ACCEL8_REG_FIFO_EN
;Click_Accel8_STM.c, 72 :: 		_ACCEL8_FIFO_ENABLE_ACCEL );
0x25E4	0xF7FFFEF2  BL	_accel8_writeByte+0
;Click_Accel8_STM.c, 73 :: 		Delay_ms( 1000 );
0x25E8	0xF64127FF  MOVW	R7, #6911
0x25EC	0xF2C007B7  MOVT	R7, #183
L_applicationInit2:
0x25F0	0x1E7F    SUBS	R7, R7, #1
0x25F2	0xD1FD    BNE	L_applicationInit2
0x25F4	0xBF00    NOP
0x25F6	0xBF00    NOP
0x25F8	0xBF00    NOP
0x25FA	0xBF00    NOP
0x25FC	0xBF00    NOP
;Click_Accel8_STM.c, 74 :: 		mikrobus_logWrite(" --- Start Measurement --- ", _LOG_LINE);
0x25FE	0x480A    LDR	R0, [PC, #40]
0x2600	0x2102    MOVS	R1, #2
0x2602	0xF7FFFF15  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 75 :: 		}
L_end_applicationInit:
0x2606	0xF8DDE000  LDR	LR, [SP, #0]
0x260A	0xB001    ADD	SP, SP, #4
0x260C	0x4770    BX	LR
0x260E	0xBF00    NOP
0x2610	0x2E640000  	__MIKROBUS1_I2C+0
0x2614	0x2DE80000  	__MIKROBUS1_GPIO+0
0x2618	0x00152000  	?lstr2_Click_Accel8_STM+0
0x261C	0x002C2000  	?lstr3_Click_Accel8_STM+0
0x2620	0x01E82000  	_gyroRange+0
0x2624	0x01DB2000  	_accelRange+0
0x2628	0x004B2000  	?lstr4_Click_Accel8_STM+0
; end of _applicationInit
_accel8_i2cDriverInit:
;__accel8_driver.c, 275 :: 		void accel8_i2cDriverInit(T_ACCEL8_P gpioObj, T_ACCEL8_P i2cObj, uint8_t slave)
; slave start address is: 8 (R2)
; i2cObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x22CC	0xB081    SUB	SP, SP, #4
0x22CE	0xF8CDE000  STR	LR, [SP, #0]
0x22D2	0x4604    MOV	R4, R0
; slave end address is: 8 (R2)
; i2cObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 16 (R4)
; i2cObj start address is: 4 (R1)
; slave start address is: 8 (R2)
;__accel8_driver.c, 277 :: 		_slaveAddress = slave;
0x22D4	0x4B05    LDR	R3, [PC, #20]
0x22D6	0x701A    STRB	R2, [R3, #0]
; slave end address is: 8 (R2)
;__accel8_driver.c, 278 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x22D8	0x4608    MOV	R0, R1
; i2cObj end address is: 4 (R1)
0x22DA	0xF7FFFE5D  BL	__accel8_driver_hal_i2cMap+0
;__accel8_driver.c, 279 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x22DE	0x4620    MOV	R0, R4
; gpioObj end address is: 16 (R4)
0x22E0	0xF7FFFD6A  BL	__accel8_driver_hal_gpioMap+0
;__accel8_driver.c, 280 :: 		}
L_end_accel8_i2cDriverInit:
0x22E4	0xF8DDE000  LDR	LR, [SP, #0]
0x22E8	0xB001    ADD	SP, SP, #4
0x22EA	0x4770    BX	LR
0x22EC	0x01F62000  	__accel8_driver__slaveAddress+0
; end of _accel8_i2cDriverInit
__accel8_driver_hal_i2cMap:
;__hal_stm32.c, 82 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
; i2cObj start address is: 0 (R0)
; i2cObj end address is: 0 (R0)
; i2cObj start address is: 0 (R0)
;__hal_stm32.c, 86 :: 		fp_i2cStart    = tmp->i2cStart;
0x1F98	0x6802    LDR	R2, [R0, #0]
0x1F9A	0x4906    LDR	R1, [PC, #24]
0x1F9C	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 87 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x1F9E	0x1D01    ADDS	R1, R0, #4
0x1FA0	0x680A    LDR	R2, [R1, #0]
0x1FA2	0x4905    LDR	R1, [PC, #20]
0x1FA4	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 88 :: 		fp_i2cRead     = tmp->i2cRead;
0x1FA6	0xF2000108  ADDW	R1, R0, #8
; i2cObj end address is: 0 (R0)
0x1FAA	0x680A    LDR	R2, [R1, #0]
0x1FAC	0x4903    LDR	R1, [PC, #12]
0x1FAE	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 89 :: 		}
L_end_hal_i2cMap:
0x1FB0	0x4770    BX	LR
0x1FB2	0xBF00    NOP
0x1FB4	0x02382000  	__accel8_driver_fp_i2cStart+0
0x1FB8	0x02482000  	__accel8_driver_fp_i2cWrite+0
0x1FBC	0x02342000  	__accel8_driver_fp_i2cRead+0
; end of __accel8_driver_hal_i2cMap
__accel8_driver_hal_gpioMap:
;__accel8_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__accel8_hal.c, 347 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x1DB8	0xF2000130  ADDW	R1, R0, #48
0x1DBC	0x311C    ADDS	R1, #28
0x1DBE	0x680A    LDR	R2, [R1, #0]
0x1DC0	0x4904    LDR	R1, [PC, #16]
0x1DC2	0x600A    STR	R2, [R1, #0]
;__accel8_hal.c, 362 :: 		hal_gpio_anSet = tmp->gpioSet[ __AN_PIN_OUTPUT__ ];
0x1DC4	0x6802    LDR	R2, [R0, #0]
0x1DC6	0x4904    LDR	R1, [PC, #16]
0x1DC8	0x600A    STR	R2, [R1, #0]
;__accel8_hal.c, 368 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x1DCA	0x1D01    ADDS	R1, R0, #4
; gpioObj end address is: 0 (R0)
0x1DCC	0x680A    LDR	R2, [R1, #0]
0x1DCE	0x4903    LDR	R1, [PC, #12]
0x1DD0	0x600A    STR	R2, [R1, #0]
;__accel8_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x1DD2	0x4770    BX	LR
0x1DD4	0x023C2000  	__accel8_driver_hal_gpio_intGet+0
0x1DD8	0x02402000  	__accel8_driver_hal_gpio_anSet+0
0x1DDC	0x02442000  	__accel8_driver_hal_gpio_rstSet+0
; end of __accel8_driver_hal_gpioMap
_accel8_writeByte:
;__accel8_driver.c, 295 :: 		void accel8_writeByte(uint8_t reg, uint8_t _data)
; _data start address is: 4 (R1)
; reg start address is: 0 (R0)
0x23CC	0xB082    SUB	SP, SP, #8
0x23CE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 4 (R1)
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
; _data start address is: 4 (R1)
;__accel8_driver.c, 299 :: 		writeReg[ 0 ] = reg;
0x23D2	0xAA01    ADD	R2, SP, #4
0x23D4	0x7010    STRB	R0, [R2, #0]
; reg end address is: 0 (R0)
;__accel8_driver.c, 300 :: 		writeReg[ 1 ] = _data;
0x23D6	0x1C52    ADDS	R2, R2, #1
0x23D8	0x7011    STRB	R1, [R2, #0]
; _data end address is: 4 (R1)
;__accel8_driver.c, 302 :: 		hal_i2cStart();
0x23DA	0xF7FFFA0F  BL	__accel8_driver_hal_i2cStart+0
;__accel8_driver.c, 303 :: 		hal_i2cWrite(_slaveAddress, writeReg, 2, END_MODE_STOP);
0x23DE	0xAB01    ADD	R3, SP, #4
0x23E0	0x4A05    LDR	R2, [PC, #20]
0x23E2	0x7812    LDRB	R2, [R2, #0]
0x23E4	0x4619    MOV	R1, R3
0x23E6	0x2301    MOVS	R3, #1
0x23E8	0xB2D0    UXTB	R0, R2
0x23EA	0x2202    MOVS	R2, #2
0x23EC	0xF7FFFAF2  BL	__accel8_driver_hal_i2cWrite+0
;__accel8_driver.c, 304 :: 		}
L_end_accel8_writeByte:
0x23F0	0xF8DDE000  LDR	LR, [SP, #0]
0x23F4	0xB002    ADD	SP, SP, #8
0x23F6	0x4770    BX	LR
0x23F8	0x01F62000  	__accel8_driver__slaveAddress+0
; end of _accel8_writeByte
__accel8_driver_hal_i2cStart:
;__hal_stm32.c, 91 :: 		static int hal_i2cStart()
0x17FC	0xB082    SUB	SP, SP, #8
0x17FE	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 93 :: 		int res = 0;
0x1802	0xF2400400  MOVW	R4, #0
0x1806	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 94 :: 		res |= fp_i2cStart();
0x180A	0x4C06    LDR	R4, [PC, #24]
0x180C	0x6824    LDR	R4, [R4, #0]
0x180E	0x47A0    BLX	R4
0x1810	0xF9BD1004  LDRSH	R1, [SP, #4]
0x1814	0xEA410000  ORR	R0, R1, R0, LSL #0
;__hal_stm32.c, 95 :: 		return res;
0x1818	0xB200    SXTH	R0, R0
;__hal_stm32.c, 96 :: 		}
L_end_hal_i2cStart:
0x181A	0xF8DDE000  LDR	LR, [SP, #0]
0x181E	0xB002    ADD	SP, SP, #8
0x1820	0x4770    BX	LR
0x1822	0xBF00    NOP
0x1824	0x02382000  	__accel8_driver_fp_i2cStart+0
; end of __accel8_driver_hal_i2cStart
_I2C1_Start:
;__Lib_I2C_12.c, 536 :: 		
0x1644	0xB081    SUB	SP, SP, #4
0x1646	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 537 :: 		
0x164A	0x4803    LDR	R0, [PC, #12]
0x164C	0xF7FFFA26  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 538 :: 		
L_end_I2C1_Start:
0x1650	0xF8DDE000  LDR	LR, [SP, #0]
0x1654	0xB001    ADD	SP, SP, #4
0x1656	0x4770    BX	LR
0x1658	0x54004000  	I2C1_CR1+0
; end of _I2C1_Start
_I2Cx_Start:
;__Lib_I2C_12.c, 204 :: 		
; I2C_BASE start address is: 0 (R0)
0x0A9C	0xB083    SUB	SP, SP, #12
0x0A9E	0xF8CDE000  STR	LR, [SP, #0]
0x0AA2	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 12 (R3)
;__Lib_I2C_12.c, 205 :: 		
; timeout start address is: 0 (R0)
0x0AA4	0xF04F0000  MOV	R0, #0
;__Lib_I2C_12.c, 208 :: 		
0x0AA8	0x4926    LDR	R1, [PC, #152]
0x0AAA	0x428B    CMP	R3, R1
0x0AAC	0xD106    BNE	L_I2Cx_Start7
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 209 :: 		
0x0AAE	0x4926    LDR	R1, [PC, #152]
; timeout start address is: 16 (R4)
0x0AB0	0x680C    LDR	R4, [R1, #0]
;__Lib_I2C_12.c, 210 :: 		
0x0AB2	0x4926    LDR	R1, [PC, #152]
0x0AB4	0x680A    LDR	R2, [R1, #0]
0x0AB6	0x4926    LDR	R1, [PC, #152]
0x0AB8	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 211 :: 		
; timeout end address is: 16 (R4)
0x0ABA	0xE00B    B	L_I2Cx_Start8
L_I2Cx_Start7:
;__Lib_I2C_12.c, 212 :: 		
; timeout start address is: 0 (R0)
0x0ABC	0x4925    LDR	R1, [PC, #148]
0x0ABE	0x428B    CMP	R3, R1
0x0AC0	0xD107    BNE	L__I2Cx_Start123
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 213 :: 		
0x0AC2	0x4925    LDR	R1, [PC, #148]
; timeout start address is: 0 (R0)
0x0AC4	0x6808    LDR	R0, [R1, #0]
;__Lib_I2C_12.c, 214 :: 		
0x0AC6	0x4925    LDR	R1, [PC, #148]
0x0AC8	0x680A    LDR	R2, [R1, #0]
0x0ACA	0x4921    LDR	R1, [PC, #132]
0x0ACC	0x600A    STR	R2, [R1, #0]
; timeout end address is: 0 (R0)
0x0ACE	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
0x0AD0	0xE000    B	L_I2Cx_Start9
L__I2Cx_Start123:
;__Lib_I2C_12.c, 212 :: 		
0x0AD2	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
L_I2Cx_Start9:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L_I2Cx_Start8:
;__Lib_I2C_12.c, 217 :: 		
; timeout start address is: 16 (R4)
0x0AD4	0x4922    LDR	R1, [PC, #136]
0x0AD6	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 219 :: 		
0x0AD8	0x9401    STR	R4, [SP, #4]
0x0ADA	0x9302    STR	R3, [SP, #8]
0x0ADC	0x4618    MOV	R0, R3
0x0ADE	0xF7FFFE49  BL	__Lib_I2C_12_I2Cx_Wait_For_Idle+0
0x0AE2	0x9B02    LDR	R3, [SP, #8]
0x0AE4	0x9C01    LDR	R4, [SP, #4]
0x0AE6	0xB910    CBNZ	R0, L_I2Cx_Start10
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 220 :: 		
0x0AE8	0xF64F70FF  MOVW	R0, #65535
0x0AEC	0xE025    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 221 :: 		
L_I2Cx_Start10:
;__Lib_I2C_12.c, 224 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0AEE	0x2201    MOVS	R2, #1
0x0AF0	0x6819    LDR	R1, [R3, #0]
0x0AF2	0xF3622108  BFI	R1, R2, #8, #1
0x0AF6	0x6019    STR	R1, [R3, #0]
;__Lib_I2C_12.c, 226 :: 		
0x0AF8	0xF2030114  ADDW	R1, R3, #20
0x0AFC	0x680A    LDR	R2, [R1, #0]
0x0AFE	0xF3C22140  UBFX	R1, R2, #9, #1
0x0B02	0xB111    CBZ	R1, L_I2Cx_Start11
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 227 :: 		
0x0B04	0xF64F70FF  MOVW	R0, #65535
0x0B08	0xE017    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 228 :: 		
L_I2Cx_Start11:
;__Lib_I2C_12.c, 229 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0B0A	0x4625    MOV	R5, R4
; timeout end address is: 16 (R4)
0x0B0C	0x461C    MOV	R4, R3
L_I2Cx_Start12:
; I2C_BASE end address is: 12 (R3)
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x0B0E	0x4915    LDR	R1, [PC, #84]
0x0B10	0x4620    MOV	R0, R4
0x0B12	0xF7FFFE1D  BL	_ChekXForEvent+0
0x0B16	0xB978    CBNZ	R0, L_I2Cx_Start13
;__Lib_I2C_12.c, 230 :: 		
0x0B18	0x4911    LDR	R1, [PC, #68]
0x0B1A	0x6809    LDR	R1, [R1, #0]
0x0B1C	0xB159    CBZ	R1, L__I2Cx_Start124
;__Lib_I2C_12.c, 231 :: 		
0x0B1E	0xB935    CBNZ	R5, L_I2Cx_Start15
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 232 :: 		
0x0B20	0x2006    MOVS	R0, #6
0x0B22	0x4C0B    LDR	R4, [PC, #44]
0x0B24	0x6824    LDR	R4, [R4, #0]
0x0B26	0x47A0    BLX	R4
;__Lib_I2C_12.c, 233 :: 		
0x0B28	0xF64F70FF  MOVW	R0, #65535
0x0B2C	0xE005    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 234 :: 		
L_I2Cx_Start15:
;__Lib_I2C_12.c, 235 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x0B2E	0x1E69    SUBS	R1, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0B30	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0B32	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 236 :: 		
0x0B34	0xE7FF    B	L_I2Cx_Start14
L__I2Cx_Start124:
;__Lib_I2C_12.c, 230 :: 		
;__Lib_I2C_12.c, 236 :: 		
L_I2Cx_Start14:
;__Lib_I2C_12.c, 237 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
0x0B36	0xE7EA    B	L_I2Cx_Start12
L_I2Cx_Start13:
;__Lib_I2C_12.c, 238 :: 		
0x0B38	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 239 :: 		
L_end_I2Cx_Start:
0x0B3A	0xF8DDE000  LDR	LR, [SP, #0]
0x0B3E	0xB003    ADD	SP, SP, #12
0x0B40	0x4770    BX	LR
0x0B42	0xBF00    NOP
0x0B44	0x54004000  	I2C1_CR1+0
0x0B48	0x01DC2000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0B4C	0x02542000  	_I2C1_Timeout_Ptr+0
0x0B50	0x02502000  	_I2Cx_Timeout_Ptr+0
0x0B54	0x58004000  	I2C2_CR1+0
0x0B58	0x01E02000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0B5C	0x02582000  	_I2C2_Timeout_Ptr+0
0x0B60	0x01E42000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0B64	0x00010003  	#196609
; end of _I2Cx_Start
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0288	0x4901    LDR	R1, [PC, #4]
0x028A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x028C	0x4770    BX	LR
0x028E	0xBF00    NOP
0x0290	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x027C	0x4901    LDR	R1, [PC, #4]
0x027E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x0280	0x4770    BX	LR
0x0282	0xBF00    NOP
0x0284	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0270	0x4901    LDR	R1, [PC, #4]
0x0272	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x0274	0x4770    BX	LR
0x0276	0xBF00    NOP
0x0278	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0294	0x4901    LDR	R1, [PC, #4]
0x0296	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x0298	0x4770    BX	LR
0x029A	0xBF00    NOP
0x029C	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02B8	0x4901    LDR	R1, [PC, #4]
0x02BA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x02BC	0x4770    BX	LR
0x02BE	0xBF00    NOP
0x02C0	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02AC	0x4901    LDR	R1, [PC, #4]
0x02AE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x02B0	0x4770    BX	LR
0x02B2	0xBF00    NOP
0x02B4	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02A0	0x4901    LDR	R1, [PC, #4]
0x02A2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x02A4	0x4770    BX	LR
0x02A6	0xBF00    NOP
0x02A8	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0264	0x4901    LDR	R1, [PC, #4]
0x0266	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0268	0x4770    BX	LR
0x026A	0xBF00    NOP
0x026C	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0234	0x4901    LDR	R1, [PC, #4]
0x0236	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x0238	0x4770    BX	LR
0x023A	0xBF00    NOP
0x023C	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0228	0x4901    LDR	R1, [PC, #4]
0x022A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x022C	0x4770    BX	LR
0x022E	0xBF00    NOP
0x0230	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0240	0x4901    LDR	R1, [PC, #4]
0x0242	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x0244	0x4770    BX	LR
0x0246	0xBF00    NOP
0x0248	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0258	0x4901    LDR	R1, [PC, #4]
0x025A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x025C	0x4770    BX	LR
0x025E	0xBF00    NOP
0x0260	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x024C	0x4901    LDR	R1, [PC, #4]
0x024E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x0250	0x4770    BX	LR
0x0252	0xBF00    NOP
0x0254	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x081C	0x4901    LDR	R1, [PC, #4]
0x081E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x0820	0x4770    BX	LR
0x0822	0xBF00    NOP
0x0824	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0810	0x4901    LDR	R1, [PC, #4]
0x0812	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x0814	0x4770    BX	LR
0x0816	0xBF00    NOP
0x0818	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0804	0x4901    LDR	R1, [PC, #4]
0x0806	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0808	0x4770    BX	LR
0x080A	0xBF00    NOP
0x080C	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0828	0x4901    LDR	R1, [PC, #4]
0x082A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x082C	0x4770    BX	LR
0x082E	0xBF00    NOP
0x0830	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x084C	0x4901    LDR	R1, [PC, #4]
0x084E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x0850	0x4770    BX	LR
0x0852	0xBF00    NOP
0x0854	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0840	0x4901    LDR	R1, [PC, #4]
0x0842	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x0844	0x4770    BX	LR
0x0846	0xBF00    NOP
0x0848	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0834	0x4901    LDR	R1, [PC, #4]
0x0836	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x0838	0x4770    BX	LR
0x083A	0xBF00    NOP
0x083C	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02DC	0x4901    LDR	R1, [PC, #4]
0x02DE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x02E0	0x4770    BX	LR
0x02E2	0xBF00    NOP
0x02E4	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02D0	0x4901    LDR	R1, [PC, #4]
0x02D2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x02D4	0x4770    BX	LR
0x02D6	0xBF00    NOP
0x02D8	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02C4	0x4901    LDR	R1, [PC, #4]
0x02C6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x02C8	0x4770    BX	LR
0x02CA	0xBF00    NOP
0x02CC	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02E8	0x4901    LDR	R1, [PC, #4]
0x02EA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x02EC	0x4770    BX	LR
0x02EE	0xBF00    NOP
0x02F0	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
__Lib_I2C_12_I2Cx_Wait_For_Idle:
;__Lib_I2C_12.c, 172 :: 		
; I2C_BASE start address is: 0 (R0)
0x0774	0xB081    SUB	SP, SP, #4
0x0776	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 173 :: 		
; timeout start address is: 8 (R2)
0x077A	0xF04F0200  MOV	R2, #0
;__Lib_I2C_12.c, 176 :: 		
0x077E	0x4919    LDR	R1, [PC, #100]
0x0780	0x4288    CMP	R0, R1
0x0782	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle0
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 177 :: 		
0x0784	0x4918    LDR	R1, [PC, #96]
; timeout start address is: 12 (R3)
0x0786	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 178 :: 		
0x0788	0x4918    LDR	R1, [PC, #96]
0x078A	0x680A    LDR	R2, [R1, #0]
0x078C	0x4918    LDR	R1, [PC, #96]
0x078E	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 179 :: 		
0x0790	0x461C    MOV	R4, R3
; timeout end address is: 12 (R3)
0x0792	0xE00B    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle1
L___Lib_I2C_12_I2Cx_Wait_For_Idle0:
;__Lib_I2C_12.c, 180 :: 		
; timeout start address is: 8 (R2)
0x0794	0x4917    LDR	R1, [PC, #92]
0x0796	0x4288    CMP	R0, R1
0x0798	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle121
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 181 :: 		
0x079A	0x4917    LDR	R1, [PC, #92]
; timeout start address is: 12 (R3)
0x079C	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 182 :: 		
0x079E	0x4917    LDR	R1, [PC, #92]
0x07A0	0x680A    LDR	R2, [R1, #0]
0x07A2	0x4913    LDR	R1, [PC, #76]
0x07A4	0x600A    STR	R2, [R1, #0]
; timeout end address is: 12 (R3)
0x07A6	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 183 :: 		
0x07A8	0xE000    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle2
L___Lib_I2C_12_I2Cx_Wait_For_Idle121:
;__Lib_I2C_12.c, 180 :: 		
0x07AA	0x4614    MOV	R4, R2
;__Lib_I2C_12.c, 183 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle2:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L___Lib_I2C_12_I2Cx_Wait_For_Idle1:
;__Lib_I2C_12.c, 185 :: 		
; timeout start address is: 16 (R4)
0x07AC	0x4914    LDR	R1, [PC, #80]
0x07AE	0x600C    STR	R4, [R1, #0]
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 16 (R4)
0x07B0	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 187 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle3:
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x07B2	0x4618    MOV	R0, R3
0x07B4	0xF7FFFCCC  BL	_I2Cx_Is_Idle+0
0x07B8	0xB970    CBNZ	R0, L___Lib_I2C_12_I2Cx_Wait_For_Idle4
;__Lib_I2C_12.c, 188 :: 		
0x07BA	0x4911    LDR	R1, [PC, #68]
0x07BC	0x6809    LDR	R1, [R1, #0]
0x07BE	0xB151    CBZ	R1, L___Lib_I2C_12_I2Cx_Wait_For_Idle122
;__Lib_I2C_12.c, 189 :: 		
0x07C0	0xB92C    CBNZ	R4, L___Lib_I2C_12_I2Cx_Wait_For_Idle6
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 190 :: 		
0x07C2	0x2005    MOVS	R0, #5
0x07C4	0x4C0A    LDR	R4, [PC, #40]
0x07C6	0x6824    LDR	R4, [R4, #0]
0x07C8	0x47A0    BLX	R4
;__Lib_I2C_12.c, 191 :: 		
0x07CA	0x2000    MOVS	R0, #0
0x07CC	0xE005    B	L_end_I2Cx_Wait_For_Idle
;__Lib_I2C_12.c, 192 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle6:
;__Lib_I2C_12.c, 193 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x07CE	0x1E61    SUBS	R1, R4, #1
; timeout end address is: 16 (R4)
; timeout start address is: 0 (R0)
0x07D0	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x07D2	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 194 :: 		
0x07D4	0xE7FF    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle5
L___Lib_I2C_12_I2Cx_Wait_For_Idle122:
;__Lib_I2C_12.c, 188 :: 		
;__Lib_I2C_12.c, 194 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle5:
;__Lib_I2C_12.c, 195 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
0x07D6	0xE7EC    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle3
L___Lib_I2C_12_I2Cx_Wait_For_Idle4:
;__Lib_I2C_12.c, 196 :: 		
0x07D8	0x2001    MOVS	R0, #1
;__Lib_I2C_12.c, 197 :: 		
L_end_I2Cx_Wait_For_Idle:
0x07DA	0xF8DDE000  LDR	LR, [SP, #0]
0x07DE	0xB001    ADD	SP, SP, #4
0x07E0	0x4770    BX	LR
0x07E2	0xBF00    NOP
0x07E4	0x54004000  	I2C1_CR1+0
0x07E8	0x01DC2000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x07EC	0x02542000  	_I2C1_Timeout_Ptr+0
0x07F0	0x02502000  	_I2Cx_Timeout_Ptr+0
0x07F4	0x58004000  	I2C2_CR1+0
0x07F8	0x01E02000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x07FC	0x02582000  	_I2C2_Timeout_Ptr+0
0x0800	0x01E42000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of __Lib_I2C_12_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_12.c, 167 :: 		
; I2C_BASE start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 168 :: 		
0x0152	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0156	0x680A    LDR	R2, [R1, #0]
0x0158	0xF3C20140  UBFX	R1, R2, #1, #1
0x015C	0xF0810101  EOR	R1, R1, #1
0x0160	0xB2C9    UXTB	R1, R1
0x0162	0xB2C8    UXTB	R0, R1
;__Lib_I2C_12.c, 169 :: 		
L_end_I2Cx_Is_Idle:
0x0164	0xB001    ADD	SP, SP, #4
0x0166	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_12.c, 199 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0750	0xB081    SUB	SP, SP, #4
0x0752	0xF8CDE000  STR	LR, [SP, #0]
0x0756	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_12.c, 200 :: 		
; I2C_BASE end address is: 0 (R0)
0x0758	0xF7FFFD58  BL	_I2Cx_Get_Status+0
0x075C	0xEA000203  AND	R2, R0, R3, LSL #0
0x0760	0x429A    CMP	R2, R3
0x0762	0xF2400200  MOVW	R2, #0
0x0766	0xD100    BNE	L__ChekXForEvent156
0x0768	0x2201    MOVS	R2, #1
L__ChekXForEvent156:
; Event end address is: 12 (R3)
0x076A	0xB2D0    UXTB	R0, R2
;__Lib_I2C_12.c, 201 :: 		
L_end_ChekXForEvent:
0x076C	0xF8DDE000  LDR	LR, [SP, #0]
0x0770	0xB001    ADD	SP, SP, #4
0x0772	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_12.c, 154 :: 		
; I2C_BASE start address is: 0 (R0)
0x020C	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 157 :: 		
0x020E	0xF2000114  ADDW	R1, R0, #20
0x0212	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_12.c, 158 :: 		
0x0214	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0218	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_12.c, 160 :: 		
0x021A	0x0409    LSLS	R1, R1, #16
0x021C	0xEA420101  ORR	R1, R2, R1, LSL #0
0x0220	0x4608    MOV	R0, R1
;__Lib_I2C_12.c, 161 :: 		
L_end_I2Cx_Get_Status:
0x0222	0xB001    ADD	SP, SP, #4
0x0224	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C2_Start:
;__Lib_I2C_12.c, 566 :: 		
0x1434	0xB081    SUB	SP, SP, #4
0x1436	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 567 :: 		
0x143A	0x4803    LDR	R0, [PC, #12]
0x143C	0xF7FFFB2E  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 568 :: 		
L_end_I2C2_Start:
0x1440	0xF8DDE000  LDR	LR, [SP, #0]
0x1444	0xB001    ADD	SP, SP, #4
0x1446	0x4770    BX	LR
0x1448	0x58004000  	I2C2_CR1+0
; end of _I2C2_Start
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x141C	0xB081    SUB	SP, SP, #4
0x141E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x1422	0x4803    LDR	R0, [PC, #12]
0x1424	0xF7FFFF7A  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x1428	0xF8DDE000  LDR	LR, [SP, #0]
0x142C	0xB001    ADD	SP, SP, #4
0x142E	0x4770    BX	LR
0x1430	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x131C	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x131E	0x6802    LDR	R2, [R0, #0]
0x1320	0xF3C21140  UBFX	R1, R2, #5, #1
0x1324	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x1326	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x1328	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x132A	0x6809    LDR	R1, [R1, #0]
0x132C	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x132E	0xB001    ADD	SP, SP, #4
0x1330	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x1480	0xB081    SUB	SP, SP, #4
0x1482	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x1486	0x4803    LDR	R0, [PC, #12]
0x1488	0xF7FFFF54  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x148C	0xF8DDE000  LDR	LR, [SP, #0]
0x1490	0xB001    ADD	SP, SP, #4
0x1492	0x4770    BX	LR
0x1494	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x1334	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x1336	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x1338	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x133C	0xB001    ADD	SP, SP, #4
0x133E	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x144C	0xB081    SUB	SP, SP, #4
0x144E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x1452	0x4803    LDR	R0, [PC, #12]
0x1454	0xF7FFFF74  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x1458	0xF8DDE000  LDR	LR, [SP, #0]
0x145C	0xB001    ADD	SP, SP, #4
0x145E	0x4770    BX	LR
0x1460	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x1340	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x1342	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x1344	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x1348	0xB001    ADD	SP, SP, #4
0x134A	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x1384	0xB081    SUB	SP, SP, #4
0x1386	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x138A	0x4803    LDR	R0, [PC, #12]
0x138C	0xF7FFFFC6  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x1390	0xF8DDE000  LDR	LR, [SP, #0]
0x1394	0xB001    ADD	SP, SP, #4
0x1396	0x4770    BX	LR
0x1398	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x136C	0xB081    SUB	SP, SP, #4
0x136E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x1372	0x4803    LDR	R0, [PC, #12]
0x1374	0xF7FFFFDE  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x1378	0xF8DDE000  LDR	LR, [SP, #0]
0x137C	0xB001    ADD	SP, SP, #4
0x137E	0x4770    BX	LR
0x1380	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x13E8	0xB081    SUB	SP, SP, #4
0x13EA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x13EE	0x4803    LDR	R0, [PC, #12]
0x13F0	0xF7FFFFA6  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x13F4	0xF8DDE000  LDR	LR, [SP, #0]
0x13F8	0xB001    ADD	SP, SP, #4
0x13FA	0x4770    BX	LR
0x13FC	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x13D0	0xB081    SUB	SP, SP, #4
0x13D2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x13D6	0x4803    LDR	R0, [PC, #12]
0x13D8	0xF7FFFFA0  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x13DC	0xF8DDE000  LDR	LR, [SP, #0]
0x13E0	0xB001    ADD	SP, SP, #4
0x13E2	0x4770    BX	LR
0x13E4	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x13B8	0xB081    SUB	SP, SP, #4
0x13BA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x13BE	0x4803    LDR	R0, [PC, #12]
0x13C0	0xF7FFFFB8  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x13C4	0xF8DDE000  LDR	LR, [SP, #0]
0x13C8	0xB001    ADD	SP, SP, #4
0x13CA	0x4770    BX	LR
0x13CC	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x1584	0xB081    SUB	SP, SP, #4
0x1586	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x158A	0x4803    LDR	R0, [PC, #12]
0x158C	0xF7FFFED8  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x1590	0xF8DDE000  LDR	LR, [SP, #0]
0x1594	0xB001    ADD	SP, SP, #4
0x1596	0x4770    BX	LR
0x1598	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x156C	0xB081    SUB	SP, SP, #4
0x156E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x1572	0x4803    LDR	R0, [PC, #12]
0x1574	0xF7FFFED2  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x1578	0xF8DDE000  LDR	LR, [SP, #0]
0x157C	0xB001    ADD	SP, SP, #4
0x157E	0x4770    BX	LR
0x1580	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x1554	0xB081    SUB	SP, SP, #4
0x1556	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x155A	0x4803    LDR	R0, [PC, #12]
0x155C	0xF7FFFEEA  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x1560	0xF8DDE000  LDR	LR, [SP, #0]
0x1564	0xB001    ADD	SP, SP, #4
0x1566	0x4770    BX	LR
0x1568	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x15CC	0xB081    SUB	SP, SP, #4
0x15CE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x15D2	0x4803    LDR	R0, [PC, #12]
0x15D4	0xF7FFFEB4  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x15D8	0xF8DDE000  LDR	LR, [SP, #0]
0x15DC	0xB001    ADD	SP, SP, #4
0x15DE	0x4770    BX	LR
0x15E0	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x15B4	0xB081    SUB	SP, SP, #4
0x15B6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x15BA	0x4803    LDR	R0, [PC, #12]
0x15BC	0xF7FFFEAE  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x15C0	0xF8DDE000  LDR	LR, [SP, #0]
0x15C4	0xB001    ADD	SP, SP, #4
0x15C6	0x4770    BX	LR
0x15C8	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x159C	0xB081    SUB	SP, SP, #4
0x159E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x15A2	0x4803    LDR	R0, [PC, #12]
0x15A4	0xF7FFFEC6  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x15A8	0xF8DDE000  LDR	LR, [SP, #0]
0x15AC	0xB001    ADD	SP, SP, #4
0x15AE	0x4770    BX	LR
0x15B0	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x14D8	0xB081    SUB	SP, SP, #4
0x14DA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x14DE	0x4803    LDR	R0, [PC, #12]
0x14E0	0xF7FFFF2E  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x14E4	0xF8DDE000  LDR	LR, [SP, #0]
0x14E8	0xB001    ADD	SP, SP, #4
0x14EA	0x4770    BX	LR
0x14EC	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__accel8_driver_hal_i2cWrite:
;__hal_stm32.c, 98 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x19D4	0xB082    SUB	SP, SP, #8
0x19D6	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 100 :: 		int res = 0;
0x19DA	0xF2400400  MOVW	R4, #0
0x19DE	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 102 :: 		res |= fp_i2cWrite(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x19E2	0x4C05    LDR	R4, [PC, #20]
0x19E4	0x6824    LDR	R4, [R4, #0]
0x19E6	0x47A0    BLX	R4
0x19E8	0xF9BD4004  LDRSH	R4, [SP, #4]
0x19EC	0x4304    ORRS	R4, R0
;__hal_stm32.c, 103 :: 		return res;
0x19EE	0xB220    SXTH	R0, R4
;__hal_stm32.c, 104 :: 		}
L_end_hal_i2cWrite:
0x19F0	0xF8DDE000  LDR	LR, [SP, #0]
0x19F4	0xB002    ADD	SP, SP, #8
0x19F6	0x4770    BX	LR
0x19F8	0x02482000  	__accel8_driver_fp_i2cWrite+0
; end of __accel8_driver_hal_i2cWrite
_I2C1_Write:
;__Lib_I2C_12.c, 556 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x14B4	0xB081    SUB	SP, SP, #4
0x14B6	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 557 :: 		
0x14BA	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x14BC	0x4613    MOV	R3, R2
0x14BE	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x14C0	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x14C2	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x14C4	0xF7FFFE3A  BL	_I2Cx_Write+0
0x14C8	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 558 :: 		
L_end_I2C1_Write:
0x14CA	0xF8DDE000  LDR	LR, [SP, #0]
0x14CE	0xB001    ADD	SP, SP, #4
0x14D0	0x4770    BX	LR
0x14D2	0xBF00    NOP
0x14D4	0x54004000  	I2C1_CR1+0
; end of _I2C1_Write
_I2Cx_Write:
;__Lib_I2C_12.c, 245 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x113C	0xB082    SUB	SP, SP, #8
0x113E	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x1142	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_12.c, 247 :: 		
; timeout start address is: 20 (R5)
0x1144	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 250 :: 		
0x1148	0x4C56    LDR	R4, [PC, #344]
0x114A	0x42A0    CMP	R0, R4
0x114C	0xD106    BNE	L_I2Cx_Write16
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 251 :: 		
0x114E	0x4C56    LDR	R4, [PC, #344]
; timeout start address is: 28 (R7)
0x1150	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 252 :: 		
0x1152	0x4C56    LDR	R4, [PC, #344]
0x1154	0x6825    LDR	R5, [R4, #0]
0x1156	0x4C56    LDR	R4, [PC, #344]
0x1158	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 253 :: 		
; timeout end address is: 28 (R7)
0x115A	0xE00A    B	L_I2Cx_Write17
L_I2Cx_Write16:
;__Lib_I2C_12.c, 254 :: 		
; timeout start address is: 20 (R5)
0x115C	0x4C55    LDR	R4, [PC, #340]
0x115E	0x42A0    CMP	R0, R4
0x1160	0xD106    BNE	L__I2Cx_Write125
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 255 :: 		
0x1162	0x4C55    LDR	R4, [PC, #340]
; timeout start address is: 28 (R7)
0x1164	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 256 :: 		
0x1166	0x4C55    LDR	R4, [PC, #340]
0x1168	0x6825    LDR	R5, [R4, #0]
0x116A	0x4C51    LDR	R4, [PC, #324]
0x116C	0x6025    STR	R5, [R4, #0]
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 257 :: 		
0x116E	0xE000    B	L_I2Cx_Write18
L__I2Cx_Write125:
;__Lib_I2C_12.c, 254 :: 		
0x1170	0x462F    MOV	R7, R5
;__Lib_I2C_12.c, 257 :: 		
L_I2Cx_Write18:
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
L_I2Cx_Write17:
;__Lib_I2C_12.c, 259 :: 		
; timeout start address is: 28 (R7)
0x1172	0x4C53    LDR	R4, [PC, #332]
0x1174	0x6027    STR	R7, [R4, #0]
;__Lib_I2C_12.c, 261 :: 		
0x1176	0xF2000510  ADDW	R5, R0, #16
0x117A	0x004C    LSLS	R4, R1, #1
0x117C	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x117E	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x1180	0x46B9    MOV	R9, R7
0x1182	0x4607    MOV	R7, R0
0x1184	0x4690    MOV	R8, R2
0x1186	0x4635    MOV	R5, R6
0x1188	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 262 :: 		
L_I2Cx_Write19:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
0x118A	0x494E    LDR	R1, [PC, #312]
0x118C	0x4638    MOV	R0, R7
0x118E	0xF7FFFADF  BL	_ChekXForEvent+0
0x1192	0xB988    CBNZ	R0, L_I2Cx_Write20
;__Lib_I2C_12.c, 263 :: 		
0x1194	0x4C4A    LDR	R4, [PC, #296]
0x1196	0x6824    LDR	R4, [R4, #0]
0x1198	0xB16C    CBZ	R4, L__I2Cx_Write126
;__Lib_I2C_12.c, 264 :: 		
0x119A	0xF1B90F00  CMP	R9, #0
0x119E	0xD106    BNE	L_I2Cx_Write22
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 265 :: 		
0x11A0	0x2004    MOVS	R0, #4
0x11A2	0x4C43    LDR	R4, [PC, #268]
0x11A4	0x6824    LDR	R4, [R4, #0]
0x11A6	0x47A0    BLX	R4
;__Lib_I2C_12.c, 266 :: 		
0x11A8	0xF64F70FF  MOVW	R0, #65535
0x11AC	0xE076    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 267 :: 		
L_I2Cx_Write22:
;__Lib_I2C_12.c, 268 :: 		
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
; count start address is: 24 (R6)
0x11AE	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x11B2	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 269 :: 		
0x11B4	0xE7FF    B	L_I2Cx_Write21
L__I2Cx_Write126:
;__Lib_I2C_12.c, 263 :: 		
;__Lib_I2C_12.c, 269 :: 		
L_I2Cx_Write21:
;__Lib_I2C_12.c, 270 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x11B6	0xE7E8    B	L_I2Cx_Write19
L_I2Cx_Write20:
;__Lib_I2C_12.c, 271 :: 		
; i start address is: 0 (R0)
0x11B8	0x2000    MOVS	R0, #0
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 20 (R5)
0x11BA	0x9701    STR	R7, [SP, #4]
0x11BC	0x4629    MOV	R1, R5
0x11BE	0x4637    MOV	R7, R6
0x11C0	0x9E01    LDR	R6, [SP, #4]
L_I2Cx_Write23:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x11C2	0x1E7C    SUBS	R4, R7, #1
0x11C4	0x42A0    CMP	R0, R4
0x11C6	0xD226    BCS	L_I2Cx_Write24
;__Lib_I2C_12.c, 272 :: 		
0x11C8	0xF2060510  ADDW	R5, R6, #16
0x11CC	0xEB080400  ADD	R4, R8, R0, LSL #0
0x11D0	0x7824    LDRB	R4, [R4, #0]
0x11D2	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 274 :: 		
0x11D4	0x4C3A    LDR	R4, [PC, #232]
; timeout start address is: 36 (R9)
0x11D6	0xF8D49000  LDR	R9, [R4, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x11DA	0x4682    MOV	R10, R0
0x11DC	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 275 :: 		
L_I2Cx_Write26:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 40 (R10)
0x11DE	0x493A    LDR	R1, [PC, #232]
0x11E0	0x4630    MOV	R0, R6
0x11E2	0xF7FFFAB5  BL	_ChekXForEvent+0
0x11E6	0xB988    CBNZ	R0, L_I2Cx_Write27
;__Lib_I2C_12.c, 276 :: 		
0x11E8	0x4C35    LDR	R4, [PC, #212]
0x11EA	0x6824    LDR	R4, [R4, #0]
0x11EC	0xB16C    CBZ	R4, L__I2Cx_Write127
;__Lib_I2C_12.c, 277 :: 		
0x11EE	0xF1B90F00  CMP	R9, #0
0x11F2	0xD106    BNE	L_I2Cx_Write29
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 40 (R10)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 278 :: 		
0x11F4	0x2004    MOVS	R0, #4
0x11F6	0x4C2E    LDR	R4, [PC, #184]
0x11F8	0x6824    LDR	R4, [R4, #0]
0x11FA	0x47A0    BLX	R4
;__Lib_I2C_12.c, 279 :: 		
0x11FC	0xF64F70FF  MOVW	R0, #65535
0x1200	0xE04C    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 280 :: 		
L_I2Cx_Write29:
;__Lib_I2C_12.c, 281 :: 		
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; i start address is: 40 (R10)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
0x1202	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x1206	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 282 :: 		
0x1208	0xE7FF    B	L_I2Cx_Write28
L__I2Cx_Write127:
;__Lib_I2C_12.c, 276 :: 		
;__Lib_I2C_12.c, 282 :: 		
L_I2Cx_Write28:
;__Lib_I2C_12.c, 283 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x120A	0xE7E8    B	L_I2Cx_Write26
L_I2Cx_Write27:
;__Lib_I2C_12.c, 271 :: 		
0x120C	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 0 (R0)
0x1210	0x4620    MOV	R0, R4
;__Lib_I2C_12.c, 284 :: 		
0x1212	0x4629    MOV	R1, R5
; count end address is: 28 (R7)
; END_mode end address is: 20 (R5)
0x1214	0xE7D5    B	L_I2Cx_Write23
L_I2Cx_Write24:
;__Lib_I2C_12.c, 286 :: 		
; END_mode start address is: 4 (R1)
0x1216	0xF2060510  ADDW	R5, R6, #16
0x121A	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x121E	0x7824    LDRB	R4, [R4, #0]
0x1220	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 288 :: 		
0x1222	0x4C27    LDR	R4, [PC, #156]
; timeout start address is: 28 (R7)
0x1224	0x6827    LDR	R7, [R4, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x1226	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 289 :: 		
L_I2Cx_Write30:
; timeout start address is: 28 (R7)
; END_mode start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
0x1228	0x4928    LDR	R1, [PC, #160]
0x122A	0x4630    MOV	R0, R6
0x122C	0xF7FFFA90  BL	_ChekXForEvent+0
0x1230	0xB970    CBNZ	R0, L_I2Cx_Write31
;__Lib_I2C_12.c, 290 :: 		
0x1232	0x4C23    LDR	R4, [PC, #140]
0x1234	0x6824    LDR	R4, [R4, #0]
0x1236	0xB154    CBZ	R4, L__I2Cx_Write128
;__Lib_I2C_12.c, 291 :: 		
0x1238	0xB937    CBNZ	R7, L_I2Cx_Write33
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 292 :: 		
0x123A	0x2004    MOVS	R0, #4
0x123C	0x4C1C    LDR	R4, [PC, #112]
0x123E	0x6824    LDR	R4, [R4, #0]
0x1240	0x47A0    BLX	R4
;__Lib_I2C_12.c, 293 :: 		
0x1242	0xF64F70FF  MOVW	R0, #65535
0x1246	0xE029    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 294 :: 		
L_I2Cx_Write33:
;__Lib_I2C_12.c, 295 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x1248	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x124A	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 296 :: 		
0x124C	0xE7FF    B	L_I2Cx_Write32
L__I2Cx_Write128:
;__Lib_I2C_12.c, 290 :: 		
;__Lib_I2C_12.c, 296 :: 		
L_I2Cx_Write32:
;__Lib_I2C_12.c, 297 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x124E	0xE7EB    B	L_I2Cx_Write30
L_I2Cx_Write31:
;__Lib_I2C_12.c, 298 :: 		
0x1250	0x2D01    CMP	R5, #1
0x1252	0xD105    BNE	L_I2Cx_Write34
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 299 :: 		
0x1254	0x2501    MOVS	R5, #1
0x1256	0x6834    LDR	R4, [R6, #0]
0x1258	0xF3652449  BFI	R4, R5, #9, #1
0x125C	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x125E	0xE01C    B	L_I2Cx_Write35
L_I2Cx_Write34:
;__Lib_I2C_12.c, 301 :: 		
; I2C_BASE start address is: 24 (R6)
0x1260	0x2501    MOVS	R5, #1
0x1262	0x6834    LDR	R4, [R6, #0]
0x1264	0xF3652408  BFI	R4, R5, #8, #1
0x1268	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 303 :: 		
0x126A	0x4C15    LDR	R4, [PC, #84]
; timeout start address is: 28 (R7)
0x126C	0x6827    LDR	R7, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x126E	0x4635    MOV	R5, R6
;__Lib_I2C_12.c, 304 :: 		
L_I2Cx_Write36:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x1270	0x4917    LDR	R1, [PC, #92]
0x1272	0x4628    MOV	R0, R5
0x1274	0xF7FFFA6C  BL	_ChekXForEvent+0
0x1278	0xB978    CBNZ	R0, L_I2Cx_Write37
;__Lib_I2C_12.c, 305 :: 		
0x127A	0x4C11    LDR	R4, [PC, #68]
0x127C	0x6824    LDR	R4, [R4, #0]
0x127E	0xB15C    CBZ	R4, L__I2Cx_Write129
;__Lib_I2C_12.c, 306 :: 		
0x1280	0xB937    CBNZ	R7, L_I2Cx_Write39
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 307 :: 		
0x1282	0x2004    MOVS	R0, #4
0x1284	0x4C0A    LDR	R4, [PC, #40]
0x1286	0x6824    LDR	R4, [R4, #0]
0x1288	0x47A0    BLX	R4
;__Lib_I2C_12.c, 308 :: 		
0x128A	0xF64F70FF  MOVW	R0, #65535
0x128E	0xE005    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 309 :: 		
L_I2Cx_Write39:
;__Lib_I2C_12.c, 310 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x1290	0x1E7C    SUBS	R4, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
0x1292	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x1294	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 311 :: 		
0x1296	0xE7FF    B	L_I2Cx_Write38
L__I2Cx_Write129:
;__Lib_I2C_12.c, 305 :: 		
;__Lib_I2C_12.c, 311 :: 		
L_I2Cx_Write38:
;__Lib_I2C_12.c, 312 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
0x1298	0xE7EA    B	L_I2Cx_Write36
L_I2Cx_Write37:
;__Lib_I2C_12.c, 313 :: 		
L_I2Cx_Write35:
;__Lib_I2C_12.c, 314 :: 		
0x129A	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 315 :: 		
L_end_I2Cx_Write:
0x129C	0xF8DDE000  LDR	LR, [SP, #0]
0x12A0	0xB002    ADD	SP, SP, #8
0x12A2	0x4770    BX	LR
0x12A4	0x54004000  	I2C1_CR1+0
0x12A8	0x01DC2000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x12AC	0x02542000  	_I2C1_Timeout_Ptr+0
0x12B0	0x02502000  	_I2Cx_Timeout_Ptr+0
0x12B4	0x58004000  	I2C2_CR1+0
0x12B8	0x01E02000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x12BC	0x02582000  	_I2C2_Timeout_Ptr+0
0x12C0	0x01E42000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x12C4	0x00820007  	#458882
0x12C8	0x00800007  	#458880
0x12CC	0x00840007  	#458884
0x12D0	0x00010003  	#196609
; end of _I2Cx_Write
_I2C2_Write:
;__Lib_I2C_12.c, 586 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x1530	0xB081    SUB	SP, SP, #4
0x1532	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 587 :: 		
0x1536	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1538	0x4613    MOV	R3, R2
0x153A	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x153C	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x153E	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x1540	0xF7FFFDFC  BL	_I2Cx_Write+0
0x1544	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 588 :: 		
L_end_I2C2_Write:
0x1546	0xF8DDE000  LDR	LR, [SP, #0]
0x154A	0xB001    ADD	SP, SP, #4
0x154C	0x4770    BX	LR
0x154E	0xBF00    NOP
0x1550	0x58004000  	I2C2_CR1+0
; end of _I2C2_Write
_accel8_gyroConfig:
;__accel8_driver.c, 395 :: 		uint16_t accel8_gyroConfig(uint8_t cfg)
; cfg start address is: 0 (R0)
0x22F0	0xB082    SUB	SP, SP, #8
0x22F2	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__accel8_driver.c, 398 :: 		accel8_writeByte(_ACCEL8_REG_GYRO_CONFIG, cfg);
0x22F6	0xF88D0004  STRB	R0, [SP, #4]
0x22FA	0xB2C1    UXTB	R1, R0
0x22FC	0x201B    MOVS	R0, #27
0x22FE	0xF000F865  BL	_accel8_writeByte+0
0x2302	0xF89D0004  LDRB	R0, [SP, #4]
;__accel8_driver.c, 400 :: 		range = cfg >> 3;
0x2306	0x08C1    LSRS	R1, R0, #3
; cfg end address is: 0 (R0)
; range start address is: 0 (R0)
0x2308	0xB2C8    UXTB	R0, R1
;__accel8_driver.c, 402 :: 		switch( range )
0x230A	0xE012    B	L_accel8_gyroConfig6
; range end address is: 0 (R0)
;__accel8_driver.c, 404 :: 		case 0:
L_accel8_gyroConfig8:
;__accel8_driver.c, 406 :: 		_gyroRange = 250;
0x230C	0x22FA    MOVS	R2, #250
0x230E	0x4910    LDR	R1, [PC, #64]
0x2310	0x800A    STRH	R2, [R1, #0]
;__accel8_driver.c, 407 :: 		break;
0x2312	0xE016    B	L_accel8_gyroConfig7
;__accel8_driver.c, 409 :: 		case 1:
L_accel8_gyroConfig9:
;__accel8_driver.c, 411 :: 		_gyroRange = 500;
0x2314	0xF24012F4  MOVW	R2, #500
0x2318	0x490D    LDR	R1, [PC, #52]
0x231A	0x800A    STRH	R2, [R1, #0]
;__accel8_driver.c, 412 :: 		break;
0x231C	0xE011    B	L_accel8_gyroConfig7
;__accel8_driver.c, 414 :: 		case 2:
L_accel8_gyroConfig10:
;__accel8_driver.c, 416 :: 		_gyroRange = 1000;
0x231E	0xF24032E8  MOVW	R2, #1000
0x2322	0x490B    LDR	R1, [PC, #44]
0x2324	0x800A    STRH	R2, [R1, #0]
;__accel8_driver.c, 417 :: 		break;
0x2326	0xE00C    B	L_accel8_gyroConfig7
;__accel8_driver.c, 419 :: 		case 3:
L_accel8_gyroConfig11:
;__accel8_driver.c, 421 :: 		_gyroRange = 2000;
0x2328	0xF24072D0  MOVW	R2, #2000
0x232C	0x4908    LDR	R1, [PC, #32]
0x232E	0x800A    STRH	R2, [R1, #0]
;__accel8_driver.c, 422 :: 		break;
0x2330	0xE007    B	L_accel8_gyroConfig7
;__accel8_driver.c, 424 :: 		}
L_accel8_gyroConfig6:
; range start address is: 0 (R0)
0x2332	0x2800    CMP	R0, #0
0x2334	0xD0EA    BEQ	L_accel8_gyroConfig8
0x2336	0x2801    CMP	R0, #1
0x2338	0xD0EC    BEQ	L_accel8_gyroConfig9
0x233A	0x2802    CMP	R0, #2
0x233C	0xD0EF    BEQ	L_accel8_gyroConfig10
0x233E	0x2803    CMP	R0, #3
0x2340	0xD0F2    BEQ	L_accel8_gyroConfig11
; range end address is: 0 (R0)
L_accel8_gyroConfig7:
;__accel8_driver.c, 425 :: 		return _gyroRange;
0x2342	0x4903    LDR	R1, [PC, #12]
0x2344	0x8808    LDRH	R0, [R1, #0]
;__accel8_driver.c, 426 :: 		}
L_end_accel8_gyroConfig:
0x2346	0xF8DDE000  LDR	LR, [SP, #0]
0x234A	0xB002    ADD	SP, SP, #8
0x234C	0x4770    BX	LR
0x234E	0xBF00    NOP
0x2350	0x022E2000  	__accel8_driver__gyroRange+0
; end of _accel8_gyroConfig
_accel8_accelConfig:
;__accel8_driver.c, 362 :: 		uint8_t accel8_accelConfig(uint8_t cfg)
; cfg start address is: 0 (R0)
0x24A0	0xB082    SUB	SP, SP, #8
0x24A2	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__accel8_driver.c, 366 :: 		accel8_writeByte(_ACCEL8_REG_ACCEL_CONFIG, cfg);
0x24A6	0xF88D0004  STRB	R0, [SP, #4]
0x24AA	0xB2C1    UXTB	R1, R0
0x24AC	0x201C    MOVS	R0, #28
0x24AE	0xF7FFFF8D  BL	_accel8_writeByte+0
0x24B2	0xF89D0004  LDRB	R0, [SP, #4]
;__accel8_driver.c, 367 :: 		range = cfg >> 3;
0x24B6	0x08C1    LSRS	R1, R0, #3
; cfg end address is: 0 (R0)
; range start address is: 0 (R0)
0x24B8	0xB2C8    UXTB	R0, R1
;__accel8_driver.c, 369 :: 		switch( range )
0x24BA	0xE00F    B	L_accel8_accelConfig0
; range end address is: 0 (R0)
;__accel8_driver.c, 371 :: 		case 0:
L_accel8_accelConfig2:
;__accel8_driver.c, 373 :: 		_accelRange = 2;
0x24BC	0x2202    MOVS	R2, #2
0x24BE	0x490E    LDR	R1, [PC, #56]
0x24C0	0x700A    STRB	R2, [R1, #0]
;__accel8_driver.c, 374 :: 		break;
0x24C2	0xE013    B	L_accel8_accelConfig1
;__accel8_driver.c, 376 :: 		case 1:
L_accel8_accelConfig3:
;__accel8_driver.c, 378 :: 		_accelRange = 4;
0x24C4	0x2204    MOVS	R2, #4
0x24C6	0x490C    LDR	R1, [PC, #48]
0x24C8	0x700A    STRB	R2, [R1, #0]
;__accel8_driver.c, 379 :: 		break;
0x24CA	0xE00F    B	L_accel8_accelConfig1
;__accel8_driver.c, 381 :: 		case 2:
L_accel8_accelConfig4:
;__accel8_driver.c, 383 :: 		_accelRange = 8;
0x24CC	0x2208    MOVS	R2, #8
0x24CE	0x490A    LDR	R1, [PC, #40]
0x24D0	0x700A    STRB	R2, [R1, #0]
;__accel8_driver.c, 384 :: 		break;
0x24D2	0xE00B    B	L_accel8_accelConfig1
;__accel8_driver.c, 386 :: 		case 3:
L_accel8_accelConfig5:
;__accel8_driver.c, 388 :: 		_accelRange = 16;
0x24D4	0x2210    MOVS	R2, #16
0x24D6	0x4908    LDR	R1, [PC, #32]
0x24D8	0x700A    STRB	R2, [R1, #0]
;__accel8_driver.c, 389 :: 		break;
0x24DA	0xE007    B	L_accel8_accelConfig1
;__accel8_driver.c, 391 :: 		}
L_accel8_accelConfig0:
; range start address is: 0 (R0)
0x24DC	0x2800    CMP	R0, #0
0x24DE	0xD0ED    BEQ	L_accel8_accelConfig2
0x24E0	0x2801    CMP	R0, #1
0x24E2	0xD0EF    BEQ	L_accel8_accelConfig3
0x24E4	0x2802    CMP	R0, #2
0x24E6	0xD0F1    BEQ	L_accel8_accelConfig4
0x24E8	0x2803    CMP	R0, #3
0x24EA	0xD0F3    BEQ	L_accel8_accelConfig5
; range end address is: 0 (R0)
L_accel8_accelConfig1:
;__accel8_driver.c, 392 :: 		return _accelRange;
0x24EC	0x4902    LDR	R1, [PC, #8]
0x24EE	0x7808    LDRB	R0, [R1, #0]
;__accel8_driver.c, 393 :: 		}
L_end_accel8_accelConfig:
0x24F0	0xF8DDE000  LDR	LR, [SP, #0]
0x24F4	0xB002    ADD	SP, SP, #8
0x24F6	0x4770    BX	LR
0x24F8	0x01F72000  	__accel8_driver__accelRange+0
; end of _accel8_accelConfig
_applicationTask:
;Click_Accel8_STM.c, 77 :: 		void applicationTask()
0x2688	0xB081    SUB	SP, SP, #4
0x268A	0xF8CDE000  STR	LR, [SP, #0]
;Click_Accel8_STM.c, 79 :: 		accel8_getAccelAxis(&X_accelAxis, &Y_accelAxis, &Z_accelAxis);
0x268E	0x4A61    LDR	R2, [PC, #388]
0x2690	0x4961    LDR	R1, [PC, #388]
0x2692	0x4862    LDR	R0, [PC, #392]
0x2694	0xF7FFFEB2  BL	_accel8_getAccelAxis+0
;Click_Accel8_STM.c, 80 :: 		accel8_getGyroAxis(&X_gyroAxis, &Y_gyroAxis, &Z_gyroAxis);
0x2698	0x4A61    LDR	R2, [PC, #388]
0x269A	0x4962    LDR	R1, [PC, #392]
0x269C	0x4862    LDR	R0, [PC, #392]
0x269E	0xF7FFFCB1  BL	_accel8_getGyroAxis+0
;Click_Accel8_STM.c, 81 :: 		Temperature = accel8_getTemperature();
0x26A2	0xF7FFFDFB  BL	_accel8_getTemperature+0
0x26A6	0x4961    LDR	R1, [PC, #388]
0x26A8	0x6008    STR	R0, [R1, #0]
;Click_Accel8_STM.c, 84 :: 		mikrobus_logWrite("________________ Accel 8 click _________________", _LOG_LINE);
0x26AA	0x4861    LDR	R0, [PC, #388]
0x26AC	0x2102    MOVS	R1, #2
0x26AE	0xF7FFFEBF  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 85 :: 		mikrobus_logWrite("|  Data   | X axis | Y axis | Z axis |  Range  |", _LOG_LINE);
0x26B2	0x4860    LDR	R0, [PC, #384]
0x26B4	0x2102    MOVS	R1, #2
0x26B6	0xF7FFFEBB  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 86 :: 		mikrobus_logWrite("|_________|________|________|________|_________|", _LOG_LINE);
0x26BA	0x485F    LDR	R0, [PC, #380]
0x26BC	0x2102    MOVS	R1, #2
0x26BE	0xF7FFFEB7  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 87 :: 		mikrobus_logWrite("|  Accel  |", _LOG_TEXT);
0x26C2	0x485E    LDR	R0, [PC, #376]
0x26C4	0x2101    MOVS	R1, #1
0x26C6	0xF7FFFEB3  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 88 :: 		IntToStr(X_accelAxis, demoText);
0x26CA	0x4854    LDR	R0, [PC, #336]
0x26CC	0xF9B00000  LDRSH	R0, [R0, #0]
0x26D0	0x495B    LDR	R1, [PC, #364]
0x26D2	0xF7FFFDAB  BL	_IntToStr+0
;Click_Accel8_STM.c, 89 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x26D6	0x2101    MOVS	R1, #1
0x26D8	0x4859    LDR	R0, [PC, #356]
0x26DA	0xF7FFFEA9  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 90 :: 		mikrobus_logWrite("  |", _LOG_TEXT);
0x26DE	0x4859    LDR	R0, [PC, #356]
0x26E0	0x2101    MOVS	R1, #1
0x26E2	0xF7FFFEA5  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 91 :: 		IntToStr(Y_accelAxis, demoText);
0x26E6	0x484C    LDR	R0, [PC, #304]
0x26E8	0xF9B00000  LDRSH	R0, [R0, #0]
0x26EC	0x4954    LDR	R1, [PC, #336]
0x26EE	0xF7FFFD9D  BL	_IntToStr+0
;Click_Accel8_STM.c, 92 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x26F2	0x2101    MOVS	R1, #1
0x26F4	0x4852    LDR	R0, [PC, #328]
0x26F6	0xF7FFFE9B  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 93 :: 		mikrobus_logWrite("  |", _LOG_TEXT);
0x26FA	0x4853    LDR	R0, [PC, #332]
0x26FC	0x2101    MOVS	R1, #1
0x26FE	0xF7FFFE97  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 94 :: 		IntToStr(Z_accelAxis, demoText);
0x2702	0x4844    LDR	R0, [PC, #272]
0x2704	0xF9B00000  LDRSH	R0, [R0, #0]
0x2708	0x494D    LDR	R1, [PC, #308]
0x270A	0xF7FFFD8F  BL	_IntToStr+0
;Click_Accel8_STM.c, 95 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x270E	0x2101    MOVS	R1, #1
0x2710	0x484B    LDR	R0, [PC, #300]
0x2712	0xF7FFFE8D  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 96 :: 		mikrobus_logWrite("  |", _LOG_TEXT);
0x2716	0x484D    LDR	R0, [PC, #308]
0x2718	0x2101    MOVS	R1, #1
0x271A	0xF7FFFE89  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 97 :: 		IntToStr(accelRange, demoText);
0x271E	0x484C    LDR	R0, [PC, #304]
0x2720	0x7800    LDRB	R0, [R0, #0]
0x2722	0x4947    LDR	R1, [PC, #284]
0x2724	0xF7FFFD82  BL	_IntToStr+0
;Click_Accel8_STM.c, 98 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x2728	0x2101    MOVS	R1, #1
0x272A	0x4845    LDR	R0, [PC, #276]
0x272C	0xF7FFFE80  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 99 :: 		mikrobus_logWrite(" g |", _LOG_LINE);
0x2730	0x4848    LDR	R0, [PC, #288]
0x2732	0x2102    MOVS	R1, #2
0x2734	0xF7FFFE7C  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 100 :: 		mikrobus_logWrite("|_________|________|________|________|_________|", _LOG_LINE);
0x2738	0x4847    LDR	R0, [PC, #284]
0x273A	0x2102    MOVS	R1, #2
0x273C	0xF7FFFE78  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 101 :: 		mikrobus_logWrite("|  Gyro   |", _LOG_TEXT);
0x2740	0x4846    LDR	R0, [PC, #280]
0x2742	0x2101    MOVS	R1, #1
0x2744	0xF7FFFE74  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 102 :: 		IntToStr(X_gyroAxis, demoText);
0x2748	0x4837    LDR	R0, [PC, #220]
0x274A	0xF9B00000  LDRSH	R0, [R0, #0]
0x274E	0x493C    LDR	R1, [PC, #240]
0x2750	0xF7FFFD6C  BL	_IntToStr+0
;Click_Accel8_STM.c, 103 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x2754	0x2101    MOVS	R1, #1
0x2756	0x483A    LDR	R0, [PC, #232]
0x2758	0xF7FFFE6A  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 104 :: 		mikrobus_logWrite("  |", _LOG_TEXT);
0x275C	0x4840    LDR	R0, [PC, #256]
0x275E	0x2101    MOVS	R1, #1
0x2760	0xF7FFFE66  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 105 :: 		IntToStr(Y_gyroAxis, demoText);
0x2764	0x482F    LDR	R0, [PC, #188]
0x2766	0xF9B00000  LDRSH	R0, [R0, #0]
0x276A	0x4935    LDR	R1, [PC, #212]
0x276C	0xF7FFFD5E  BL	_IntToStr+0
;Click_Accel8_STM.c, 106 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x2770	0x2101    MOVS	R1, #1
0x2772	0x4833    LDR	R0, [PC, #204]
0x2774	0xF7FFFE5C  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 107 :: 		mikrobus_logWrite("  |", _LOG_TEXT);
0x2778	0x483A    LDR	R0, [PC, #232]
0x277A	0x2101    MOVS	R1, #1
0x277C	0xF7FFFE58  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 108 :: 		IntToStr(Z_gyroAxis, demoText);
0x2780	0x4827    LDR	R0, [PC, #156]
0x2782	0xF9B00000  LDRSH	R0, [R0, #0]
0x2786	0x492E    LDR	R1, [PC, #184]
0x2788	0xF7FFFD50  BL	_IntToStr+0
;Click_Accel8_STM.c, 109 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x278C	0x2101    MOVS	R1, #1
0x278E	0x482C    LDR	R0, [PC, #176]
0x2790	0xF7FFFE4E  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 110 :: 		mikrobus_logWrite("  |", _LOG_TEXT);
0x2794	0x4834    LDR	R0, [PC, #208]
0x2796	0x2101    MOVS	R1, #1
0x2798	0xF7FFFE4A  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 111 :: 		IntToStr(gyroRange, demoText);
0x279C	0x4833    LDR	R0, [PC, #204]
0x279E	0x8800    LDRH	R0, [R0, #0]
0x27A0	0x4927    LDR	R1, [PC, #156]
0x27A2	0xF7FFFD43  BL	_IntToStr+0
;Click_Accel8_STM.c, 112 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x27A6	0x2101    MOVS	R1, #1
0x27A8	0x4825    LDR	R0, [PC, #148]
0x27AA	0xF7FFFE41  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 113 :: 		mikrobus_logWrite("dps|", _LOG_LINE);
0x27AE	0x4830    LDR	R0, [PC, #192]
0x27B0	0x2102    MOVS	R1, #2
0x27B2	0xF7FFFE3D  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 114 :: 		mikrobus_logWrite("|_________|________|________|________|_________|", _LOG_LINE);
0x27B6	0x482F    LDR	R0, [PC, #188]
0x27B8	0x2102    MOVS	R1, #2
0x27BA	0xF7FFFE39  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 115 :: 		FloatToStr(Temperature, demoText);
0x27BE	0x481B    LDR	R0, [PC, #108]
0x27C0	0x6800    LDR	R0, [R0, #0]
0x27C2	0x491F    LDR	R1, [PC, #124]
0x27C4	0xF7FFFC38  BL	_FloatToStr+0
;Click_Accel8_STM.c, 116 :: 		demoText[ 5 ] = 0;
0x27C8	0x2100    MOVS	R1, #0
0x27CA	0x482B    LDR	R0, [PC, #172]
0x27CC	0x7001    STRB	R1, [R0, #0]
;Click_Accel8_STM.c, 117 :: 		mikrobus_logWrite("|  Temp   |", _LOG_TEXT);
0x27CE	0x482B    LDR	R0, [PC, #172]
0x27D0	0x2101    MOVS	R1, #1
0x27D2	0xF7FFFE2D  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 118 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x27D6	0x2101    MOVS	R1, #1
0x27D8	0x4819    LDR	R0, [PC, #100]
0x27DA	0xF7FFFE29  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 119 :: 		mikrobus_logWrite("  C         |", _LOG_LINE);
0x27DE	0x4828    LDR	R0, [PC, #160]
0x27E0	0x2102    MOVS	R1, #2
0x27E2	0xF7FFFE25  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 120 :: 		mikrobus_logWrite("|_________|_________________|", _LOG_LINE);
0x27E6	0x4827    LDR	R0, [PC, #156]
0x27E8	0x2102    MOVS	R1, #2
0x27EA	0xF7FFFE21  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 122 :: 		mikrobus_logWrite("  ", _LOG_LINE);
0x27EE	0x4826    LDR	R0, [PC, #152]
0x27F0	0x2102    MOVS	R1, #2
0x27F2	0xF7FFFE1D  BL	_mikrobus_logWrite+0
;Click_Accel8_STM.c, 123 :: 		Delay_ms( 2000 );
0x27F6	0xF24357FF  MOVW	R7, #13823
0x27FA	0xF2C0176E  MOVT	R7, #366
0x27FE	0xBF00    NOP
0x2800	0xBF00    NOP
L_applicationTask4:
0x2802	0x1E7F    SUBS	R7, R7, #1
0x2804	0xD1FD    BNE	L_applicationTask4
0x2806	0xBF00    NOP
0x2808	0xBF00    NOP
0x280A	0xBF00    NOP
;Click_Accel8_STM.c, 124 :: 		}
L_end_applicationTask:
0x280C	0xF8DDE000  LDR	LR, [SP, #0]
0x2810	0xB001    ADD	SP, SP, #4
0x2812	0x4770    BX	LR
0x2814	0x01EE2000  	_Z_accelAxis+0
0x2818	0x01EC2000  	_Y_accelAxis+0
0x281C	0x01EA2000  	_X_accelAxis+0
0x2820	0x01F42000  	_Z_gyroAxis+0
0x2824	0x01F22000  	_Y_gyroAxis+0
0x2828	0x01F02000  	_X_gyroAxis+0
0x282C	0x01F82000  	_Temperature+0
0x2830	0x00672000  	?lstr5_Click_Accel8_STM+0
0x2834	0x00982000  	?lstr6_Click_Accel8_STM+0
0x2838	0x00C92000  	?lstr7_Click_Accel8_STM+0
0x283C	0x00FA2000  	?lstr8_Click_Accel8_STM+0
0x2840	0x01FC2000  	_demoText+0
0x2844	0x01062000  	?lstr9_Click_Accel8_STM+0
0x2848	0x010A2000  	?lstr10_Click_Accel8_STM+0
0x284C	0x010E2000  	?lstr11_Click_Accel8_STM+0
0x2850	0x01DB2000  	_accelRange+0
0x2854	0x01122000  	?lstr12_Click_Accel8_STM+0
0x2858	0x01172000  	?lstr13_Click_Accel8_STM+0
0x285C	0x01482000  	?lstr14_Click_Accel8_STM+0
0x2860	0x01542000  	?lstr15_Click_Accel8_STM+0
0x2864	0x01582000  	?lstr16_Click_Accel8_STM+0
0x2868	0x015C2000  	?lstr17_Click_Accel8_STM+0
0x286C	0x01E82000  	_gyroRange+0
0x2870	0x01602000  	?lstr18_Click_Accel8_STM+0
0x2874	0x01652000  	?lstr19_Click_Accel8_STM+0
0x2878	0x02012000  	_demoText+5
0x287C	0x01962000  	?lstr20_Click_Accel8_STM+0
0x2880	0x01A22000  	?lstr21_Click_Accel8_STM+0
0x2884	0x01B02000  	?lstr22_Click_Accel8_STM+0
0x2888	0x01CE2000  	?lstr23_Click_Accel8_STM+0
; end of _applicationTask
_accel8_getAccelAxis:
;__accel8_driver.c, 348 :: 		void accel8_getAccelAxis(int16_t *x_axis, int16_t *y_axis, int16_t *z_axis)
0x23FC	0xB084    SUB	SP, SP, #16
0x23FE	0xF8CDE000  STR	LR, [SP, #0]
0x2402	0x9001    STR	R0, [SP, #4]
0x2404	0x9102    STR	R1, [SP, #8]
0x2406	0x9203    STR	R2, [SP, #12]
;__accel8_driver.c, 350 :: 		*x_axis = accel8_readData(_ACCEL8_ACCEL_X_AXIS_DATA);
0x2408	0x203B    MOVS	R0, #59
0x240A	0xF7FFFA0D  BL	_accel8_readData+0
0x240E	0x9B01    LDR	R3, [SP, #4]
0x2410	0x8018    STRH	R0, [R3, #0]
;__accel8_driver.c, 351 :: 		*y_axis = accel8_readData(_ACCEL8_ACCEL_Y_AXIS_DATA);
0x2412	0x203D    MOVS	R0, #61
0x2414	0xF7FFFA08  BL	_accel8_readData+0
0x2418	0x9B02    LDR	R3, [SP, #8]
0x241A	0x8018    STRH	R0, [R3, #0]
;__accel8_driver.c, 352 :: 		*z_axis = accel8_readData(_ACCEL8_ACCEL_Z_AXIS_DATA);
0x241C	0x203F    MOVS	R0, #63
0x241E	0xF7FFFA03  BL	_accel8_readData+0
0x2422	0x9B03    LDR	R3, [SP, #12]
0x2424	0x8018    STRH	R0, [R3, #0]
;__accel8_driver.c, 353 :: 		}
L_end_accel8_getAccelAxis:
0x2426	0xF8DDE000  LDR	LR, [SP, #0]
0x242A	0xB004    ADD	SP, SP, #16
0x242C	0x4770    BX	LR
; end of _accel8_getAccelAxis
_accel8_readData:
;__accel8_driver.c, 320 :: 		uint16_t accel8_readData(uint8_t reg)
; reg start address is: 0 (R0)
0x1828	0xB082    SUB	SP, SP, #8
0x182A	0xF8CDE000  STR	LR, [SP, #0]
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
;__accel8_driver.c, 326 :: 		writeReg[ 0 ] = reg;
0x182E	0xA901    ADD	R1, SP, #4
0x1830	0x7008    STRB	R0, [R1, #0]
; reg end address is: 0 (R0)
;__accel8_driver.c, 328 :: 		hal_i2cStart();
0x1832	0xF7FFFFE3  BL	__accel8_driver_hal_i2cStart+0
;__accel8_driver.c, 329 :: 		hal_i2cWrite(_slaveAddress, writeReg, 1, END_MODE_RESTART);
0x1836	0xAA01    ADD	R2, SP, #4
0x1838	0x4910    LDR	R1, [PC, #64]
0x183A	0x7809    LDRB	R1, [R1, #0]
0x183C	0x2300    MOVS	R3, #0
0x183E	0xB2C8    UXTB	R0, R1
0x1840	0x4611    MOV	R1, R2
0x1842	0x2201    MOVS	R2, #1
0x1844	0xF000F8C6  BL	__accel8_driver_hal_i2cWrite+0
;__accel8_driver.c, 330 :: 		hal_i2cRead(_slaveAddress, readReg, 2, END_MODE_STOP);
0x1848	0xF10D0205  ADD	R2, SP, #5
0x184C	0x490B    LDR	R1, [PC, #44]
0x184E	0x7809    LDRB	R1, [R1, #0]
0x1850	0x2301    MOVS	R3, #1
0x1852	0xB2C8    UXTB	R0, R1
0x1854	0x4611    MOV	R1, R2
0x1856	0x2202    MOVS	R2, #2
0x1858	0xF7FFFE58  BL	__accel8_driver_hal_i2cRead+0
;__accel8_driver.c, 332 :: 		readData = readReg[ 0 ];
0x185C	0xF10D0305  ADD	R3, SP, #5
0x1860	0x7819    LDRB	R1, [R3, #0]
; readData start address is: 0 (R0)
0x1862	0xB2C8    UXTB	R0, R1
;__accel8_driver.c, 333 :: 		readData = readData << 8;
0x1864	0x0202    LSLS	R2, R0, #8
0x1866	0xB292    UXTH	R2, R2
; readData end address is: 0 (R0)
;__accel8_driver.c, 334 :: 		readData = readData | readReg[ 1 ];
0x1868	0x1C59    ADDS	R1, R3, #1
0x186A	0x7809    LDRB	R1, [R1, #0]
0x186C	0xEA420101  ORR	R1, R2, R1, LSL #0
;__accel8_driver.c, 336 :: 		return readData;
0x1870	0xB288    UXTH	R0, R1
;__accel8_driver.c, 337 :: 		}
L_end_accel8_readData:
0x1872	0xF8DDE000  LDR	LR, [SP, #0]
0x1876	0xB002    ADD	SP, SP, #8
0x1878	0x4770    BX	LR
0x187A	0xBF00    NOP
0x187C	0x01F62000  	__accel8_driver__slaveAddress+0
; end of _accel8_readData
__accel8_driver_hal_i2cRead:
;__hal_stm32.c, 106 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x150C	0xB082    SUB	SP, SP, #8
0x150E	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 108 :: 		int res = 0;
0x1512	0xF2400400  MOVW	R4, #0
0x1516	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 110 :: 		fp_i2cRead(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x151A	0x4C04    LDR	R4, [PC, #16]
0x151C	0x6824    LDR	R4, [R4, #0]
0x151E	0x47A0    BLX	R4
;__hal_stm32.c, 111 :: 		return res;
0x1520	0xF9BD0004  LDRSH	R0, [SP, #4]
;__hal_stm32.c, 112 :: 		}
L_end_hal_i2cRead:
0x1524	0xF8DDE000  LDR	LR, [SP, #0]
0x1528	0xB002    ADD	SP, SP, #8
0x152A	0x4770    BX	LR
0x152C	0x02342000  	__accel8_driver_fp_i2cRead+0
; end of __accel8_driver_hal_i2cRead
_I2C1_Read:
;__Lib_I2C_12.c, 552 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x12D4	0xB081    SUB	SP, SP, #4
0x12D6	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 553 :: 		
0x12DA	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x12DC	0x4613    MOV	R3, R2
0x12DE	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x12E0	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x12E2	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x12E4	0xF7FFF806  BL	_I2Cx_Read+0
0x12E8	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 554 :: 		
L_end_I2C1_Read:
0x12EA	0xF8DDE000  LDR	LR, [SP, #0]
0x12EE	0xB001    ADD	SP, SP, #4
0x12F0	0x4770    BX	LR
0x12F2	0xBF00    NOP
0x12F4	0x54004000  	I2C1_CR1+0
; end of _I2C1_Read
_I2Cx_Read:
;__Lib_I2C_12.c, 319 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x02F4	0xB082    SUB	SP, SP, #8
0x02F6	0xF8CDE000  STR	LR, [SP, #0]
0x02FA	0xB2CF    UXTB	R7, R1
0x02FC	0x4601    MOV	R1, R0
0x02FE	0x4698    MOV	R8, R3
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 28 (R7)
; buf start address is: 8 (R2)
; count start address is: 32 (R8)
; END_mode start address is: 12 (R3)
0x0300	0x9B02    LDR	R3, [SP, #8]
;__Lib_I2C_12.c, 321 :: 		
; i start address is: 24 (R6)
0x0302	0xF04F0600  MOV	R6, #0
;__Lib_I2C_12.c, 322 :: 		
; timeout start address is: 20 (R5)
0x0306	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 325 :: 		
0x030A	0x4CC4    LDR	R4, [PC, #784]
0x030C	0x42A1    CMP	R1, R4
0x030E	0xD107    BNE	L_I2Cx_Read40
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 326 :: 		
0x0310	0x4CC3    LDR	R4, [PC, #780]
; timeout start address is: 36 (R9)
0x0312	0xF8D49000  LDR	R9, [R4, #0]
;__Lib_I2C_12.c, 327 :: 		
0x0316	0x4CC3    LDR	R4, [PC, #780]
0x0318	0x6825    LDR	R5, [R4, #0]
0x031A	0x4CC3    LDR	R4, [PC, #780]
0x031C	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 328 :: 		
; timeout end address is: 36 (R9)
0x031E	0xE00B    B	L_I2Cx_Read41
L_I2Cx_Read40:
;__Lib_I2C_12.c, 329 :: 		
; timeout start address is: 20 (R5)
0x0320	0x4CC2    LDR	R4, [PC, #776]
0x0322	0x42A1    CMP	R1, R4
0x0324	0xD107    BNE	L__I2Cx_Read130
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 330 :: 		
0x0326	0x4CC2    LDR	R4, [PC, #776]
; timeout start address is: 0 (R0)
0x0328	0x6820    LDR	R0, [R4, #0]
;__Lib_I2C_12.c, 331 :: 		
0x032A	0x4CC2    LDR	R4, [PC, #776]
0x032C	0x6825    LDR	R5, [R4, #0]
0x032E	0x4CBE    LDR	R4, [PC, #760]
0x0330	0x6025    STR	R5, [R4, #0]
; timeout end address is: 0 (R0)
0x0332	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 332 :: 		
0x0334	0xE000    B	L_I2Cx_Read42
L__I2Cx_Read130:
;__Lib_I2C_12.c, 329 :: 		
0x0336	0x46A9    MOV	R9, R5
;__Lib_I2C_12.c, 332 :: 		
L_I2Cx_Read42:
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
L_I2Cx_Read41:
;__Lib_I2C_12.c, 334 :: 		
; timeout start address is: 36 (R9)
0x0338	0x4CBF    LDR	R4, [PC, #764]
0x033A	0xF8C49000  STR	R9, [R4, #0]
;__Lib_I2C_12.c, 336 :: 		
0x033E	0xE1F4    B	L_I2Cx_Read43
; count end address is: 32 (R8)
;__Lib_I2C_12.c, 337 :: 		
L_I2Cx_Read45:
;__Lib_I2C_12.c, 338 :: 		
0x0340	0xF2010510  ADDW	R5, R1, #16
0x0344	0x007C    LSLS	R4, R7, #1
0x0346	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0348	0xF0440401  ORR	R4, R4, #1
0x034C	0xB2A4    UXTH	R4, R4
0x034E	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0350	0x9601    STR	R6, [SP, #4]
0x0352	0x4616    MOV	R6, R2
0x0354	0x464F    MOV	R7, R9
0x0356	0x9A01    LDR	R2, [SP, #4]
;__Lib_I2C_12.c, 339 :: 		
L_I2Cx_Read46:
; timeout start address is: 28 (R7)
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x0358	0xF2010414  ADDW	R4, R1, #20
0x035C	0x6825    LDR	R5, [R4, #0]
0x035E	0xF3C50440  UBFX	R4, R5, #1, #1
0x0362	0xB964    CBNZ	R4, L_I2Cx_Read47
;__Lib_I2C_12.c, 340 :: 		
0x0364	0x4CB4    LDR	R4, [PC, #720]
0x0366	0x6824    LDR	R4, [R4, #0]
0x0368	0xB144    CBZ	R4, L__I2Cx_Read131
;__Lib_I2C_12.c, 341 :: 		
0x036A	0xB927    CBNZ	R7, L_I2Cx_Read49
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 342 :: 		
0x036C	0x2003    MOVS	R0, #3
0x036E	0x4CAE    LDR	R4, [PC, #696]
0x0370	0x6824    LDR	R4, [R4, #0]
0x0372	0x47A0    BLX	R4
;__Lib_I2C_12.c, 343 :: 		
0x0374	0xE1E2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 344 :: 		
L_I2Cx_Read49:
;__Lib_I2C_12.c, 345 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; i start address is: 8 (R2)
0x0376	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0378	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 346 :: 		
0x037A	0xE7FF    B	L_I2Cx_Read48
L__I2Cx_Read131:
;__Lib_I2C_12.c, 340 :: 		
;__Lib_I2C_12.c, 346 :: 		
L_I2Cx_Read48:
;__Lib_I2C_12.c, 347 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x037C	0xE7EC    B	L_I2Cx_Read46
L_I2Cx_Read47:
;__Lib_I2C_12.c, 348 :: 		
0x037E	0x2500    MOVS	R5, #0
0x0380	0x680C    LDR	R4, [R1, #0]
0x0382	0xF365248A  BFI	R4, R5, #10, #1
0x0386	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 349 :: 		
0x0388	0xF2010414  ADDW	R4, R1, #20
0x038C	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 350 :: 		
0x038E	0xBF00    NOP
;__Lib_I2C_12.c, 351 :: 		
0x0390	0xF2010418  ADDW	R4, R1, #24
0x0394	0x6824    LDR	R4, [R4, #0]
0x0396	0x0424    LSLS	R4, R4, #16
0x0398	0xEA400404  ORR	R4, R0, R4, LSL #0
0x039C	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 352 :: 		
0x039E	0x2B01    CMP	R3, #1
0x03A0	0xD105    BNE	L_I2Cx_Read50
;__Lib_I2C_12.c, 353 :: 		
0x03A2	0x2501    MOVS	R5, #1
0x03A4	0x680C    LDR	R4, [R1, #0]
0x03A6	0xF3652449  BFI	R4, R5, #9, #1
0x03AA	0x600C    STR	R4, [R1, #0]
0x03AC	0xE004    B	L_I2Cx_Read51
L_I2Cx_Read50:
;__Lib_I2C_12.c, 355 :: 		
0x03AE	0x2501    MOVS	R5, #1
0x03B0	0x680C    LDR	R4, [R1, #0]
0x03B2	0xF3652408  BFI	R4, R5, #8, #1
0x03B6	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 356 :: 		
L_I2Cx_Read51:
;__Lib_I2C_12.c, 358 :: 		
0x03B8	0x4C9F    LDR	R4, [PC, #636]
; timeout start address is: 20 (R5)
0x03BA	0x6825    LDR	R5, [R4, #0]
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 20 (R5)
0x03BC	0x4691    MOV	R9, R2
0x03BE	0x4698    MOV	R8, R3
0x03C0	0x4637    MOV	R7, R6
0x03C2	0x460E    MOV	R6, R1
;__Lib_I2C_12.c, 359 :: 		
L_I2Cx_Read52:
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 28 (R7)
; END_mode start address is: 32 (R8)
; i start address is: 36 (R9)
0x03C4	0x499D    LDR	R1, [PC, #628]
0x03C6	0x4630    MOV	R0, R6
0x03C8	0xF000F9C2  BL	_ChekXForEvent+0
0x03CC	0xB968    CBNZ	R0, L_I2Cx_Read53
;__Lib_I2C_12.c, 360 :: 		
0x03CE	0x4C9A    LDR	R4, [PC, #616]
0x03D0	0x6824    LDR	R4, [R4, #0]
0x03D2	0xB14C    CBZ	R4, L__I2Cx_Read132
;__Lib_I2C_12.c, 361 :: 		
0x03D4	0xB925    CBNZ	R5, L_I2Cx_Read55
; I2C_BASE end address is: 24 (R6)
; buf end address is: 28 (R7)
; END_mode end address is: 32 (R8)
; i end address is: 36 (R9)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 362 :: 		
0x03D6	0x2003    MOVS	R0, #3
0x03D8	0x4C93    LDR	R4, [PC, #588]
0x03DA	0x6824    LDR	R4, [R4, #0]
0x03DC	0x47A0    BLX	R4
;__Lib_I2C_12.c, 363 :: 		
0x03DE	0xE1AD    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 364 :: 		
L_I2Cx_Read55:
;__Lib_I2C_12.c, 365 :: 		
; timeout start address is: 20 (R5)
; i start address is: 36 (R9)
; END_mode start address is: 32 (R8)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
0x03E0	0x1E6C    SUBS	R4, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x03E2	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x03E4	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 366 :: 		
0x03E6	0xE7FF    B	L_I2Cx_Read54
L__I2Cx_Read132:
;__Lib_I2C_12.c, 360 :: 		
;__Lib_I2C_12.c, 366 :: 		
L_I2Cx_Read54:
;__Lib_I2C_12.c, 367 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x03E8	0xE7EC    B	L_I2Cx_Read52
L_I2Cx_Read53:
;__Lib_I2C_12.c, 368 :: 		
0x03EA	0xEB070509  ADD	R5, R7, R9, LSL #0
; buf end address is: 28 (R7)
; i end address is: 36 (R9)
0x03EE	0xF2060410  ADDW	R4, R6, #16
0x03F2	0x6824    LDR	R4, [R4, #0]
0x03F4	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 369 :: 		
0x03F6	0xF1B80F01  CMP	R8, #1
0x03FA	0xD113    BNE	L_I2Cx_Read56
; END_mode end address is: 32 (R8)
;__Lib_I2C_12.c, 370 :: 		
0x03FC	0x4C8E    LDR	R4, [PC, #568]
; timeout start address is: 4 (R1)
0x03FE	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x0400	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 371 :: 		
L_I2Cx_Read57:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0402	0x6805    LDR	R5, [R0, #0]
0x0404	0xF3C52440  UBFX	R4, R5, #9, #1
0x0408	0xB95C    CBNZ	R4, L_I2Cx_Read58
;__Lib_I2C_12.c, 372 :: 		
0x040A	0x4C8B    LDR	R4, [PC, #556]
0x040C	0x6824    LDR	R4, [R4, #0]
0x040E	0xB13C    CBZ	R4, L__I2Cx_Read133
;__Lib_I2C_12.c, 373 :: 		
0x0410	0xB921    CBNZ	R1, L_I2Cx_Read60
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 374 :: 		
0x0412	0x2003    MOVS	R0, #3
0x0414	0x4C84    LDR	R4, [PC, #528]
0x0416	0x6824    LDR	R4, [R4, #0]
0x0418	0x47A0    BLX	R4
;__Lib_I2C_12.c, 375 :: 		
0x041A	0xE18F    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 376 :: 		
L_I2Cx_Read60:
;__Lib_I2C_12.c, 377 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x041C	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 378 :: 		
0x041E	0xE7FF    B	L_I2Cx_Read59
L__I2Cx_Read133:
;__Lib_I2C_12.c, 372 :: 		
;__Lib_I2C_12.c, 378 :: 		
L_I2Cx_Read59:
;__Lib_I2C_12.c, 379 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x0420	0xE7EF    B	L_I2Cx_Read57
L_I2Cx_Read58:
;__Lib_I2C_12.c, 380 :: 		
0x0422	0xE012    B	L_I2Cx_Read61
L_I2Cx_Read56:
;__Lib_I2C_12.c, 382 :: 		
; I2C_BASE start address is: 24 (R6)
0x0424	0x4C84    LDR	R4, [PC, #528]
; timeout start address is: 4 (R1)
0x0426	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x0428	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 383 :: 		
L_I2Cx_Read62:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x042A	0x6805    LDR	R5, [R0, #0]
0x042C	0xF3C52400  UBFX	R4, R5, #8, #1
0x0430	0xB95C    CBNZ	R4, L_I2Cx_Read63
;__Lib_I2C_12.c, 384 :: 		
0x0432	0x4C81    LDR	R4, [PC, #516]
0x0434	0x6824    LDR	R4, [R4, #0]
0x0436	0xB13C    CBZ	R4, L__I2Cx_Read134
;__Lib_I2C_12.c, 385 :: 		
0x0438	0xB921    CBNZ	R1, L_I2Cx_Read65
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 386 :: 		
0x043A	0x2003    MOVS	R0, #3
0x043C	0x4C7A    LDR	R4, [PC, #488]
0x043E	0x6824    LDR	R4, [R4, #0]
0x0440	0x47A0    BLX	R4
;__Lib_I2C_12.c, 387 :: 		
0x0442	0xE17B    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 388 :: 		
L_I2Cx_Read65:
;__Lib_I2C_12.c, 389 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0444	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 390 :: 		
0x0446	0xE7FF    B	L_I2Cx_Read64
L__I2Cx_Read134:
;__Lib_I2C_12.c, 384 :: 		
;__Lib_I2C_12.c, 390 :: 		
L_I2Cx_Read64:
;__Lib_I2C_12.c, 391 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x0448	0xE7EF    B	L_I2Cx_Read62
L_I2Cx_Read63:
;__Lib_I2C_12.c, 392 :: 		
L_I2Cx_Read61:
;__Lib_I2C_12.c, 393 :: 		
0x044A	0xE177    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 395 :: 		
L_I2Cx_Read66:
;__Lib_I2C_12.c, 396 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; slave_address start address is: 28 (R7)
0x044C	0x2501    MOVS	R5, #1
0x044E	0x680C    LDR	R4, [R1, #0]
0x0450	0xF365248A  BFI	R4, R5, #10, #1
0x0454	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 397 :: 		
0x0456	0x2501    MOVS	R5, #1
0x0458	0x680C    LDR	R4, [R1, #0]
0x045A	0xF36524CB  BFI	R4, R5, #11, #1
0x045E	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 398 :: 		
0x0460	0xF2010510  ADDW	R5, R1, #16
0x0464	0x007C    LSLS	R4, R7, #1
0x0466	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0468	0xF0440401  ORR	R4, R4, #1
0x046C	0xB2A4    UXTH	R4, R4
0x046E	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0470	0x464F    MOV	R7, R9
;__Lib_I2C_12.c, 399 :: 		
L_I2Cx_Read67:
; timeout start address is: 28 (R7)
; i start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0472	0xF2010414  ADDW	R4, R1, #20
0x0476	0x6825    LDR	R5, [R4, #0]
0x0478	0xF3C50440  UBFX	R4, R5, #1, #1
0x047C	0xB964    CBNZ	R4, L_I2Cx_Read68
;__Lib_I2C_12.c, 400 :: 		
0x047E	0x4C6E    LDR	R4, [PC, #440]
0x0480	0x6824    LDR	R4, [R4, #0]
0x0482	0xB144    CBZ	R4, L__I2Cx_Read135
;__Lib_I2C_12.c, 401 :: 		
0x0484	0xB927    CBNZ	R7, L_I2Cx_Read70
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 402 :: 		
0x0486	0x2003    MOVS	R0, #3
0x0488	0x4C67    LDR	R4, [PC, #412]
0x048A	0x6824    LDR	R4, [R4, #0]
0x048C	0x47A0    BLX	R4
;__Lib_I2C_12.c, 403 :: 		
0x048E	0xE155    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 404 :: 		
L_I2Cx_Read70:
;__Lib_I2C_12.c, 405 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x0490	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0492	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 406 :: 		
0x0494	0xE7FF    B	L_I2Cx_Read69
L__I2Cx_Read135:
;__Lib_I2C_12.c, 400 :: 		
;__Lib_I2C_12.c, 406 :: 		
L_I2Cx_Read69:
;__Lib_I2C_12.c, 407 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0496	0xE7EC    B	L_I2Cx_Read67
L_I2Cx_Read68:
;__Lib_I2C_12.c, 408 :: 		
0x0498	0xF2010414  ADDW	R4, R1, #20
0x049C	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 409 :: 		
0x049E	0xBF00    NOP
;__Lib_I2C_12.c, 410 :: 		
0x04A0	0xF2010418  ADDW	R4, R1, #24
0x04A4	0x6824    LDR	R4, [R4, #0]
0x04A6	0x0424    LSLS	R4, R4, #16
0x04A8	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 411 :: 		
0x04AA	0x2500    MOVS	R5, #0
0x04AC	0x680C    LDR	R4, [R1, #0]
0x04AE	0xF365248A  BFI	R4, R5, #10, #1
0x04B2	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 413 :: 		
0x04B4	0x4C60    LDR	R4, [PC, #384]
; timeout start address is: 28 (R7)
0x04B6	0x6827    LDR	R7, [R4, #0]
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 414 :: 		
L_I2Cx_Read71:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x04B8	0xF2010414  ADDW	R4, R1, #20
0x04BC	0x6825    LDR	R5, [R4, #0]
0x04BE	0xF3C50480  UBFX	R4, R5, #2, #1
0x04C2	0xB964    CBNZ	R4, L_I2Cx_Read72
;__Lib_I2C_12.c, 415 :: 		
0x04C4	0x4C5C    LDR	R4, [PC, #368]
0x04C6	0x6824    LDR	R4, [R4, #0]
0x04C8	0xB144    CBZ	R4, L__I2Cx_Read136
;__Lib_I2C_12.c, 416 :: 		
0x04CA	0xB927    CBNZ	R7, L_I2Cx_Read74
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 417 :: 		
0x04CC	0x2003    MOVS	R0, #3
0x04CE	0x4C56    LDR	R4, [PC, #344]
0x04D0	0x6824    LDR	R4, [R4, #0]
0x04D2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 418 :: 		
0x04D4	0xE132    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 419 :: 		
L_I2Cx_Read74:
;__Lib_I2C_12.c, 420 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x04D6	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x04D8	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 421 :: 		
0x04DA	0xE7FF    B	L_I2Cx_Read73
L__I2Cx_Read136:
;__Lib_I2C_12.c, 415 :: 		
;__Lib_I2C_12.c, 421 :: 		
L_I2Cx_Read73:
;__Lib_I2C_12.c, 422 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x04DC	0xE7EC    B	L_I2Cx_Read71
L_I2Cx_Read72:
;__Lib_I2C_12.c, 423 :: 		
0x04DE	0x2B01    CMP	R3, #1
0x04E0	0xD105    BNE	L_I2Cx_Read75
;__Lib_I2C_12.c, 424 :: 		
0x04E2	0x2501    MOVS	R5, #1
0x04E4	0x680C    LDR	R4, [R1, #0]
0x04E6	0xF3652449  BFI	R4, R5, #9, #1
0x04EA	0x600C    STR	R4, [R1, #0]
0x04EC	0xE004    B	L_I2Cx_Read76
L_I2Cx_Read75:
;__Lib_I2C_12.c, 426 :: 		
0x04EE	0x2501    MOVS	R5, #1
0x04F0	0x680C    LDR	R4, [R1, #0]
0x04F2	0xF3652408  BFI	R4, R5, #8, #1
0x04F6	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 427 :: 		
L_I2Cx_Read76:
;__Lib_I2C_12.c, 428 :: 		
0x04F8	0x1995    ADDS	R5, R2, R6
0x04FA	0xF2010410  ADDW	R4, R1, #16
0x04FE	0x6824    LDR	R4, [R4, #0]
0x0500	0x702C    STRB	R4, [R5, #0]
0x0502	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_12.c, 429 :: 		
0x0504	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x0506	0xF2010410  ADDW	R4, R1, #16
0x050A	0x6824    LDR	R4, [R4, #0]
0x050C	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 430 :: 		
0x050E	0x2B01    CMP	R3, #1
0x0510	0xD114    BNE	L_I2Cx_Read77
; END_mode end address is: 12 (R3)
;__Lib_I2C_12.c, 431 :: 		
0x0512	0x4C49    LDR	R4, [PC, #292]
; timeout start address is: 8 (R2)
0x0514	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 432 :: 		
L_I2Cx_Read78:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0516	0x680D    LDR	R5, [R1, #0]
0x0518	0xF3C52440  UBFX	R4, R5, #9, #1
0x051C	0xB964    CBNZ	R4, L_I2Cx_Read79
;__Lib_I2C_12.c, 433 :: 		
0x051E	0x4C46    LDR	R4, [PC, #280]
0x0520	0x6824    LDR	R4, [R4, #0]
0x0522	0xB144    CBZ	R4, L__I2Cx_Read137
;__Lib_I2C_12.c, 434 :: 		
0x0524	0xB922    CBNZ	R2, L_I2Cx_Read81
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 435 :: 		
0x0526	0x2003    MOVS	R0, #3
0x0528	0x4C3F    LDR	R4, [PC, #252]
0x052A	0x6824    LDR	R4, [R4, #0]
0x052C	0x47A0    BLX	R4
;__Lib_I2C_12.c, 436 :: 		
0x052E	0xE105    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 437 :: 		
L_I2Cx_Read81:
;__Lib_I2C_12.c, 438 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x0530	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0532	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 439 :: 		
0x0534	0xE7FF    B	L_I2Cx_Read80
L__I2Cx_Read137:
;__Lib_I2C_12.c, 433 :: 		
;__Lib_I2C_12.c, 439 :: 		
L_I2Cx_Read80:
;__Lib_I2C_12.c, 440 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0536	0xE7EE    B	L_I2Cx_Read78
L_I2Cx_Read79:
;__Lib_I2C_12.c, 441 :: 		
0x0538	0x4608    MOV	R0, R1
0x053A	0xE013    B	L_I2Cx_Read82
L_I2Cx_Read77:
;__Lib_I2C_12.c, 443 :: 		
0x053C	0x4C3E    LDR	R4, [PC, #248]
; timeout start address is: 8 (R2)
0x053E	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 444 :: 		
L_I2Cx_Read83:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0540	0x680D    LDR	R5, [R1, #0]
0x0542	0xF3C52400  UBFX	R4, R5, #8, #1
0x0546	0xB964    CBNZ	R4, L_I2Cx_Read84
;__Lib_I2C_12.c, 445 :: 		
0x0548	0x4C3B    LDR	R4, [PC, #236]
0x054A	0x6824    LDR	R4, [R4, #0]
0x054C	0xB144    CBZ	R4, L__I2Cx_Read138
;__Lib_I2C_12.c, 446 :: 		
0x054E	0xB922    CBNZ	R2, L_I2Cx_Read86
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 447 :: 		
0x0550	0x2003    MOVS	R0, #3
0x0552	0x4C35    LDR	R4, [PC, #212]
0x0554	0x6824    LDR	R4, [R4, #0]
0x0556	0x47A0    BLX	R4
;__Lib_I2C_12.c, 448 :: 		
0x0558	0xE0F0    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 449 :: 		
L_I2Cx_Read86:
;__Lib_I2C_12.c, 450 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x055A	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x055C	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 451 :: 		
0x055E	0xE7FF    B	L_I2Cx_Read85
L__I2Cx_Read138:
;__Lib_I2C_12.c, 445 :: 		
;__Lib_I2C_12.c, 451 :: 		
L_I2Cx_Read85:
;__Lib_I2C_12.c, 452 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0560	0xE7EE    B	L_I2Cx_Read83
L_I2Cx_Read84:
;__Lib_I2C_12.c, 453 :: 		
0x0562	0x4608    MOV	R0, R1
L_I2Cx_Read82:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 455 :: 		
; I2C_BASE start address is: 0 (R0)
0x0564	0x2500    MOVS	R5, #0
0x0566	0x6804    LDR	R4, [R0, #0]
0x0568	0xF36524CB  BFI	R4, R5, #11, #1
0x056C	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 457 :: 		
0x056E	0xE0E5    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 459 :: 		
L_I2Cx_Read87:
;__Lib_I2C_12.c, 460 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x0570	0x2501    MOVS	R5, #1
0x0572	0x680C    LDR	R4, [R1, #0]
0x0574	0xF365248A  BFI	R4, R5, #10, #1
0x0578	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 461 :: 		
0x057A	0xF2010510  ADDW	R5, R1, #16
0x057E	0x007C    LSLS	R4, R7, #1
0x0580	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0582	0xF0440401  ORR	R4, R4, #1
0x0586	0xB2A4    UXTH	R4, R4
0x0588	0x602C    STR	R4, [R5, #0]
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x058A	0x4646    MOV	R6, R8
0x058C	0x46C8    MOV	R8, R9
0x058E	0x4689    MOV	R9, R1
0x0590	0x4617    MOV	R7, R2
0x0592	0x461D    MOV	R5, R3
;__Lib_I2C_12.c, 462 :: 		
L_I2Cx_Read88:
; timeout start address is: 32 (R8)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 36 (R9)
0x0594	0x492A    LDR	R1, [PC, #168]
0x0596	0x4648    MOV	R0, R9
0x0598	0xF000F8DA  BL	_ChekXForEvent+0
0x059C	0xB978    CBNZ	R0, L_I2Cx_Read89
;__Lib_I2C_12.c, 463 :: 		
0x059E	0x4C26    LDR	R4, [PC, #152]
0x05A0	0x6824    LDR	R4, [R4, #0]
0x05A2	0xB15C    CBZ	R4, L__I2Cx_Read139
;__Lib_I2C_12.c, 464 :: 		
0x05A4	0xF1B80F00  CMP	R8, #0
0x05A8	0xD104    BNE	L_I2Cx_Read91
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; timeout end address is: 32 (R8)
; buf end address is: 28 (R7)
;__Lib_I2C_12.c, 465 :: 		
0x05AA	0x2003    MOVS	R0, #3
0x05AC	0x4C1E    LDR	R4, [PC, #120]
0x05AE	0x6824    LDR	R4, [R4, #0]
0x05B0	0x47A0    BLX	R4
;__Lib_I2C_12.c, 466 :: 		
0x05B2	0xE0C3    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 467 :: 		
L_I2Cx_Read91:
;__Lib_I2C_12.c, 468 :: 		
; buf start address is: 28 (R7)
; timeout start address is: 32 (R8)
; I2C_BASE start address is: 36 (R9)
; count start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x05B4	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x05B8	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 469 :: 		
0x05BA	0xE7FF    B	L_I2Cx_Read90
L__I2Cx_Read139:
;__Lib_I2C_12.c, 463 :: 		
;__Lib_I2C_12.c, 469 :: 		
L_I2Cx_Read90:
;__Lib_I2C_12.c, 470 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x05BC	0xE7EA    B	L_I2Cx_Read88
L_I2Cx_Read89:
;__Lib_I2C_12.c, 471 :: 		
; i start address is: 4 (R1)
0x05BE	0x2100    MOVS	R1, #0
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; i end address is: 4 (R1)
; buf end address is: 28 (R7)
0x05C0	0x46A8    MOV	R8, R5
0x05C2	0x464A    MOV	R2, R9
0x05C4	0x46B1    MOV	R9, R6
0x05C6	0x463B    MOV	R3, R7
;__Lib_I2C_12.c, 472 :: 		
L_I2Cx_Read92:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x05C8	0xF1A90403  SUB	R4, R9, #3
0x05CC	0x42A1    CMP	R1, R4
0x05CE	0xD222    BCS	L_I2Cx_Read93
;__Lib_I2C_12.c, 473 :: 		
0x05D0	0x4C19    LDR	R4, [PC, #100]
; timeout start address is: 20 (R5)
0x05D2	0x6825    LDR	R5, [R4, #0]
; buf end address is: 12 (R3)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
0x05D4	0x468A    MOV	R10, R1
0x05D6	0x4617    MOV	R7, R2
0x05D8	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 474 :: 		
L_I2Cx_Read94:
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x05DA	0x4918    LDR	R1, [PC, #96]
0x05DC	0x4638    MOV	R0, R7
0x05DE	0xF000F8B7  BL	_ChekXForEvent+0
0x05E2	0xB960    CBNZ	R0, L_I2Cx_Read95
;__Lib_I2C_12.c, 475 :: 		
0x05E4	0x4C14    LDR	R4, [PC, #80]
0x05E6	0x6824    LDR	R4, [R4, #0]
0x05E8	0xB144    CBZ	R4, L__I2Cx_Read140
;__Lib_I2C_12.c, 476 :: 		
0x05EA	0xB925    CBNZ	R5, L_I2Cx_Read97
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; i end address is: 40 (R10)
; buf end address is: 24 (R6)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 477 :: 		
0x05EC	0x2003    MOVS	R0, #3
0x05EE	0x4C0E    LDR	R4, [PC, #56]
0x05F0	0x6824    LDR	R4, [R4, #0]
0x05F2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 478 :: 		
0x05F4	0xE0A2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 479 :: 		
L_I2Cx_Read97:
;__Lib_I2C_12.c, 480 :: 		
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; buf start address is: 24 (R6)
; i start address is: 40 (R10)
; I2C_BASE start address is: 28 (R7)
; count start address is: 36 (R9)
0x05F6	0x1E68    SUBS	R0, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x05F8	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 481 :: 		
0x05FA	0xE7FF    B	L_I2Cx_Read96
L__I2Cx_Read140:
;__Lib_I2C_12.c, 475 :: 		
;__Lib_I2C_12.c, 481 :: 		
L_I2Cx_Read96:
;__Lib_I2C_12.c, 482 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x05FC	0xE7ED    B	L_I2Cx_Read94
L_I2Cx_Read95:
;__Lib_I2C_12.c, 483 :: 		
0x05FE	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x0602	0xF2070410  ADDW	R4, R7, #16
0x0606	0x6824    LDR	R4, [R4, #0]
0x0608	0x702C    STRB	R4, [R5, #0]
0x060A	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x060E	0x4621    MOV	R1, R4
;__Lib_I2C_12.c, 484 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x0610	0x4633    MOV	R3, R6
0x0612	0x463A    MOV	R2, R7
0x0614	0xE7D8    B	L_I2Cx_Read92
L_I2Cx_Read93:
;__Lib_I2C_12.c, 485 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x0616	0x4C08    LDR	R4, [PC, #32]
0x0618	0xF000B814  B	#40
0x061C	0x54004000  	I2C1_CR1+0
0x0620	0x01DC2000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0624	0x02542000  	_I2C1_Timeout_Ptr+0
0x0628	0x02502000  	_I2Cx_Timeout_Ptr+0
0x062C	0x58004000  	I2C2_CR1+0
0x0630	0x01E02000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0634	0x02582000  	_I2C2_Timeout_Ptr+0
0x0638	0x01E42000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x063C	0x00400003  	#196672
0x0640	0x00020003  	#196610
; timeout start address is: 28 (R7)
0x0644	0x6827    LDR	R7, [R4, #0]
; buf end address is: 12 (R3)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; timeout end address is: 28 (R7)
; END_mode end address is: 32 (R8)
0x0646	0x9301    STR	R3, [SP, #4]
0x0648	0x460B    MOV	R3, R1
0x064A	0x4616    MOV	R6, R2
0x064C	0x4642    MOV	R2, R8
0x064E	0x9901    LDR	R1, [SP, #4]
;__Lib_I2C_12.c, 486 :: 		
L_I2Cx_Read98:
; timeout start address is: 28 (R7)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x0650	0xF2060414  ADDW	R4, R6, #20
0x0654	0x6825    LDR	R5, [R4, #0]
0x0656	0xF3C50480  UBFX	R4, R5, #2, #1
0x065A	0xB964    CBNZ	R4, L_I2Cx_Read99
;__Lib_I2C_12.c, 487 :: 		
0x065C	0x4C39    LDR	R4, [PC, #228]
0x065E	0x6824    LDR	R4, [R4, #0]
0x0660	0xB144    CBZ	R4, L__I2Cx_Read141
;__Lib_I2C_12.c, 488 :: 		
0x0662	0xB927    CBNZ	R7, L_I2Cx_Read101
; END_mode end address is: 8 (R2)
; i end address is: 12 (R3)
; buf end address is: 4 (R1)
; timeout end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 489 :: 		
0x0664	0x2003    MOVS	R0, #3
0x0666	0x4C38    LDR	R4, [PC, #224]
0x0668	0x6824    LDR	R4, [R4, #0]
0x066A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 490 :: 		
0x066C	0xE066    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 491 :: 		
L_I2Cx_Read101:
;__Lib_I2C_12.c, 492 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 28 (R7)
; buf start address is: 4 (R1)
; i start address is: 12 (R3)
; END_mode start address is: 8 (R2)
0x066E	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0670	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 493 :: 		
0x0672	0xE7FF    B	L_I2Cx_Read100
L__I2Cx_Read141:
;__Lib_I2C_12.c, 487 :: 		
;__Lib_I2C_12.c, 493 :: 		
L_I2Cx_Read100:
;__Lib_I2C_12.c, 494 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0674	0xE7EC    B	L_I2Cx_Read98
L_I2Cx_Read99:
;__Lib_I2C_12.c, 495 :: 		
0x0676	0x2500    MOVS	R5, #0
0x0678	0x6834    LDR	R4, [R6, #0]
0x067A	0xF365248A  BFI	R4, R5, #10, #1
0x067E	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 496 :: 		
0x0680	0x18CD    ADDS	R5, R1, R3
0x0682	0xF2060410  ADDW	R4, R6, #16
0x0686	0x6824    LDR	R4, [R4, #0]
0x0688	0x702C    STRB	R4, [R5, #0]
0x068A	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
;__Lib_I2C_12.c, 498 :: 		
0x068C	0x4C2D    LDR	R4, [PC, #180]
; timeout start address is: 12 (R3)
0x068E	0x6823    LDR	R3, [R4, #0]
; END_mode end address is: 8 (R2)
; timeout end address is: 12 (R3)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x0690	0x4617    MOV	R7, R2
0x0692	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 499 :: 		
L_I2Cx_Read102:
; timeout start address is: 12 (R3)
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 28 (R7)
0x0694	0xF2060414  ADDW	R4, R6, #20
0x0698	0x6825    LDR	R5, [R4, #0]
0x069A	0xF3C50480  UBFX	R4, R5, #2, #1
0x069E	0xB964    CBNZ	R4, L_I2Cx_Read103
;__Lib_I2C_12.c, 500 :: 		
0x06A0	0x4C28    LDR	R4, [PC, #160]
0x06A2	0x6824    LDR	R4, [R4, #0]
0x06A4	0xB144    CBZ	R4, L__I2Cx_Read142
;__Lib_I2C_12.c, 501 :: 		
0x06A6	0xB923    CBNZ	R3, L_I2Cx_Read105
; END_mode end address is: 28 (R7)
; timeout end address is: 12 (R3)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 502 :: 		
0x06A8	0x2003    MOVS	R0, #3
0x06AA	0x4C27    LDR	R4, [PC, #156]
0x06AC	0x6824    LDR	R4, [R4, #0]
0x06AE	0x47A0    BLX	R4
;__Lib_I2C_12.c, 503 :: 		
0x06B0	0xE044    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 504 :: 		
L_I2Cx_Read105:
;__Lib_I2C_12.c, 505 :: 		
; I2C_BASE start address is: 24 (R6)
; i start address is: 8 (R2)
; buf start address is: 4 (R1)
; timeout start address is: 12 (R3)
; END_mode start address is: 28 (R7)
0x06B2	0x1E58    SUBS	R0, R3, #1
; timeout end address is: 12 (R3)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x06B4	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 506 :: 		
0x06B6	0xE7FF    B	L_I2Cx_Read104
L__I2Cx_Read142:
;__Lib_I2C_12.c, 500 :: 		
;__Lib_I2C_12.c, 506 :: 		
L_I2Cx_Read104:
;__Lib_I2C_12.c, 507 :: 		
; timeout start address is: 12 (R3)
; timeout end address is: 12 (R3)
0x06B8	0xE7EC    B	L_I2Cx_Read102
L_I2Cx_Read103:
;__Lib_I2C_12.c, 508 :: 		
0x06BA	0x2F01    CMP	R7, #1
0x06BC	0xD107    BNE	L_I2Cx_Read106
; END_mode end address is: 28 (R7)
;__Lib_I2C_12.c, 509 :: 		
0x06BE	0x2501    MOVS	R5, #1
0x06C0	0x6834    LDR	R4, [R6, #0]
0x06C2	0xF3652449  BFI	R4, R5, #9, #1
0x06C6	0x6034    STR	R4, [R6, #0]
0x06C8	0x4610    MOV	R0, R2
0x06CA	0x4632    MOV	R2, R6
0x06CC	0xE021    B	L_I2Cx_Read107
L_I2Cx_Read106:
;__Lib_I2C_12.c, 511 :: 		
0x06CE	0x2501    MOVS	R5, #1
0x06D0	0x6834    LDR	R4, [R6, #0]
0x06D2	0xF3652408  BFI	R4, R5, #8, #1
0x06D6	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 513 :: 		
0x06D8	0x4C1A    LDR	R4, [PC, #104]
; timeout start address is: 32 (R8)
0x06DA	0xF8D48000  LDR	R8, [R4, #0]
; timeout end address is: 32 (R8)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x06DE	0x4617    MOV	R7, R2
0x06E0	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 514 :: 		
L_I2Cx_Read108:
; timeout start address is: 32 (R8)
; buf start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; i start address is: 28 (R7)
0x06E2	0x491A    LDR	R1, [PC, #104]
0x06E4	0x4630    MOV	R0, R6
0x06E6	0xF000F833  BL	_ChekXForEvent+0
0x06EA	0xB978    CBNZ	R0, L_I2Cx_Read109
;__Lib_I2C_12.c, 515 :: 		
0x06EC	0x4C15    LDR	R4, [PC, #84]
0x06EE	0x6824    LDR	R4, [R4, #0]
0x06F0	0xB15C    CBZ	R4, L__I2Cx_Read143
;__Lib_I2C_12.c, 516 :: 		
0x06F2	0xF1B80F00  CMP	R8, #0
0x06F6	0xD104    BNE	L_I2Cx_Read111
; buf end address is: 20 (R5)
; i end address is: 28 (R7)
; timeout end address is: 32 (R8)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 517 :: 		
0x06F8	0x2003    MOVS	R0, #3
0x06FA	0x4C13    LDR	R4, [PC, #76]
0x06FC	0x6824    LDR	R4, [R4, #0]
0x06FE	0x47A0    BLX	R4
;__Lib_I2C_12.c, 518 :: 		
0x0700	0xE01C    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 519 :: 		
L_I2Cx_Read111:
;__Lib_I2C_12.c, 520 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 32 (R8)
; i start address is: 28 (R7)
; buf start address is: 20 (R5)
0x0702	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0706	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 521 :: 		
0x0708	0xE7FF    B	L_I2Cx_Read110
L__I2Cx_Read143:
;__Lib_I2C_12.c, 515 :: 		
;__Lib_I2C_12.c, 521 :: 		
L_I2Cx_Read110:
;__Lib_I2C_12.c, 522 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x070A	0xE7EA    B	L_I2Cx_Read108
L_I2Cx_Read109:
;__Lib_I2C_12.c, 523 :: 		
0x070C	0x4629    MOV	R1, R5
; i end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
0x070E	0x4632    MOV	R2, R6
0x0710	0x4638    MOV	R0, R7
L_I2Cx_Read107:
; buf end address is: 20 (R5)
;__Lib_I2C_12.c, 524 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x0712	0x180D    ADDS	R5, R1, R0
0x0714	0xF2020410  ADDW	R4, R2, #16
0x0718	0x6824    LDR	R4, [R4, #0]
0x071A	0x702C    STRB	R4, [R5, #0]
0x071C	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_12.c, 525 :: 		
0x071E	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x0720	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x0724	0x6824    LDR	R4, [R4, #0]
0x0726	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 526 :: 		
0x0728	0xE008    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 528 :: 		
L_I2Cx_Read43:
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x072A	0xF1B80F01  CMP	R8, #1
0x072E	0xF43FAE07  BEQ	L_I2Cx_Read45
0x0732	0xF1B80F02  CMP	R8, #2
0x0736	0xF43FAE89  BEQ	L_I2Cx_Read66
; i end address is: 24 (R6)
0x073A	0xE719    B	L_I2Cx_Read87
; slave_address end address is: 28 (R7)
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read44:
;__Lib_I2C_12.c, 529 :: 		
L_end_I2Cx_Read:
0x073C	0xF8DDE000  LDR	LR, [SP, #0]
0x0740	0xB002    ADD	SP, SP, #8
0x0742	0x4770    BX	LR
0x0744	0x01E42000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0748	0x02502000  	_I2Cx_Timeout_Ptr+0
0x074C	0x00010003  	#196609
; end of _I2Cx_Read
_I2C2_Read:
;__Lib_I2C_12.c, 582 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x12F8	0xB081    SUB	SP, SP, #4
0x12FA	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 583 :: 		
0x12FE	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1300	0x4613    MOV	R3, R2
0x1302	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1304	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x1306	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x1308	0xF7FEFFF4  BL	_I2Cx_Read+0
0x130C	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 584 :: 		
L_end_I2C2_Read:
0x130E	0xF8DDE000  LDR	LR, [SP, #0]
0x1312	0xB001    ADD	SP, SP, #4
0x1314	0x4770    BX	LR
0x1316	0xBF00    NOP
0x1318	0x58004000  	I2C2_CR1+0
; end of _I2C2_Read
_accel8_getGyroAxis:
;__accel8_driver.c, 355 :: 		void accel8_getGyroAxis(int16_t *x_axis, int16_t *y_axis, int16_t *z_axis)
0x2004	0xB084    SUB	SP, SP, #16
0x2006	0xF8CDE000  STR	LR, [SP, #0]
0x200A	0x9001    STR	R0, [SP, #4]
0x200C	0x9102    STR	R1, [SP, #8]
0x200E	0x9203    STR	R2, [SP, #12]
;__accel8_driver.c, 357 :: 		*x_axis = accel8_readData(_ACCEL8_GYRO_X_AXIS_DATA);
0x2010	0x2043    MOVS	R0, #67
0x2012	0xF7FFFC09  BL	_accel8_readData+0
0x2016	0x9B01    LDR	R3, [SP, #4]
0x2018	0x8018    STRH	R0, [R3, #0]
;__accel8_driver.c, 358 :: 		*y_axis = accel8_readData(_ACCEL8_GYRO_Y_AXIS_DATA);
0x201A	0x2045    MOVS	R0, #69
0x201C	0xF7FFFC04  BL	_accel8_readData+0
0x2020	0x9B02    LDR	R3, [SP, #8]
0x2022	0x8018    STRH	R0, [R3, #0]
;__accel8_driver.c, 359 :: 		*z_axis = accel8_readData(_ACCEL8_GYRO_Z_AXIS_DATA);
0x2024	0x2047    MOVS	R0, #71
0x2026	0xF7FFFBFF  BL	_accel8_readData+0
0x202A	0x9B03    LDR	R3, [SP, #12]
0x202C	0x8018    STRH	R0, [R3, #0]
;__accel8_driver.c, 360 :: 		}
L_end_accel8_getGyroAxis:
0x202E	0xF8DDE000  LDR	LR, [SP, #0]
0x2032	0xB004    ADD	SP, SP, #16
0x2034	0x4770    BX	LR
; end of _accel8_getGyroAxis
_accel8_getTemperature:
;__accel8_driver.c, 339 :: 		float accel8_getTemperature()
0x229C	0xB081    SUB	SP, SP, #4
0x229E	0xF8CDE000  STR	LR, [SP, #0]
;__accel8_driver.c, 344 :: 		Temp_out = accel8_readData(_ACCEL8_TEMP_DATA);
0x22A2	0x2041    MOVS	R0, #65
0x22A4	0xF7FFFAC0  BL	_accel8_readData+0
; Temp_out start address is: 0 (R0)
0x22A8	0xB200    SXTH	R0, R0
;__accel8_driver.c, 345 :: 		return (((float)Temp_out / 340.0f) + 36.53f);
0x22AA	0xF7FFFB21  BL	__SignedIntegralToFloat+0
; Temp_out end address is: 0 (R0)
0x22AE	0x4A05    LDR	R2, [PC, #20]
0x22B0	0xF7FFFB3E  BL	__Div_FP+0
0x22B4	0x4A04    LDR	R2, [PC, #16]
0x22B6	0xF7FFFA21  BL	__Add_FP+0
;__accel8_driver.c, 346 :: 		}
L_end_accel8_getTemperature:
0x22BA	0xF8DDE000  LDR	LR, [SP, #0]
0x22BE	0xB001    ADD	SP, SP, #4
0x22C0	0x4770    BX	LR
0x22C2	0xBF00    NOP
0x22C4	0x000043AA  	#1135214592
0x22C8	0x1EB84212  	#1108483768
; end of _accel8_getTemperature
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 186 :: 		
0x18F0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 188 :: 		
0x18F2	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 189 :: 		
0x18F4	0xBF08    IT	EQ
;__Lib_MathDouble.c, 191 :: 		
0x18F6	0xE019    BEQ	__me_lab_end
;__Lib_MathDouble.c, 193 :: 		
0x18F8	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 195 :: 		
0x18FA	0xBF54    ITE	PL
;__Lib_MathDouble.c, 196 :: 		
0x18FC	0x4601    MOVPL	R1, R0
;__Lib_MathDouble.c, 197 :: 		
0x18FE	0xF1D00100  RSBSMI	R1, R0, #0
;__Lib_MathDouble.c, 199 :: 		
0x1902	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 201 :: 		
0x1906	0xD402    BMI	__me_lab1
;__Lib_MathDouble.c, 202 :: 		
__me_loop:
0x1908	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 203 :: 		
0x190A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 204 :: 		
0x190C	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 206 :: 		
__me_lab1:
0x190E	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 207 :: 		
0x1910	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 208 :: 		
0x1912	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 209 :: 		
0x1914	0x0049    LSLCC	R1, R1, #1
;__Lib_MathDouble.c, 211 :: 		
0x1916	0xEA4F2151  LSR	R1, R1, #9
;__Lib_MathDouble.c, 212 :: 		
0x191A	0xEA4151C2  ORR	R1, R1, R2, LSL #23
;__Lib_MathDouble.c, 213 :: 		
0x191E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 214 :: 		
0x1920	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 215 :: 		
0x1922	0xF0414000  ORRMI	R0, R1, #-2147483648
;__Lib_MathDouble.c, 216 :: 		
0x1926	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 218 :: 		
0x1928	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 219 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 221 :: 		
L_end__SignedIntegralToFloat:
0x192C	0xB001    ADD	SP, SP, #4
0x192E	0x4770    BX	LR
; end of __SignedIntegralToFloat
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x1930	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x1932	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x1934	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x1938	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x193A	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x193E	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x1942	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x1944	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x1946	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x1948	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x194A	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x194E	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x1952	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x1954	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x1956	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x1958	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x195C	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x1960	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x1964	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x1966	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x196A	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x196E	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x1970	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x1972	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x1974	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x1976	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x1978	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x197A	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x197C	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x197E	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x1980	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x1982	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x1986	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x1988	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x198A	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x198C	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x198E	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x1990	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x1992	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x1994	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x1996	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x1998	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x199C	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x199E	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x19A0	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x19A4	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x19A6	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x19A8	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x19AA	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x19AC	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x19AE	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x19B0	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x19B4	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x19B6	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x19B8	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x19BA	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x19BC	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x19C0	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x19C2	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x19C4	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x19C6	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x19C8	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x19CC	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x19D0	0xB001    ADD	SP, SP, #4
0x19D2	0x4770    BX	LR
; end of __Div_FP
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x16FC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x16FE	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x1702	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x1706	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x170A	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x170C	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x170E	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x1710	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x1712	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x1716	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x1718	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x171C	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x171E	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x1720	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x1724	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x1726	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x1728	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x172A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x172E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x1732	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x1734	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x1736	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x1738	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x173A	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x173E	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x1740	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x1742	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x1746	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x1748	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x174A	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x174E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x1750	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x1752	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x1754	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x1756	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x1758	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x175A	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x175C	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x175E	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x1760	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x1762	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x1764	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x1766	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x1768	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x176C	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x176E	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x1772	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x1774	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x1778	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x177C	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x177E	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x1780	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x1784	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x1786	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x1788	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x178A	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x178E	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x1792	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x1796	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x1798	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x179A	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x179E	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x17A0	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x17A4	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x17A8	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x17AA	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x17AC	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x17AE	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x17B2	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x17B6	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x17B8	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x17BC	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x17BE	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x17C0	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x17C4	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x17C6	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x17C8	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x17CA	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x17CE	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x17D2	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x17D6	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x17DA	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x17DE	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x17E0	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x17E2	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x17E6	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x17EA	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x17EC	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x17F0	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x17F2	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x17F6	0xB001    ADD	SP, SP, #4
0x17F8	0x4770    BX	LR
; end of __Add_FP
_IntToStr:
;__Lib_Conversions.c, 211 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x222C	0xB081    SUB	SP, SP, #4
0x222E	0xF8CDE000  STR	LR, [SP, #0]
0x2232	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 217 :: 		
; negative start address is: 4 (R1)
0x2234	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 218 :: 		
; inword start address is: 12 (R3)
0x2236	0xB283    UXTH	R3, R0
;__Lib_Conversions.c, 219 :: 		
0x2238	0x2800    CMP	R0, #0
0x223A	0xDA05    BGE	L__IntToStr165
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 220 :: 		
0x223C	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 221 :: 		
0x223E	0x4240    RSBS	R0, R0, #0
0x2240	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x2242	0xB280    UXTH	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x2244	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
0x2246	0xE001    B	L_IntToStr37
L__IntToStr165:
;__Lib_Conversions.c, 219 :: 		
0x2248	0xB298    UXTH	R0, R3
0x224A	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
L_IntToStr37:
;__Lib_Conversions.c, 223 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x224C	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x224E	0xF7FFFBF1  BL	_WordToStr+0
;__Lib_Conversions.c, 225 :: 		
; i start address is: 4 (R1)
0x2252	0x2106    MOVS	R1, #6
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x2254	0x4634    MOV	R4, R6
0x2256	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 226 :: 		
L_IntToStr38:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x2258	0x2900    CMP	R1, #0
0x225A	0xD908    BLS	L_IntToStr39
;__Lib_Conversions.c, 227 :: 		
0x225C	0x1863    ADDS	R3, R4, R1
0x225E	0x1E4A    SUBS	R2, R1, #1
0x2260	0xB292    UXTH	R2, R2
0x2262	0x18A2    ADDS	R2, R4, R2
0x2264	0x7812    LDRB	R2, [R2, #0]
0x2266	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 228 :: 		
0x2268	0x1E49    SUBS	R1, R1, #1
0x226A	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 229 :: 		
; i end address is: 4 (R1)
0x226C	0xE7F4    B	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c, 230 :: 		
0x226E	0x2220    MOVS	R2, #32
0x2270	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 231 :: 		
0x2272	0xB170    CBZ	R0, L_IntToStr40
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 232 :: 		
; i start address is: 0 (R0)
0x2274	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x2276	0xB281    UXTH	R1, R0
0x2278	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 233 :: 		
L_IntToStr41:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x227A	0x1842    ADDS	R2, R0, R1
0x227C	0x7812    LDRB	R2, [R2, #0]
0x227E	0x2A20    CMP	R2, #32
0x2280	0xD102    BNE	L_IntToStr42
0x2282	0x1C49    ADDS	R1, R1, #1
0x2284	0xB289    UXTH	R1, R1
0x2286	0xE7F8    B	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c, 234 :: 		
0x2288	0x1E4A    SUBS	R2, R1, #1
0x228A	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 235 :: 		
0x228C	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x228E	0x222D    MOVS	R2, #45
0x2290	0x701A    STRB	R2, [R3, #0]
L_IntToStr40:
;__Lib_Conversions.c, 236 :: 		
L_end_IntToStr:
0x2292	0xF8DDE000  LDR	LR, [SP, #0]
0x2296	0xB001    ADD	SP, SP, #4
0x2298	0x4770    BX	LR
; end of _IntToStr
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x1A34	0xB081    SUB	SP, SP, #4
0x1A36	0x460A    MOV	R2, R1
0x1A38	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x1A3A	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x1A3C	0xB28D    UXTH	R5, R1
0x1A3E	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x1A40	0x2805    CMP	R0, #5
0x1A42	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x1A44	0x180B    ADDS	R3, R1, R0
0x1A46	0x2220    MOVS	R2, #32
0x1A48	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x1A4A	0x1C40    ADDS	R0, R0, #1
0x1A4C	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x1A4E	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x1A50	0x180B    ADDS	R3, R1, R0
0x1A52	0x2200    MOVS	R2, #0
0x1A54	0x701A    STRB	R2, [R3, #0]
0x1A56	0x1E40    SUBS	R0, R0, #1
0x1A58	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1A5A	0x180C    ADDS	R4, R1, R0
0x1A5C	0x230A    MOVS	R3, #10
0x1A5E	0xFBB5F2F3  UDIV	R2, R5, R3
0x1A62	0xFB035212  MLS	R2, R3, R2, R5
0x1A66	0xB292    UXTH	R2, R2
0x1A68	0x3230    ADDS	R2, #48
0x1A6A	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x1A6C	0x220A    MOVS	R2, #10
0x1A6E	0xFBB5F2F2  UDIV	R2, R5, R2
0x1A72	0xB292    UXTH	R2, R2
0x1A74	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		
0x1A76	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x1A78	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1A7A	0x1E40    SUBS	R0, R0, #1
0x1A7C	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x1A7E	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x1A80	0xB001    ADD	SP, SP, #4
0x1A82	0x4770    BX	LR
; end of _WordToStr
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 4 (R1)
; fnum start address is: 0 (R0)
0x2038	0xB082    SUB	SP, SP, #8
0x203A	0xF8CDE000  STR	LR, [SP, #0]
0x203E	0x4602    MOV	R2, R0
0x2040	0x460C    MOV	R4, R1
; str end address is: 4 (R1)
; fnum end address is: 0 (R0)
; fnum start address is: 8 (R2)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x2042	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 4 (R1)
0x2044	0x2100    MOVS	R1, #0
0x2046	0xB249    SXTB	R1, R1
;__Lib_Conversions.c, 638 :: 		
0x2048	0x9201    STR	R2, [SP, #4]
; fnum end address is: 8 (R2)
;__Lib_Conversions.c, 639 :: 		
0x204A	0x9A01    LDR	R2, [SP, #4]
0x204C	0xF1B23FFF  CMP	R2, #-1
0x2050	0xD106    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 640 :: 		
0x2052	0x4A71    LDR	R2, [PC, #452]
0x2054	0x4611    MOV	R1, R2
0x2056	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x2058	0xF7FFFD14  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x205C	0x2003    MOVS	R0, #3
0x205E	0xE0D7    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x2060	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x2062	0xAA01    ADD	R2, SP, #4
0x2064	0x1CD2    ADDS	R2, R2, #3
0x2066	0x7812    LDRB	R2, [R2, #0]
0x2068	0xF0020280  AND	R2, R2, #128
0x206C	0xB2D2    UXTB	R2, R2
0x206E	0xB172    CBZ	R2, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x2070	0xAA01    ADD	R2, SP, #4
0x2072	0x1CD3    ADDS	R3, R2, #3
0x2074	0x781A    LDRB	R2, [R3, #0]
0x2076	0xF0820280  EOR	R2, R2, #128
0x207A	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 646 :: 		
0x207C	0x1C6A    ADDS	R2, R5, #1
; i end address is: 20 (R5)
; i start address is: 12 (R3)
0x207E	0xB2D3    UXTB	R3, R2
;__Lib_Conversions.c, 647 :: 		
0x2080	0x222D    MOVS	R2, #45
0x2082	0x7022    STRB	R2, [R4, #0]
0x2084	0x1C62    ADDS	R2, R4, #1
0x2086	0x4614    MOV	R4, R2
; i end address is: 12 (R3)
; str end address is: 16 (R4)
0x2088	0xB2DE    UXTB	R6, R3
0x208A	0x46A2    MOV	R10, R4
;__Lib_Conversions.c, 648 :: 		
0x208C	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x208E	0x46A2    MOV	R10, R4
0x2090	0xB2EE    UXTB	R6, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
0x2092	0x9A01    LDR	R2, [SP, #4]
0x2094	0xB932    CBNZ	R2, L_FloatToStr119
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
; i end address is: 24 (R6)
;__Lib_Conversions.c, 650 :: 		
0x2096	0x4A61    LDR	R2, [PC, #388]
0x2098	0x4611    MOV	R1, R2
0x209A	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x209C	0xF7FFFCF2  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x20A0	0x2000    MOVS	R0, #0
0x20A2	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x20A4	0x9A01    LDR	R2, [SP, #4]
0x20A6	0xF1B24FFF  CMP	R2, #2139095040
0x20AA	0xD106    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 654 :: 		
0x20AC	0x4A5C    LDR	R2, [PC, #368]
0x20AE	0x4611    MOV	R1, R2
0x20B0	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x20B2	0xF7FFFCE7  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x20B6	0xB2F0    UXTB	R0, R6
; i end address is: 24 (R6)
0x20B8	0xE0AA    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; str start address is: 40 (R10)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x20BA	0xFA5FF980  UXTB	R9, R0
; dexpon end address is: 4 (R1)
; str end address is: 40 (R10)
0x20BE	0xFA4FF881  SXTB	R8, R1
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 40 (R10)
; dexpon start address is: 32 (R8)
; bpoint start address is: 36 (R9)
0x20C2	0x9A01    LDR	R2, [SP, #4]
0x20C4	0xF04F507E  MOV	R0, #1065353216
0x20C8	0xF7FFFE22  BL	__Compare_FP+0
0x20CC	0xF2400000  MOVW	R0, #0
0x20D0	0xDD00    BLE	L__FloatToStr239
0x20D2	0x2001    MOVS	R0, #1
L__FloatToStr239:
0x20D4	0xB148    CBZ	R0, L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x20D6	0x9A01    LDR	R2, [SP, #4]
0x20D8	0x4852    LDR	R0, [PC, #328]
0x20DA	0xF7FFFDD3  BL	__Mul_FP+0
0x20DE	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 666 :: 		
0x20E0	0xF1A80801  SUB	R8, R8, #1
0x20E4	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 667 :: 		
0x20E8	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; str end address is: 40 (R10)
; dexpon end address is: 32 (R8)
L_FloatToStr123:
; bpoint end address is: 36 (R9)
; bpoint start address is: 36 (R9)
; dexpon start address is: 32 (R8)
; str start address is: 40 (R10)
0x20EA	0x9A01    LDR	R2, [SP, #4]
0x20EC	0x484D    LDR	R0, [PC, #308]
0x20EE	0xF7FFFE0F  BL	__Compare_FP+0
0x20F2	0xF2400000  MOVW	R0, #0
0x20F6	0xDC00    BGT	L__FloatToStr240
0x20F8	0x2001    MOVS	R0, #1
L__FloatToStr240:
0x20FA	0xB148    CBZ	R0, L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x20FC	0x9A01    LDR	R2, [SP, #4]
0x20FE	0x484A    LDR	R0, [PC, #296]
0x2100	0xF7FFFDC0  BL	__Mul_FP+0
0x2104	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 674 :: 		
0x2106	0xF1080801  ADD	R8, R8, #1
0x210A	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 675 :: 		
0x210E	0xE7EC    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x2110	0x9A01    LDR	R2, [SP, #4]
0x2112	0x0052    LSLS	R2, R2, #1
0x2114	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 689 :: 		
0x2116	0xAA01    ADD	R2, SP, #4
0x2118	0x1CD2    ADDS	R2, R2, #3
0x211A	0x7812    LDRB	R2, [R2, #0]
0x211C	0x3A7F    SUBS	R2, #127
; d start address is: 0 (R0)
0x211E	0xB2D0    UXTB	R0, R2
;__Lib_Conversions.c, 692 :: 		
0x2120	0xAA01    ADD	R2, SP, #4
0x2122	0x1CD3    ADDS	R3, R2, #3
0x2124	0x2201    MOVS	R2, #1
0x2126	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 693 :: 		
0x2128	0x9A01    LDR	R2, [SP, #4]
0x212A	0x4082    LSLS	R2, R0
; d end address is: 0 (R0)
0x212C	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 694 :: 		
0x212E	0xAA01    ADD	R2, SP, #4
0x2130	0x1CD2    ADDS	R2, R2, #3
0x2132	0x7812    LDRB	R2, [R2, #0]
0x2134	0x3230    ADDS	R2, #48
0x2136	0xF88A2000  STRB	R2, [R10, #0]
0x213A	0xF10A0001  ADD	R0, R10, #1
; str end address is: 40 (R10)
; str start address is: 0 (R0)
;__Lib_Conversions.c, 695 :: 		
0x213E	0xF1B80F01  CMP	R8, #1
0x2142	0xDB06    BLT	L__FloatToStr178
0x2144	0xF1B80F06  CMP	R8, #6
0x2148	0xDC03    BGT	L__FloatToStr177
0x214A	0x4605    MOV	R5, R0
; bpoint end address is: 36 (R9)
0x214C	0xFA5FF189  UXTB	R1, R9
0x2150	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x2152	0x222E    MOVS	R2, #46
0x2154	0x7002    STRB	R2, [R0, #0]
0x2156	0x1C45    ADDS	R5, R0, #1
; str end address is: 0 (R0)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 4 (R1)
0x2158	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
; d start address is: 0 (R0)
0x215A	0x2006    MOVS	R0, #6
; dexpon end address is: 32 (R8)
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x215C	0xFA4FF488  SXTB	R4, R8
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x2160	0xB300    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x2162	0xAA01    ADD	R2, SP, #4
0x2164	0x1CD3    ADDS	R3, R2, #3
0x2166	0x2200    MOVS	R2, #0
0x2168	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 701 :: 		
0x216A	0x9A01    LDR	R2, [SP, #4]
0x216C	0x0093    LSLS	R3, R2, #2
0x216E	0x9A01    LDR	R2, [SP, #4]
0x2170	0x18D2    ADDS	R2, R2, R3
0x2172	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 702 :: 		
0x2174	0x9A01    LDR	R2, [SP, #4]
0x2176	0x0052    LSLS	R2, R2, #1
0x2178	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 703 :: 		
0x217A	0xAA01    ADD	R2, SP, #4
0x217C	0x1CD2    ADDS	R2, R2, #3
0x217E	0x7812    LDRB	R2, [R2, #0]
0x2180	0x3230    ADDS	R2, #48
0x2182	0x702A    STRB	R2, [R5, #0]
0x2184	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x2186	0xB951    CBNZ	R1, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x2188	0x1E62    SUBS	R2, R4, #1
0x218A	0xB252    SXTB	R2, R2
; dexpon end address is: 16 (R4)
; dexpon start address is: 12 (R3)
0x218C	0xB253    SXTB	R3, R2
0x218E	0xB922    CBNZ	R2, L__FloatToStr180
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 706 :: 		
0x2190	0x222E    MOVS	R2, #46
0x2192	0x702A    STRB	R2, [R5, #0]
0x2194	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x2196	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 708 :: 		
0x2198	0xE7FF    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x219A	0xB25C    SXTB	R4, R3
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; dexpon end address is: 12 (R3)
0x219C	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x219E	0x1E40    SUBS	R0, R0, #1
0x21A0	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x21A2	0xE7DD    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x21A4	0x4629    MOV	R1, R5
; dexpon end address is: 16 (R4)
0x21A6	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 4 (R1)
0x21A8	0x1E4A    SUBS	R2, R1, #1
0x21AA	0x7812    LDRB	R2, [R2, #0]
0x21AC	0x2A30    CMP	R2, #48
0x21AE	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x21B0	0x1E49    SUBS	R1, R1, #1
0x21B2	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x21B4	0x1E4A    SUBS	R2, R1, #1
0x21B6	0x7812    LDRB	R2, [R2, #0]
0x21B8	0x2A2E    CMP	R2, #46
0x21BA	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x21BC	0x1E49    SUBS	R1, R1, #1
; str end address is: 4 (R1)
0x21BE	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 4 (R1)
0x21C0	0xB310    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x21C2	0x2265    MOVS	R2, #101
0x21C4	0x700A    STRB	R2, [R1, #0]
0x21C6	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 716 :: 		
0x21C8	0x2800    CMP	R0, #0
0x21CA	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x21CC	0x222D    MOVS	R2, #45
0x21CE	0x700A    STRB	R2, [R1, #0]
0x21D0	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 718 :: 		
0x21D2	0x4242    RSBS	R2, R0, #0
0x21D4	0xB250    SXTB	R0, R2
; dexpon end address is: 0 (R0)
; str end address is: 4 (R1)
0x21D6	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x21D8	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x21DA	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 4 (R1)
; d start address is: 0 (R0)
0x21DC	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x21DE	0xB2DA    UXTB	R2, R3
; dexpon end address is: 12 (R3)
0x21E0	0x2A09    CMP	R2, #9
0x21E2	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x21E4	0x220A    MOVS	R2, #10
0x21E6	0xFBB0F2F2  UDIV	R2, R0, R2
0x21EA	0xB2D2    UXTB	R2, R2
0x21EC	0x3230    ADDS	R2, #48
0x21EE	0x700A    STRB	R2, [R1, #0]
0x21F0	0x1C49    ADDS	R1, R1, #1
; str end address is: 4 (R1)
0x21F2	0xE7FF    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 4 (R1)
0x21F4	0x230A    MOVS	R3, #10
0x21F6	0xFBB0F2F3  UDIV	R2, R0, R3
0x21FA	0xFB030212  MLS	R2, R3, R2, R0
0x21FE	0xB2D2    UXTB	R2, R2
; d end address is: 0 (R0)
0x2200	0x3230    ADDS	R2, #48
0x2202	0x700A    STRB	R2, [R1, #0]
0x2204	0x1C48    ADDS	R0, R1, #1
; str end address is: 4 (R1)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x2206	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x2208	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x220A	0x2200    MOVS	R2, #0
0x220C	0x7002    STRB	R2, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x220E	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x2210	0xF8DDE000  LDR	LR, [SP, #0]
0x2214	0xB002    ADD	SP, SP, #8
0x2216	0x4770    BX	LR
0x2218	0x01D12000  	?lstr1___Lib_Conversions+0
0x221C	0x01D52000  	?lstr2___Lib_Conversions+0
0x2220	0x01D72000  	?lstr3___Lib_Conversions+0
0x2224	0x00004120  	#1092616192
0x2228	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x1A84	0xB081    SUB	SP, SP, #4
0x1A86	0x9100    STR	R1, [SP, #0]
0x1A88	0x4601    MOV	R1, R0
0x1A8A	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x1A8C	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x1A8E	0x461C    MOV	R4, R3
0x1A90	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x1A92	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x1A94	0x4603    MOV	R3, R0
0x1A96	0x1C42    ADDS	R2, R0, #1
0x1A98	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x1A9A	0x781A    LDRB	R2, [R3, #0]
0x1A9C	0x7022    STRB	R2, [R4, #0]
0x1A9E	0x7822    LDRB	R2, [R4, #0]
0x1AA0	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x1AA2	0x462B    MOV	R3, R5
0x1AA4	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x1AA6	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x1AA8	0xB001    ADD	SP, SP, #4
0x1AAA	0x4770    BX	LR
; end of _strcpy
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x1D10	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x1D12	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x1D14	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x1D16	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x1D18	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x1D1A	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x1D1E	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x1D22	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x1D24	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x1D26	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x1D28	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x1D2A	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x1D2C	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x1D2E	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x1D30	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x1D32	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x1D34	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x1D36	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x1D3A	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x1D3E	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x1D40	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x1D42	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x1D46	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x1D4A	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x1D4C	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x1D4E	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x1D52	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x1D56	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x1D58	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x1D5A	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x1D5C	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x1D5E	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x1D60	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x1D62	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x1D64	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x1D66	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x1D68	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x1D6A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x1D6C	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x1D6E	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x1D70	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x1D74	0xB001    ADD	SP, SP, #4
0x1D76	0x4770    BX	LR
; end of __Compare_FP
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x1C84	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x1C86	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x1C88	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x1C8C	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x1C8E	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x1C92	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x1C96	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x1C9A	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x1C9E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x1CA0	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x1CA2	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x1CA6	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x1CAA	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x1CAC	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x1CAE	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x1CB0	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x1CB4	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x1CB8	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x1CBA	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x1CBC	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x1CC0	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x1CC4	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x1CC6	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x1CC8	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x1CCA	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x1CCC	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x1CD0	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x1CD2	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x1CD4	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x1CD6	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x1CD8	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x1CDA	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x1CDC	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x1CDE	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x1CE0	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x1CE2	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x1CE4	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x1CE8	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x1CEA	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x1CEC	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x1CEE	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x1CF2	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x1CF6	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x1CFA	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x1CFC	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x1CFE	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x1D00	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x1D02	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x1D06	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x1D0A	0xB001    ADD	SP, SP, #4
0x1D0C	0x4770    BX	LR
; end of __Mul_FP
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x28F8	0xB081    SUB	SP, SP, #4
0x28FA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x28FE	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x2900	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x2902	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2904	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x2906	0xF64B3080  MOVW	R0, #48000
0x290A	0x4281    CMP	R1, R0
0x290C	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x290E	0x4846    LDR	R0, [PC, #280]
0x2910	0x6800    LDR	R0, [R0, #0]
0x2912	0xF0400102  ORR	R1, R0, #2
0x2916	0x4844    LDR	R0, [PC, #272]
0x2918	0x6001    STR	R1, [R0, #0]
0x291A	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x291C	0xF64550C0  MOVW	R0, #24000
0x2920	0x4281    CMP	R1, R0
0x2922	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x2924	0x4840    LDR	R0, [PC, #256]
0x2926	0x6800    LDR	R0, [R0, #0]
0x2928	0xF0400101  ORR	R1, R0, #1
0x292C	0x483E    LDR	R0, [PC, #248]
0x292E	0x6001    STR	R1, [R0, #0]
0x2930	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x2932	0x483D    LDR	R0, [PC, #244]
0x2934	0x6801    LDR	R1, [R0, #0]
0x2936	0xF06F0007  MVN	R0, #7
0x293A	0x4001    ANDS	R1, R0
0x293C	0x483A    LDR	R0, [PC, #232]
0x293E	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x2940	0xF7FFFDDC  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x2944	0x4839    LDR	R0, [PC, #228]
0x2946	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x2948	0x4839    LDR	R0, [PC, #228]
0x294A	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x294C	0x4839    LDR	R0, [PC, #228]
0x294E	0xEA020100  AND	R1, R2, R0, LSL #0
0x2952	0x4839    LDR	R0, [PC, #228]
0x2954	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x2956	0xF0020001  AND	R0, R2, #1
0x295A	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x295C	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x295E	0x4836    LDR	R0, [PC, #216]
0x2960	0x6800    LDR	R0, [R0, #0]
0x2962	0xF0000002  AND	R0, R0, #2
0x2966	0x2800    CMP	R0, #0
0x2968	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x296A	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x296C	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x296E	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2970	0xF4023080  AND	R0, R2, #65536
0x2974	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x2976	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x2978	0x482F    LDR	R0, [PC, #188]
0x297A	0x6800    LDR	R0, [R0, #0]
0x297C	0xF4003000  AND	R0, R0, #131072
0x2980	0x2800    CMP	R0, #0
0x2982	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x2984	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x2986	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x2988	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x298A	0xF0025080  AND	R0, R2, #268435456
0x298E	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x2990	0x4829    LDR	R0, [PC, #164]
0x2992	0x6800    LDR	R0, [R0, #0]
0x2994	0xF0405180  ORR	R1, R0, #268435456
0x2998	0x4827    LDR	R0, [PC, #156]
0x299A	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x299C	0x4826    LDR	R0, [PC, #152]
0x299E	0x6800    LDR	R0, [R0, #0]
0x29A0	0xF0005000  AND	R0, R0, #536870912
0x29A4	0x2800    CMP	R0, #0
0x29A6	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x29A8	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x29AA	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x29AC	0xF0026080  AND	R0, R2, #67108864
0x29B0	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x29B2	0x4821    LDR	R0, [PC, #132]
0x29B4	0x6800    LDR	R0, [R0, #0]
0x29B6	0xF0406180  ORR	R1, R0, #67108864
0x29BA	0x481F    LDR	R0, [PC, #124]
0x29BC	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x29BE	0x4611    MOV	R1, R2
0x29C0	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x29C2	0x481D    LDR	R0, [PC, #116]
0x29C4	0x6800    LDR	R0, [R0, #0]
0x29C6	0xF0006000  AND	R0, R0, #134217728
0x29CA	0x2800    CMP	R0, #0
0x29CC	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x29CE	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x29D0	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x29D2	0x4611    MOV	R1, R2
0x29D4	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x29D6	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x29DA	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x29DC	0x4816    LDR	R0, [PC, #88]
0x29DE	0x6800    LDR	R0, [R0, #0]
0x29E0	0xF0407180  ORR	R1, R0, #16777216
0x29E4	0x4814    LDR	R0, [PC, #80]
0x29E6	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x29E8	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x29EA	0x4813    LDR	R0, [PC, #76]
0x29EC	0x6800    LDR	R0, [R0, #0]
0x29EE	0xF0007000  AND	R0, R0, #33554432
0x29F2	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x29F4	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x29F6	0x460A    MOV	R2, R1
0x29F8	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x29FA	0x480C    LDR	R0, [PC, #48]
0x29FC	0x6800    LDR	R0, [R0, #0]
0x29FE	0xF000010C  AND	R1, R0, #12
0x2A02	0x0090    LSLS	R0, R2, #2
0x2A04	0xF000000C  AND	R0, R0, #12
0x2A08	0x4281    CMP	R1, R0
0x2A0A	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2A0C	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x2A0E	0xF8DDE000  LDR	LR, [SP, #0]
0x2A12	0xB001    ADD	SP, SP, #4
0x2A14	0x4770    BX	LR
0x2A16	0xBF00    NOP
0x2A18	0x00810501  	#83951745
0x2A1C	0x8402001D  	#1934338
0x2A20	0x06440001  	#67140
0x2A24	0x19400001  	#72000
0x2A28	0x20004002  	FLASH_ACR+0
0x2A2C	0x10044002  	RCC_CFGR+0
0x2A30	0x102C4002  	RCC_CFGR2+0
0x2A34	0xFFFF000F  	#1048575
0x2A38	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x24FC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x24FE	0x4815    LDR	R0, [PC, #84]
0x2500	0x6800    LDR	R0, [R0, #0]
0x2502	0xF0400101  ORR	R1, R0, #1
0x2506	0x4813    LDR	R0, [PC, #76]
0x2508	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x250A	0x4913    LDR	R1, [PC, #76]
0x250C	0x4813    LDR	R0, [PC, #76]
0x250E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x2510	0x4810    LDR	R0, [PC, #64]
0x2512	0x6801    LDR	R1, [R0, #0]
0x2514	0x4812    LDR	R0, [PC, #72]
0x2516	0x4001    ANDS	R1, R0
0x2518	0x480E    LDR	R0, [PC, #56]
0x251A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x251C	0x480D    LDR	R0, [PC, #52]
0x251E	0x6801    LDR	R1, [R0, #0]
0x2520	0xF46F2080  MVN	R0, #262144
0x2524	0x4001    ANDS	R1, R0
0x2526	0x480B    LDR	R0, [PC, #44]
0x2528	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x252A	0x480C    LDR	R0, [PC, #48]
0x252C	0x6801    LDR	R1, [R0, #0]
0x252E	0xF46F00FE  MVN	R0, #8323072
0x2532	0x4001    ANDS	R1, R0
0x2534	0x4809    LDR	R0, [PC, #36]
0x2536	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x2538	0x4806    LDR	R0, [PC, #24]
0x253A	0x6801    LDR	R1, [R0, #0]
0x253C	0xF06F50A0  MVN	R0, #335544320
0x2540	0x4001    ANDS	R1, R0
0x2542	0x4804    LDR	R0, [PC, #16]
0x2544	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x2546	0xF04F0100  MOV	R1, #0
0x254A	0x4806    LDR	R0, [PC, #24]
0x254C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x254E	0xB001    ADD	SP, SP, #4
0x2550	0x4770    BX	LR
0x2552	0xBF00    NOP
0x2554	0x10004002  	RCC_CR+0
0x2558	0x0000F0FF  	#-251723776
0x255C	0x10044002  	RCC_CFGR+0
0x2560	0xFFFFFEF6  	#-17367041
0x2564	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x28DC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x28DE	0x4902    LDR	R1, [PC, #8]
0x28E0	0x4802    LDR	R0, [PC, #8]
0x28E2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x28E4	0xB001    ADD	SP, SP, #4
0x28E6	0x4770    BX	LR
0x28E8	0x19400001  	#72000
0x28EC	0x024C2000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x28F0	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x28F2	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x28F4	0xB001    ADD	SP, SP, #4
0x28F6	0x4770    BX	LR
; end of ___GenExcept
0x2E70	0xB500    PUSH	(R14)
0x2E72	0xF8DFB024  LDR	R11, [PC, #36]
0x2E76	0xF8DFA024  LDR	R10, [PC, #36]
0x2E7A	0xF8DFC024  LDR	R12, [PC, #36]
0x2E7E	0xF7FFFD05  BL	10380
0x2E82	0xF8DFB020  LDR	R11, [PC, #32]
0x2E86	0xF8DFA020  LDR	R10, [PC, #32]
0x2E8A	0xF8DFC020  LDR	R12, [PC, #32]
0x2E8E	0xF7FFFCFD  BL	10380
0x2E92	0xBD00    POP	(R15)
0x2E94	0x4770    BX	LR
0x2E96	0xBF00    NOP
0x2E98	0x00002000  	#536870912
0x2E9C	0x01DB2000  	#536871387
0x2EA0	0x2A5C0000  	#10844
0x2EA4	0x01DC2000  	#536871388
0x2EA8	0x01E82000  	#536871400
0x2EAC	0x2E580000  	#11864
0x2F0C	0xB500    PUSH	(R14)
0x2F0E	0xF8DFB010  LDR	R11, [PC, #16]
0x2F12	0xF8DFA010  LDR	R10, [PC, #16]
0x2F16	0xF7FFFCC3  BL	10400
0x2F1A	0xBD00    POP	(R15)
0x2F1C	0x4770    BX	LR
0x2F1E	0xBF00    NOP
0x2F20	0x00002000  	#536870912
0x2F24	0x02782000  	#536871544
;Click_Accel8_STM.c,19 :: __ACCEL8_I2C_CFG [4]
0x262C	0x000186A0 ;__ACCEL8_I2C_CFG+0
; end of __ACCEL8_I2C_CFG
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x2684	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;,0 :: _initBlock_2 [44]
; Containing: ?ICS?lstr1_Click_Accel8_STM [21]
;             ?ICS?lstr2_Click_Accel8_STM [23]
0x2A5C	0x2D2D2D20 ;_initBlock_2+0 : ?ICS?lstr1_Click_Accel8_STM at 0x2A5C
0x2A60	0x73795320 ;_initBlock_2+4
0x2A64	0x206D6574 ;_initBlock_2+8
0x2A68	0x74696E49 ;_initBlock_2+12
0x2A6C	0x2D2D2D20 ;_initBlock_2+16
0x2A70	0x2D2D2000 ;_initBlock_2+20 : ?ICS?lstr2_Click_Accel8_STM at 0x2A71
0x2A74	0x6544202D ;_initBlock_2+24
0x2A78	0x65636976 ;_initBlock_2+28
0x2A7C	0x73655220 ;_initBlock_2+32
0x2A80	0x2D207465 ;_initBlock_2+36
0x2A84	0x00202D2D ;_initBlock_2+40
; end of _initBlock_2
;,0 :: _initBlock_3 [108]
; Containing: ?ICS?lstr3_Click_Accel8_STM [31]
;             ?ICS?lstr4_Click_Accel8_STM [28]
;             ?ICS?lstr5_Click_Accel8_STM [49]
0x2A88	0x2D2D2D20 ;_initBlock_3+0 : ?ICS?lstr3_Click_Accel8_STM at 0x2A88
0x2A8C	0x76654420 ;_initBlock_3+4
0x2A90	0x20656369 ;_initBlock_3+8
0x2A94	0x666E6F43 ;_initBlock_3+12
0x2A98	0x72756769 ;_initBlock_3+16
0x2A9C	0x6F697461 ;_initBlock_3+20
0x2AA0	0x2D2D206E ;_initBlock_3+24
0x2AA4	0x2000202D ;_initBlock_3+28 : ?ICS?lstr4_Click_Accel8_STM at 0x2AA7
0x2AA8	0x202D2D2D ;_initBlock_3+32
0x2AAC	0x72617453 ;_initBlock_3+36
0x2AB0	0x654D2074 ;_initBlock_3+40
0x2AB4	0x72757361 ;_initBlock_3+44
0x2AB8	0x6E656D65 ;_initBlock_3+48
0x2ABC	0x2D2D2074 ;_initBlock_3+52
0x2AC0	0x5F00202D ;_initBlock_3+56 : ?ICS?lstr5_Click_Accel8_STM at 0x2AC3
0x2AC4	0x5F5F5F5F ;_initBlock_3+60
0x2AC8	0x5F5F5F5F ;_initBlock_3+64
0x2ACC	0x5F5F5F5F ;_initBlock_3+68
0x2AD0	0x205F5F5F ;_initBlock_3+72
0x2AD4	0x65636341 ;_initBlock_3+76
0x2AD8	0x2038206C ;_initBlock_3+80
0x2ADC	0x63696C63 ;_initBlock_3+84
0x2AE0	0x5F5F206B ;_initBlock_3+88
0x2AE4	0x5F5F5F5F ;_initBlock_3+92
0x2AE8	0x5F5F5F5F ;_initBlock_3+96
0x2AEC	0x5F5F5F5F ;_initBlock_3+100
0x2AF0	0x005F5F5F ;_initBlock_3+104
; end of _initBlock_3
;,0 :: _initBlock_4 [98]
; Containing: ?ICS?lstr6_Click_Accel8_STM [49]
;             ?ICS?lstr7_Click_Accel8_STM [49]
0x2AF4	0x4420207C ;_initBlock_4+0 : ?ICS?lstr6_Click_Accel8_STM at 0x2AF4
0x2AF8	0x20617461 ;_initBlock_4+4
0x2AFC	0x207C2020 ;_initBlock_4+8
0x2B00	0x78612058 ;_initBlock_4+12
0x2B04	0x7C207369 ;_initBlock_4+16
0x2B08	0x61205920 ;_initBlock_4+20
0x2B0C	0x20736978 ;_initBlock_4+24
0x2B10	0x205A207C ;_initBlock_4+28
0x2B14	0x73697861 ;_initBlock_4+32
0x2B18	0x20207C20 ;_initBlock_4+36
0x2B1C	0x676E6152 ;_initBlock_4+40
0x2B20	0x7C202065 ;_initBlock_4+44
0x2B24	0x5F5F7C00 ;_initBlock_4+48 : ?ICS?lstr7_Click_Accel8_STM at 0x2B25
0x2B28	0x5F5F5F5F ;_initBlock_4+52
0x2B2C	0x7C5F5F5F ;_initBlock_4+56
0x2B30	0x5F5F5F5F ;_initBlock_4+60
0x2B34	0x5F5F5F5F ;_initBlock_4+64
0x2B38	0x5F5F5F7C ;_initBlock_4+68
0x2B3C	0x5F5F5F5F ;_initBlock_4+72
0x2B40	0x5F5F7C5F ;_initBlock_4+76
0x2B44	0x5F5F5F5F ;_initBlock_4+80
0x2B48	0x5F7C5F5F ;_initBlock_4+84
0x2B4C	0x5F5F5F5F ;_initBlock_4+88
0x2B50	0x5F5F5F5F ;_initBlock_4+92
0x2B54	0x007C ;_initBlock_4+96
; end of _initBlock_4
;Click_Accel8_STM.c,0 :: ?ICS?lstr8_Click_Accel8_STM [12]
0x2B56	0x4120207C ;?ICS?lstr8_Click_Accel8_STM+0
0x2B5A	0x6C656363 ;?ICS?lstr8_Click_Accel8_STM+4
0x2B5E	0x007C2020 ;?ICS?lstr8_Click_Accel8_STM+8
; end of ?ICS?lstr8_Click_Accel8_STM
;Click_Accel8_STM.c,0 :: ?ICS?lstr9_Click_Accel8_STM [4]
0x2B62	0x007C2020 ;?ICS?lstr9_Click_Accel8_STM+0
; end of ?ICS?lstr9_Click_Accel8_STM
;Click_Accel8_STM.c,0 :: ?ICS?lstr10_Click_Accel8_STM [4]
0x2B66	0x007C2020 ;?ICS?lstr10_Click_Accel8_STM+0
; end of ?ICS?lstr10_Click_Accel8_STM
;Click_Accel8_STM.c,0 :: ?ICS?lstr11_Click_Accel8_STM [4]
0x2B6A	0x007C2020 ;?ICS?lstr11_Click_Accel8_STM+0
; end of ?ICS?lstr11_Click_Accel8_STM
;,0 :: _initBlock_9 [54]
; Containing: ?ICS?lstr12_Click_Accel8_STM [5]
;             ?ICS?lstr13_Click_Accel8_STM [49]
0x2B6E	0x7C206720 ;_initBlock_9+0 : ?ICS?lstr12_Click_Accel8_STM at 0x2B6E
0x2B72	0x5F5F7C00 ;_initBlock_9+4 : ?ICS?lstr13_Click_Accel8_STM at 0x2B73
0x2B76	0x5F5F5F5F ;_initBlock_9+8
0x2B7A	0x7C5F5F5F ;_initBlock_9+12
0x2B7E	0x5F5F5F5F ;_initBlock_9+16
0x2B82	0x5F5F5F5F ;_initBlock_9+20
0x2B86	0x5F5F5F7C ;_initBlock_9+24
0x2B8A	0x5F5F5F5F ;_initBlock_9+28
0x2B8E	0x5F5F7C5F ;_initBlock_9+32
0x2B92	0x5F5F5F5F ;_initBlock_9+36
0x2B96	0x5F7C5F5F ;_initBlock_9+40
0x2B9A	0x5F5F5F5F ;_initBlock_9+44
0x2B9E	0x5F5F5F5F ;_initBlock_9+48
0x2BA2	0x007C ;_initBlock_9+52
; end of _initBlock_9
;Click_Accel8_STM.c,0 :: ?ICS?lstr14_Click_Accel8_STM [12]
0x2BA4	0x4720207C ;?ICS?lstr14_Click_Accel8_STM+0
0x2BA8	0x206F7279 ;?ICS?lstr14_Click_Accel8_STM+4
0x2BAC	0x007C2020 ;?ICS?lstr14_Click_Accel8_STM+8
; end of ?ICS?lstr14_Click_Accel8_STM
;Click_Accel8_STM.c,0 :: ?ICS?lstr15_Click_Accel8_STM [4]
0x2BB0	0x007C2020 ;?ICS?lstr15_Click_Accel8_STM+0
; end of ?ICS?lstr15_Click_Accel8_STM
;Click_Accel8_STM.c,0 :: ?ICS?lstr16_Click_Accel8_STM [4]
0x2BB4	0x007C2020 ;?ICS?lstr16_Click_Accel8_STM+0
; end of ?ICS?lstr16_Click_Accel8_STM
;Click_Accel8_STM.c,0 :: ?ICS?lstr17_Click_Accel8_STM [4]
0x2BB8	0x007C2020 ;?ICS?lstr17_Click_Accel8_STM+0
; end of ?ICS?lstr17_Click_Accel8_STM
;,0 :: _initBlock_14 [54]
; Containing: ?ICS?lstr18_Click_Accel8_STM [5]
;             ?ICS?lstr19_Click_Accel8_STM [49]
0x2BBC	0x7C737064 ;_initBlock_14+0 : ?ICS?lstr18_Click_Accel8_STM at 0x2BBC
0x2BC0	0x5F5F7C00 ;_initBlock_14+4 : ?ICS?lstr19_Click_Accel8_STM at 0x2BC1
0x2BC4	0x5F5F5F5F ;_initBlock_14+8
0x2BC8	0x7C5F5F5F ;_initBlock_14+12
0x2BCC	0x5F5F5F5F ;_initBlock_14+16
0x2BD0	0x5F5F5F5F ;_initBlock_14+20
0x2BD4	0x5F5F5F7C ;_initBlock_14+24
0x2BD8	0x5F5F5F5F ;_initBlock_14+28
0x2BDC	0x5F5F7C5F ;_initBlock_14+32
0x2BE0	0x5F5F5F5F ;_initBlock_14+36
0x2BE4	0x5F7C5F5F ;_initBlock_14+40
0x2BE8	0x5F5F5F5F ;_initBlock_14+44
0x2BEC	0x5F5F5F5F ;_initBlock_14+48
0x2BF0	0x007C ;_initBlock_14+52
; end of _initBlock_14
;Click_Accel8_STM.c,0 :: ?ICS?lstr20_Click_Accel8_STM [12]
0x2BF2	0x5420207C ;?ICS?lstr20_Click_Accel8_STM+0
0x2BF6	0x20706D65 ;?ICS?lstr20_Click_Accel8_STM+4
0x2BFA	0x007C2020 ;?ICS?lstr20_Click_Accel8_STM+8
; end of ?ICS?lstr20_Click_Accel8_STM
;Click_Accel8_STM.c,0 :: ?ICS?lstr21_Click_Accel8_STM [14]
0x2BFE	0x20432020 ;?ICS?lstr21_Click_Accel8_STM+0
0x2C02	0x20202020 ;?ICS?lstr21_Click_Accel8_STM+4
0x2C06	0x20202020 ;?ICS?lstr21_Click_Accel8_STM+8
0x2C0A	0x007C ;?ICS?lstr21_Click_Accel8_STM+12
; end of ?ICS?lstr21_Click_Accel8_STM
;Click_Accel8_STM.c,0 :: ?ICS?lstr22_Click_Accel8_STM [30]
0x2C0C	0x5F5F5F7C ;?ICS?lstr22_Click_Accel8_STM+0
0x2C10	0x5F5F5F5F ;?ICS?lstr22_Click_Accel8_STM+4
0x2C14	0x5F7C5F5F ;?ICS?lstr22_Click_Accel8_STM+8
0x2C18	0x5F5F5F5F ;?ICS?lstr22_Click_Accel8_STM+12
0x2C1C	0x5F5F5F5F ;?ICS?lstr22_Click_Accel8_STM+16
0x2C20	0x5F5F5F5F ;?ICS?lstr22_Click_Accel8_STM+20
0x2C24	0x5F5F5F5F ;?ICS?lstr22_Click_Accel8_STM+24
0x2C28	0x007C ;?ICS?lstr22_Click_Accel8_STM+28
; end of ?ICS?lstr22_Click_Accel8_STM
;,0 :: _initBlock_18 [13]
; Containing: ?ICS?lstr23_Click_Accel8_STM [3]
;             ?ICS?lstr1___Lib_Conversions [4]
;             ?ICS?lstr2___Lib_Conversions [2]
;             ?ICS?lstr3___Lib_Conversions [4]
0x2C2A	0x4E002020 ;_initBlock_18+0 : ?ICS?lstr23_Click_Accel8_STM at 0x2C2A : ?ICS?lstr1___Lib_Conversions at 0x2C2D
0x2C2E	0x30004E61 ;_initBlock_18+4 : ?ICS?lstr2___Lib_Conversions at 0x2C31
0x2C32	0x464E4900 ;_initBlock_18+8 : ?ICS?lstr3___Lib_Conversions at 0x2C33
0x2C36	0x00 ;_initBlock_18+12
; end of _initBlock_18
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x2C38	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x2C3C	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x2C40	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x2C44	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x2C48	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x2C4C	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x2C50	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x2C54	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x2C58	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x2C5C	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x2C60	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x2C64	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x2C68	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x2C6C	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x2C70	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x2C74	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x2C78	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x2C7C	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x2C80	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x2C84	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x2C88	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x2C8C	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x2C90	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x2C94	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x2C98	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x2C9C	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x2CA0	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x2CA4	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x2CA8	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x2CAC	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x2CB0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x2CB4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x2CB8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x2CBC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x2CC0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x2CC4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x2CC8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x2CCC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x2CD0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x2CD4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x2CD8	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x2CDC	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x2CE0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2CE4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x2CE8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2CEC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x2CF0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2CF4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2CF8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2CFC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x2D00	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2D04	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2D08	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2D0C	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x2D10	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x2D14	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x2D18	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x2D1C	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x2D20	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x2D24	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x2D28	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x2D2C	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x2D30	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x2D34	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x2D38	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x2D3C	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x2D40	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x2D44	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x2D48	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x2D4C	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x2D50	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x2D54	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x2D58	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x2D5C	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x2D60	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x2D64	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x2D68	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x2D6C	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x2D70	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x2D74	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x2D78	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;__Lib_GPIO_32F10x_Defs.c,680 :: __GPIO_MODULE_I2C1_PB67 [108]
0x2D7C	0x00000016 ;__GPIO_MODULE_I2C1_PB67+0
0x2D80	0x00000017 ;__GPIO_MODULE_I2C1_PB67+4
0x2D84	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x2D88	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x2D8C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x2D90	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x2D94	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x2D98	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x2D9C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x2DA0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x2DA4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x2DA8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x2DAC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x2DB0	0x00000828 ;__GPIO_MODULE_I2C1_PB67+52
0x2DB4	0x00000828 ;__GPIO_MODULE_I2C1_PB67+56
0x2DB8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x2DBC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x2DC0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x2DC4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x2DC8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x2DCC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x2DD0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x2DD4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x2DD8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x2DDC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x2DE0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x2DE4	0x00000002 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x2DE8	0x00000289 ;__MIKROBUS1_GPIO+0
0x2DEC	0x0000027D ;__MIKROBUS1_GPIO+4
0x2DF0	0x00000271 ;__MIKROBUS1_GPIO+8
0x2DF4	0x00000295 ;__MIKROBUS1_GPIO+12
0x2DF8	0x000002B9 ;__MIKROBUS1_GPIO+16
0x2DFC	0x000002AD ;__MIKROBUS1_GPIO+20
0x2E00	0x000002A1 ;__MIKROBUS1_GPIO+24
0x2E04	0x00000265 ;__MIKROBUS1_GPIO+28
0x2E08	0x00000235 ;__MIKROBUS1_GPIO+32
0x2E0C	0x00000229 ;__MIKROBUS1_GPIO+36
0x2E10	0x00000241 ;__MIKROBUS1_GPIO+40
0x2E14	0x00000259 ;__MIKROBUS1_GPIO+44
0x2E18	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x2E1C	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x2E20	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x2E24	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x2E28	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x2E2C	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x2E30	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x2E34	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x2E38	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x2E3C	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x2E40	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x2E44	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;__Lib_System_105_107.c,447 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x2E48	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x2E4C	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x2E50	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x2E54	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C1_TIMEOUT [4]
0x2E58	0x00000000 ;?ICS__Lib_I2C_12__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C1_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C2_TIMEOUT [4]
0x2E5C	0x00000000 ;?ICS__Lib_I2C_12__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C2_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2Cx_TIMEOUT [4]
0x2E60	0x00000000 ;?ICS__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_I2C [12]
0x2E64	0x00001645 ;__MIKROBUS1_I2C+0
0x2E68	0x000014B5 ;__MIKROBUS1_I2C+4
0x2E6C	0x000012D5 ;__MIKROBUS1_I2C+8
; end of __MIKROBUS1_I2C
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [24]    _I2Cx_Is_Idle
0x0168     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x0200      [12]    _Get_Fosc_kHz
0x020C      [26]    _I2Cx_Get_Status
0x0228      [12]    easymx_v7_STM32F107VC__setTX_1
0x0234      [12]    easymx_v7_STM32F107VC__setRX_1
0x0240      [12]    easymx_v7_STM32F107VC__setSCL_1
0x024C      [12]    easymx_v7_STM32F107VC__setAN_2
0x0258      [12]    easymx_v7_STM32F107VC__setSDA_1
0x0264      [12]    easymx_v7_STM32F107VC__setINT_1
0x0270      [12]    easymx_v7_STM32F107VC__setCS_1
0x027C      [12]    easymx_v7_STM32F107VC__setRST_1
0x0288      [12]    easymx_v7_STM32F107VC__setAN_1
0x0294      [12]    easymx_v7_STM32F107VC__setSCK_1
0x02A0      [12]    easymx_v7_STM32F107VC__setPWM_1
0x02AC      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x02B8      [12]    easymx_v7_STM32F107VC__setMISO_1
0x02C4      [12]    easymx_v7_STM32F107VC__setSCL_2
0x02D0      [12]    easymx_v7_STM32F107VC__setTX_2
0x02DC      [12]    easymx_v7_STM32F107VC__setRX_2
0x02E8      [12]    easymx_v7_STM32F107VC__setSDA_2
0x02F4    [1116]    _I2Cx_Read
0x0750      [36]    _ChekXForEvent
0x0774     [144]    __Lib_I2C_12_I2Cx_Wait_For_Idle
0x0804      [12]    easymx_v7_STM32F107VC__setSCK_2
0x0810      [12]    easymx_v7_STM32F107VC__setCS_2
0x081C      [12]    easymx_v7_STM32F107VC__setRST_2
0x0828      [12]    easymx_v7_STM32F107VC__setMISO_2
0x0834      [12]    easymx_v7_STM32F107VC__setINT_2
0x0840      [12]    easymx_v7_STM32F107VC__setPWM_2
0x084C      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x0858     [168]    _RCC_GetClocksFrequency
0x0900     [140]    _GPIO_Clk_Enable
0x098C     [272]    _GPIO_Alternate_Function_Enable
0x0A9C     [204]    _I2Cx_Start
0x0B68     [412]    _I2Cx_Init_Advanced
0x0D04     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0F48     [500]    _GPIO_Config
0x113C     [408]    _I2Cx_Write
0x12D4      [36]    _I2C1_Read
0x12F8      [36]    _I2C2_Read
0x131C      [22]    __Lib_UART_123_45_UARTx_Read
0x1334      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x1340      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x134C      [30]    __Lib_UART_123_45_UARTx_Write
0x136C      [24]    _UART2_Data_Ready
0x1384      [24]    _UART2_Read
0x139C      [28]    _UART3_Write
0x13B8      [24]    _UART3_Data_Ready
0x13D0      [24]    _UART3_Read
0x13E8      [24]    _UART2_Tx_Idle
0x1400      [28]    _UART5_Write
0x141C      [24]    _UART1_Read
0x1434      [24]    _I2C2_Start
0x144C      [24]    _UART1_Tx_Idle
0x1464      [28]    _UART4_Write
0x1480      [24]    _UART1_Data_Ready
0x1498      [28]    _UART2_Write
0x14B4      [36]    _I2C1_Write
0x14D8      [24]    _UART5_Tx_Idle
0x14F0      [28]    _UART1_Write
0x150C      [36]    __accel8_driver_hal_i2cRead
0x1530      [36]    _I2C2_Write
0x1554      [24]    _UART4_Data_Ready
0x156C      [24]    _UART4_Read
0x1584      [24]    _UART3_Tx_Idle
0x159C      [24]    _UART5_Data_Ready
0x15B4      [24]    _UART5_Read
0x15CC      [24]    _UART4_Tx_Idle
0x15E4      [40]    _UART3_Init_Advanced
0x160C      [28]    _I2C1_Init_Advanced
0x1628      [28]    _GPIO_Digital_Output
0x1644      [24]    _I2C1_Start
0x165C      [40]    _UART1_Init_Advanced
0x1684      [40]    _UART2_Init_Advanced
0x16AC      [24]    _GPIO_Digital_Input
0x16C4      [56]    easymx_v7_STM32F107VC__log_init2
0x16FC     [254]    __Add_FP
0x17FC      [44]    __accel8_driver_hal_i2cStart
0x1828      [88]    _accel8_readData
0x1880      [56]    easymx_v7_STM32F107VC__log_init1
0x18B8      [56]    easymx_v7_STM32F107VC__log_initUartB
0x18F0      [64]    __SignedIntegralToFloat
0x1930     [164]    __Div_FP
0x19D4      [40]    __accel8_driver_hal_i2cWrite
0x19FC      [56]    easymx_v7_STM32F107VC__log_initUartA
0x1A34      [80]    _WordToStr
0x1A84      [40]    _strcpy
0x1AAC      [32]    easymx_v7_STM32F107VC__i2cInit_1
0x1ACC     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x1C84     [138]    __Mul_FP
0x1D10     [104]    __Compare_FP
0x1D78      [32]    easymx_v7_STM32F107VC__log_write
0x1D98      [32]    easymx_v7_STM32F107VC__i2cInit_2
0x1DB8      [40]    __accel8_driver_hal_gpioMap
0x1DE0     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x1F98      [40]    __accel8_driver_hal_i2cMap
0x1FC0      [66]    _mikrobus_gpioInit
0x2004      [50]    _accel8_getGyroAxis
0x2038     [500]    _FloatToStr
0x222C     [110]    _IntToStr
0x229C      [48]    _accel8_getTemperature
0x22CC      [36]    _accel8_i2cDriverInit
0x22F0     [100]    _accel8_gyroConfig
0x2354      [48]    _mikrobus_i2cInit
0x2384      [70]    _mikrobus_logInit
0x23CC      [48]    _accel8_writeByte
0x23FC      [50]    _accel8_getAccelAxis
0x2430     [112]    _mikrobus_logWrite
0x24A0      [92]    _accel8_accelConfig
0x24FC     [108]    __Lib_System_105_107_SystemClockSetDefault
0x2568     [196]    _applicationInit
0x2630      [84]    _systemInit
0x2688     [516]    _applicationTask
0x288C      [20]    ___CC2DW
0x28A0      [58]    ___FillZeros
0x28DC      [20]    __Lib_System_105_107_InitialSetUpFosc
0x28F0       [8]    ___GenExcept
0x28F8     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x2A3C      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [21]    ?lstr1_Click_Accel8_STM
0x20000015      [23]    ?lstr2_Click_Accel8_STM
0x2000002C      [31]    ?lstr3_Click_Accel8_STM
0x2000004B      [28]    ?lstr4_Click_Accel8_STM
0x20000067      [49]    ?lstr5_Click_Accel8_STM
0x20000098      [49]    ?lstr6_Click_Accel8_STM
0x200000C9      [49]    ?lstr7_Click_Accel8_STM
0x200000FA      [12]    ?lstr8_Click_Accel8_STM
0x20000106       [4]    ?lstr9_Click_Accel8_STM
0x2000010A       [4]    ?lstr10_Click_Accel8_STM
0x2000010E       [4]    ?lstr11_Click_Accel8_STM
0x20000112       [5]    ?lstr12_Click_Accel8_STM
0x20000117      [49]    ?lstr13_Click_Accel8_STM
0x20000148      [12]    ?lstr14_Click_Accel8_STM
0x20000154       [4]    ?lstr15_Click_Accel8_STM
0x20000158       [4]    ?lstr16_Click_Accel8_STM
0x2000015C       [4]    ?lstr17_Click_Accel8_STM
0x20000160       [5]    ?lstr18_Click_Accel8_STM
0x20000165      [49]    ?lstr19_Click_Accel8_STM
0x20000196      [12]    ?lstr20_Click_Accel8_STM
0x200001A2      [14]    ?lstr21_Click_Accel8_STM
0x200001B0      [30]    ?lstr22_Click_Accel8_STM
0x200001CE       [3]    ?lstr23_Click_Accel8_STM
0x200001D1       [4]    ?lstr1___Lib_Conversions
0x200001D5       [2]    ?lstr2___Lib_Conversions
0x200001D7       [4]    ?lstr3___Lib_Conversions
0x200001DB       [1]    _accelRange
0x200001DC       [4]    __Lib_I2C_12__I2C1_TIMEOUT
0x200001E0       [4]    __Lib_I2C_12__I2C2_TIMEOUT
0x200001E4       [4]    __Lib_I2C_12__I2Cx_TIMEOUT
0x200001E8       [2]    _gyroRange
0x200001EA       [2]    _X_accelAxis
0x200001EC       [2]    _Y_accelAxis
0x200001EE       [2]    _Z_accelAxis
0x200001F0       [2]    _X_gyroAxis
0x200001F2       [2]    _Y_gyroAxis
0x200001F4       [2]    _Z_gyroAxis
0x200001F6       [1]    __accel8_driver__slaveAddress
0x200001F7       [1]    __accel8_driver__accelRange
0x200001F8       [4]    _Temperature
0x200001FC      [50]    _demoText
0x2000022E       [2]    __accel8_driver__gyroRange
0x20000230       [4]    _logger
0x20000234       [4]    __accel8_driver_fp_i2cRead
0x20000238       [4]    __accel8_driver_fp_i2cStart
0x2000023C       [4]    __accel8_driver_hal_gpio_intGet
0x20000240       [4]    __accel8_driver_hal_gpio_anSet
0x20000244       [4]    __accel8_driver_hal_gpio_rstSet
0x20000248       [4]    __accel8_driver_fp_i2cWrite
0x2000024C       [4]    ___System_CLOCK_IN_KHZ
0x20000250       [4]    _I2Cx_Timeout_Ptr
0x20000254       [4]    _I2C1_Timeout_Ptr
0x20000258       [4]    _I2C2_Timeout_Ptr
0x2000025C       [4]    _I2C_Start_Ptr
0x20000260       [4]    _I2C_Read_Ptr
0x20000264       [4]    _I2C_Write_Ptr
0x20000268       [4]    _UART_Wr_Ptr
0x2000026C       [4]    _UART_Rd_Ptr
0x20000270       [4]    _UART_Rdy_Ptr
0x20000274       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x262C       [4]    __ACCEL8_I2C_CFG
0x2684       [4]    __Lib_System_105_107_ADCPrescTable
0x2A5C      [21]    ?ICS?lstr1_Click_Accel8_STM
0x2A71      [23]    ?ICS?lstr2_Click_Accel8_STM
0x2A88      [31]    ?ICS?lstr3_Click_Accel8_STM
0x2AA7      [28]    ?ICS?lstr4_Click_Accel8_STM
0x2AC3      [49]    ?ICS?lstr5_Click_Accel8_STM
0x2AF4      [49]    ?ICS?lstr6_Click_Accel8_STM
0x2B25      [49]    ?ICS?lstr7_Click_Accel8_STM
0x2B56      [12]    ?ICS?lstr8_Click_Accel8_STM
0x2B62       [4]    ?ICS?lstr9_Click_Accel8_STM
0x2B66       [4]    ?ICS?lstr10_Click_Accel8_STM
0x2B6A       [4]    ?ICS?lstr11_Click_Accel8_STM
0x2B6E       [5]    ?ICS?lstr12_Click_Accel8_STM
0x2B73      [49]    ?ICS?lstr13_Click_Accel8_STM
0x2BA4      [12]    ?ICS?lstr14_Click_Accel8_STM
0x2BB0       [4]    ?ICS?lstr15_Click_Accel8_STM
0x2BB4       [4]    ?ICS?lstr16_Click_Accel8_STM
0x2BB8       [4]    ?ICS?lstr17_Click_Accel8_STM
0x2BBC       [5]    ?ICS?lstr18_Click_Accel8_STM
0x2BC1      [49]    ?ICS?lstr19_Click_Accel8_STM
0x2BF2      [12]    ?ICS?lstr20_Click_Accel8_STM
0x2BFE      [14]    ?ICS?lstr21_Click_Accel8_STM
0x2C0C      [30]    ?ICS?lstr22_Click_Accel8_STM
0x2C2A       [3]    ?ICS?lstr23_Click_Accel8_STM
0x2C2D       [4]    ?ICS?lstr1___Lib_Conversions
0x2C31       [2]    ?ICS?lstr2___Lib_Conversions
0x2C33       [4]    ?ICS?lstr3___Lib_Conversions
0x2C38     [108]    __GPIO_MODULE_USART3_PD89
0x2CA4     [108]    __GPIO_MODULE_USART1_PA9_10
0x2D10     [108]    __GPIO_MODULE_USART2_PD56
0x2D7C     [108]    __GPIO_MODULE_I2C1_PB67
0x2DE8      [96]    __MIKROBUS1_GPIO
0x2E48      [16]    __Lib_System_105_107_APBAHBPrescTable
0x2E58       [4]    ?ICS__Lib_I2C_12__I2C1_TIMEOUT
0x2E5C       [4]    ?ICS__Lib_I2C_12__I2C2_TIMEOUT
0x2E60       [4]    ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
0x2E64      [12]    __MIKROBUS1_I2C
